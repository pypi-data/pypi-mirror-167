function mockCallContainer(){if(!global.__minium_cloud_call_mocked){function e(r,i){if(typeof r!=typeof i)return!1;switch(typeof r){case"string":return!!new RegExp(r).exec(i);case"number":return r===i;case"object":if(r instanceof Array){if(r.length!=i.length)return!1;for(var n=0;n<r.length;n++)if(!e(r[n],i[n]))return!1;return!0}for(var l in r)if("success"!=l&&"fail"!=l&&"complete"!=l&&"_miniMockType"!=l){if(void 0===i[l])return!1;if(!e(r[l],i[l]))return!1}return!0}return!1}Object.defineProperty(global,"__minium_cloud_call_mocked",{value:!0,writable:!1});const r={};["callContainer","callFunction"].forEach((i=>{r[i]=wx.cloud[i],Object.defineProperty(wx.cloud,i,{configurable:!0,get:()=>function(i){return function(n){if(!global[`__minium_${i}_mock_rule`])return r[i].call(this,n);for(var l=0;l<global[`__minium_${i}_mock_rule`].length;l++){var c=global[`__minium_${i}_mock_rule`][l];if(e(c,n)){if(1===c._miniMockType&&([c]=global[`__minium_${i}_mock_rule`].splice(l,1)),console.log(`[minium] ${i} rule match`,c),c.success)return Promise.resolve(c.success);if(c.fail)return Promise.reject(c.fail);if(1===c._miniMockType)return}}return r[i].call(this,n)}}(i)})}))}}
