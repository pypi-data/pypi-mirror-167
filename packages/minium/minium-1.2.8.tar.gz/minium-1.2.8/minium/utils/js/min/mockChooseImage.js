function mockChooseImage(){let e=wx.getFileSystemManager();if(!global.__minium_mock_choose_image){let s=!1;function t(e,t,i){if(s)return!1;s=!0;const r={},a={},c={chooseImage(e){l();const s={errMsg:"chooseImage:ok",tempFilePaths:[t],tempFiles:[{path:t,size:i}]};if(!e.success&&!e.fail&&!e.complete)return Promise.resolve(s);e.success&&e.success(s),e.complete&&e.complete(s)},chooseMedia(e){l();const s={errMsg:"chooseMedia:ok",tempFiles:[{tempFilePath:t,size:i,fileType:"image"}],type:"image"};if(!e.success&&!e.fail&&!e.complete)return Promise.resolve(s);e.success&&e.success(s),e.complete&&e.complete(s)},createCameraContext(){const e=r.createCameraContext(),i=e.takePhoto;return Object.defineProperty(e,"takePhoto",{configurable:!0,get:()=>function(e){if(!s)return i.call(this,e);l();const r={tempImagePath:t,errMsg:"takePhoto:ok"};e.success&&e.success(r),e.complete&&e.complete(r)}}),e}},o=Object.keys(c);function l(){s&&(s=!1,o.forEach((t=>{a[t]?a[t].get?Object.defineProperty(e,t,{configurable:!0,get:()=>r[t]}):Object.defineProperty(e,t,{writable:!0,value:r[t]}):e[t]=r[t]})))}return o.forEach((t=>{r[t]=e[t],a[t]=Object.getOwnPropertyDescriptor(e,t)})),o.forEach((t=>{a[t]?a[t].get?Object.defineProperty(e,t,{configurable:!0,get:()=>c[t]}):Object.defineProperty(e,t,{writable:!0,value:c[t]}):e[t]=c[t]})),!0}global.__minium_mock_choose_image=function(s){const{imageData:i,imageName:r,size:a}=s,c=`${wx.env.USER_DATA_PATH}/.MINIUM_TMP/${r}`;return i&&0!==i.length?new Promise(((s,a)=>{e.writeFile({filePath:c,data:i,encoding:"base64",success:()=>{e.stat({path:c,success:({stats:e})=>{t(wx,c,e.size),s({imageName:r,size:e.size})}})},fail:({errMsg:e})=>{a("writeFile:fail the maximum size of the file storage limit is exceeded"===e?"小程序文件空间不足":"writeFile:fail sdcard not mounted"===e?"sdcard未挂载":`Mock失败: ${e}`)}})})):(t(wx,c,a),Promise.resolve({imageName:r,size:a}))};let i=!1;e.mkdir({dirPath:`${wx.env.USER_DATA_PATH}/.MINIUM_STORE`,recursive:!1,success(){i=!0},fail:({errMsg:e})=>{e.indexOf("file already exists")>=0&&(i=!0)}});const r=e.saveFile,a=e.saveFileSync,c=e.getSavedFileList;Object.defineProperty(e,"saveFile",{configurable:!0,get:()=>function({tempFilePath:t,filePath:s,success:i,fail:a,complete:c}){if(t.startsWith(`${wx.env.USER_DATA_PATH}/.MINIUM_TMP`)){const r={srcPath:t,destPath:s||`${wx.env.USER_DATA_PATH}/.MINIUM_STORE/${t.split("/").pop()}`};return i&&(r.success=e=>{e.errMsg=e.errMsg.replace("copyFile","saveFile"),e.savedFilePath=r.destPath,i(e)}),a&&(r.fail=e=>{e.errMsg=e.errMsg.replace("copyFile","saveFile"),a(e)}),c&&(r.complete=e=>{e.errMsg=e.errMsg.replace("copyFile","saveFile"),0===e.errMsg.indexOf("saveFile:ok")&&(e.savedFilePath=r.destPath),c(e)}),e.copyFile(r)}return r({tempFilePath:t,filePath:s,success:i,fail:a,complete:c})}}),Object.defineProperty(e,"saveFileSync",{configurable:!0,get:()=>function(t,s){if(t.startsWith(`${wx.env.USER_DATA_PATH}/.MINIUM_TMP`)){const i=t,r=s||`${wx.env.USER_DATA_PATH}/.MINIUM_STORE/${t.split("/").pop()}`;try{return e.copyFileSync(i,r),r}catch(e){throw e.message.replace("copyFileSync","saveFileSync")}}return a(t,s)}}),Object.defineProperty(e,"getSavedFileList",{configurable:!0,get:()=>function({success:t,complete:s}){Promise.all([new Promise((t=>{e.stat({path:`${wx.env.USER_DATA_PATH}/.MINIUM_STORE/`,recursive:!0,complete:e=>{t((e.stats||[]).filter((e=>"/"!==e.path)).map((e=>({filePath:`${wx.env.USER_DATA_PATH}/.MINIUM_STORE/${e.path.startsWith("/")?e.path.slice(1):e.path}`,size:e.stats.size,createTime:e.stats.lastModifiedTime}))))}})})),new Promise((e=>{c({complete:t=>{e(t.fileList||[])}})}))]).then((([e,i])=>{const r={fileList:e.concat(i),errMsg:"getSavedFileList:ok"};t&&t(r),s&&s(r)}))}})}return new Promise(((t,s)=>{e.stat({path:`${wx.env.USER_DATA_PATH}/.MINIUM_TMP/`,recursive:!0,success:e=>{if(!e.stats.length)return t([]);t(e.stats.map((e=>({name:e.path.replace(/^\//,""),size:e.stats.size}))).filter((e=>e.name)))},fail:({errMsg:i})=>{i.indexOf("no such file or directory")>=0&&e.mkdir({dirPath:`${wx.env.USER_DATA_PATH}/.MINIUM_TMP`,recursive:!0,success(){t([])},fail:s})}})}))}
