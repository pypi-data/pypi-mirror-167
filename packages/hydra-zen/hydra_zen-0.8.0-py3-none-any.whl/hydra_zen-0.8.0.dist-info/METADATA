Metadata-Version: 2.1
Name: hydra-zen
Version: 0.8.0
Summary: Configurable, reproducible, and scalable workflows in Python, via Hydra
Home-page: https://github.com/mit-ll-responsible-ai/hydra-zen
Download-URL: https://github.com/mit-ll-responsible-ai/hydra-zen/tarball/v0.8.0
Author: Justin Goodwin, Ryan Soklaski
Author-email: ryan.soklaski@ll.mit.edu
License: MIT
Keywords: machine learning research configuration scalable reproducible yaml Hydra dataclass
Classifier: Development Status :: 4 - Beta
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Intended Audience :: Science/Research
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.7
License-File: LICENSE.txt
Requires-Dist: hydra-core (>=1.1.0)
Requires-Dist: typing-extensions (>=4.1.0)
Provides-Extra: beartype
Requires-Dist: beartype (>=0.8.0) ; extra == 'beartype'
Provides-Extra: pydantic
Requires-Dist: pydantic (>=1.8.2) ; extra == 'pydantic'


hydra-zen is a Python library that simplifies the process of writing code (research-grade or production-grade) that is:

- **Configurable**: you can configure all aspects of your code from a single interface (the command line or a single Python function).
- **Repeatable**: each run of your code will be self-documenting; the full configuration of your software is saved alongside your results.
- **Scalable**: launch multiple runs of your software, be it on your local machine or across multiple nodes on a cluster.

It builds off – and is fully compatible with – Hydra, a framework for elegantly
 configuring complex applications.

hydra-zen helps simplify the process of using Hydra by providing convenient functions
for creating and validating configs, as well as launching Hydra jobs. It also provides
novel functionality such as wrapped instantiation and meta fields in configs.
