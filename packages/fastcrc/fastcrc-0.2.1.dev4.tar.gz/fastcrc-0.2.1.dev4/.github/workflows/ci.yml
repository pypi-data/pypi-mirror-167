name: Build

on: [ push, pull_request ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true

      - name: Run cargo check
        uses: actions-rs/cargo@v1
        with:
          command: check

      - name: Install setuptools and setuptools-rust
        run: |
          python -m pip install --upgrade wheel setuptools setuptools-rust

      - name: Install fastcrc
        run: |
          python setup.py install

      - name: Run tests
        run: |
          cd tests
          python test_fastcrc.py

  build_package:
    name: Build wheels on ${{ matrix.os }}
    needs: [ test ]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Python ${{ matrix.python-version }} on ${{ matrix.os }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
          
      - if: runner.os == 'macOS'
        name: Build on macOS
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --release -o dist

      - if: runner.os == 'Windows'
        name: Build on Windows
        uses: messense/maturin-action@v1
        with:
          maturin-version: latest
          command: build
          args: --release -o dist

      - if: runner.os == 'Linux'
        name: Build on Linux
        uses: messense/maturin-action@v1.28.2
        with:
          maturin-version: latest
          manylinux: auto
          command: build
          args: --release --sdist -o dist

      - name: Upload wheels
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: dist

  upload_pypi:
    needs: [ build_package ]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: wheels
      - name: Publish to PyPI
        uses: messense/maturin-action@v1.28.2
        env:
          MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        with:
          command: upload
          args: --skip-existing *