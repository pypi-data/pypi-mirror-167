Metadata-Version: 2.1
Name: faust-aioeventlet
Version: 0.6
Summary: asyncio event loop scheduling callbacks in eventlet.
Home-page: http://aioeventlet.readthedocs.org/
Author: Victor Stinner
Author-email: victor.stinner@gmail.com
License: Apache License 2.0
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
License-File: COPYING
License-File: NOTICE

This is a fork of [aioeventlet](https://github.com/magma/deb-python-aioeventlet)
that contains some patches for more recent versions of Python used in the Magma
project. It is not maintained except for ensuring compatibility with Magma.

aioeventlet implements the asyncio API (PEP 3156) on top of eventlet. It makes
possible to write asyncio code in a project currently written for eventlet.

aioeventlet allows to use greenthreads in asyncio coroutines, and to use
asyncio coroutines, tasks and futures in greenthreads: see ``link_future()``
and ``wrap_greenthread()`` functions.

The main visible difference between aioeventlet and trollius is the behaviour
of ``run_forever()``: ``run_forever()`` blocks with trollius, whereas it runs
in a greenthread with aioeventlet. It means that aioeventlet event loop can run
in an greenthread while the Python main thread runs other greenthreads in
parallel.

* `faust-aioeventlet documentation <https://wbarnha.github.io/aioeventlet/index.html>`_
* `aioeventlet project in the Python Cheeseshop (PyPI)
  <https://pypi.python.org/pypi/aioeventlet>`_
* `aioeventlet project at Bitbucket <https://bitbucket.org/haypo/aioeventlet>`_
* Copyright/license: Open source, Apache 2.0. Enjoy!
