#![feature(test)]

use rust_circuit::circuit::circuit_optimizer::optimize_and_evaluate;

use rand::Rng;
use rust_circuit::opt_einsum::EinsumSpec;
// #[cfg(test)]
use rust_circuit::all_imports::*;
extern crate test;
use rust_circuit::all_imports::circuit_optimizer::OptimizationSettings;
use rust_circuit::all_imports::circuit_utils::cast_circuit;

#[test]
fn test_notebook_examples() {
    pyo3::prepare_freethreaded_python();
    #[rustfmt::skip]
            let circuits:&[CircuitRc] = &[{
    let node0 = ArrayConstant::randn_named_seeded(vec![50259,384], Some("w.unembed".to_owned()), 929193938916086232).rc();
    let node1 = ScalarConstant::nrc(-1_f64, vec![], Some("unnamed".to_owned()));
    let node2 = Index::nrc(node0.clone(), TensorIndex ( vec![TensorAxisIndex::Single(318), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx w.unembed".to_owned()));
    let node3 = Index::nrc(node0.clone(), TensorIndex ( vec![TensorAxisIndex::Single(373), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx w.unembed".to_owned()));
    let node4 = Einsum::nrc(vec![(node3.clone(), vec![0]),(node1.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node5 = Add::nrc(vec![node2.clone(), node4.clone()], Some("w.unembed_is_m_was".to_owned()));
    let node6 = ArrayConstant::randn_named_seeded(vec![384], Some("final.n.w.var".to_owned()), 4811093865619151916).rc();
    let node7 = ScalarConstant::nrc(0.00001_f64, vec![], Some("final.n.eps".to_owned()));
    let node8 = Add::nrc(vec![node6.clone(), node7.clone()], Some("final.n.w.var_p_eps".to_owned()));
    let node9 = ArrayConstant::randn_named_seeded(vec![384], Some("final.n.w.scale".to_owned()), 6746609514966997473).rc();
    let node10 = GeneralFunction::new_by_name(vec![node8.clone()], "rsqrt".to_owned(), Some("final.n.w.full_mul".to_owned())).unwrap().rc();
    let node11 = Einsum::nrc(vec![(node9.clone(), vec![0]),(node10.clone(), vec![0]),(node5.clone(), vec![0])], vec![0], Some("w.unembed_is_m_was_s".to_owned()));
    let node12 = ArrayConstant::randn_named_seeded(vec![32,384], Some("w.pos_embeds".to_owned()), 18302579321424555450).rc();
    let node13 = ArrayConstant::randn_named_seeded(vec![50259,384], Some("all_tok_embeds".to_owned()), 2599709625776908268).rc();
    let node14 = Index::nrc(node13.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(10259872,50259,9764032705850279069), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx all_tok_embeds".to_owned()));
    let node15 = Rearrange::nrc(node14.clone(), RearrangeSpec::new(vec![vec![0,1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(320621)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("tok_embeds_post_t_shape".to_owned()));
    let node16 = ScalarConstant::nrc(1_f64, vec![], Some("one".to_owned()));
    let node17 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m1.w.w1".to_owned()), 1331227591797635193).rc();
    let node18 = Rearrange::nrc(node17.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(384)),OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m1.w.w1_sample".to_owned()));
    let node19 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m1.w.w0".to_owned()), 13185449622808679385).rc();
    let node20 = Rearrange::nrc(node19.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(384)),OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m1.w.w0_sample".to_owned()));
    let node21 = ArrayConstant::randn_named_seeded(vec![768,384], Some("m1.w.out".to_owned()), 9981532348689177629).rc();
    let node22 = Rearrange::nrc(node21.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(768)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m1.w.out_sample".to_owned()));
    let node23 = ArrayConstant::randn_named_seeded(vec![768], Some("m1.w.b1".to_owned()), 1286372835866939057).rc();
    let node24 = Rearrange::nrc(node23.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m1.w.b1_sample".to_owned()));
    let node25 = Rearrange::nrc(node24.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(768)),OpSize::from(Some(1))]), Some("m1.w.b1_sample_rearrange_for_add_1".to_owned()));
    let node26 = ArrayConstant::randn_named_seeded(vec![768], Some("m1.w.b0".to_owned()), 4766085074108096736).rc();
    let node27 = Rearrange::nrc(node26.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m1.w.b0_sample".to_owned()));
    let node28 = Rearrange::nrc(node27.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(768)),OpSize::from(Some(1))]), Some("m1.w.b0_sample_rearrange_for_add_1".to_owned()));
    let node29 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.var".to_owned()), 7096362628065231700).rc();
    let node30 = ScalarConstant::nrc(0.00001_f64, vec![], Some("m1.n.eps".to_owned()));
    let node31 = Add::nrc(vec![node29.clone(), node30.clone()], Some("m1.n.w.var_p_eps".to_owned()));
    let node32 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.scale".to_owned()), 1636268016078253515).rc();
    let node33 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.mean".to_owned()), 5460868922970385475).rc();
    let node34 = Rearrange::nrc(node33.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m1.n.w.mean_sample".to_owned()));
    let node35 = Rearrange::nrc(node34.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("m1.n.w.mean_sample_rearrange_for_add_0".to_owned()));
    let node36 = GeneralFunction::new_by_name(vec![node31.clone()], "rsqrt".to_owned(), Some("m1.n.w.full_mul".to_owned())).unwrap().rc();
    let node37 = Einsum::nrc(vec![(node32.clone(), vec![0]),(node36.clone(), vec![0])], vec![0], Some("m1.n.w.full_s".to_owned()));
    let node38 = Rearrange::nrc(node37.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m1.n.w.full_s_sample".to_owned()));
    let node39 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m0.w.w1".to_owned()), 311213855405491785).rc();
    let node40 = Rearrange::nrc(node39.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(384)),OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m0.w.w1_sample".to_owned()));
    let node41 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m0.w.w0".to_owned()), 864408194459359880).rc();
    let node42 = Rearrange::nrc(node41.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(384)),OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m0.w.w0_sample".to_owned()));
    let node43 = ArrayConstant::randn_named_seeded(vec![768,384], Some("m0.w.out".to_owned()), 10661202434590036135).rc();
    let node44 = Rearrange::nrc(node43.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(768)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m0.w.out_sample".to_owned()));
    let node45 = ArrayConstant::randn_named_seeded(vec![768], Some("m0.w.b1".to_owned()), 11681755502347863569).rc();
    let node46 = Rearrange::nrc(node45.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m0.w.b1_sample".to_owned()));
    let node47 = Rearrange::nrc(node46.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(768)),OpSize::from(Some(1))]), Some("m0.w.b1_sample_rearrange_for_add_1".to_owned()));
    let node48 = ArrayConstant::randn_named_seeded(vec![768], Some("m0.w.b0".to_owned()), 2323622703274767530).rc();
    let node49 = Rearrange::nrc(node48.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(768)),OpSize::from(Some(32768))]), Some("m0.w.b0_sample".to_owned()));
    let node50 = Rearrange::nrc(node49.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(768)),OpSize::from(Some(1))]), Some("m0.w.b0_sample_rearrange_for_add_1".to_owned()));
    let node51 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.var".to_owned()), 1660750471384108115).rc();
    let node52 = ScalarConstant::nrc(0.00001_f64, vec![], Some("m0.n.eps".to_owned()));
    let node53 = Add::nrc(vec![node51.clone(), node52.clone()], Some("m0.n.w.var_p_eps".to_owned()));
    let node54 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.scale".to_owned()), 3754049060485329335).rc();
    let node55 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.mean".to_owned()), 1526190999291891454).rc();
    let node56 = Rearrange::nrc(node55.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m0.n.w.mean_sample".to_owned()));
    let node57 = Rearrange::nrc(node56.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("m0.n.w.mean_sample_rearrange_for_add_0".to_owned()));
    let node58 = GeneralFunction::new_by_name(vec![node53.clone()], "rsqrt".to_owned(), Some("m0.n.w.full_mul".to_owned())).unwrap().rc();
    let node59 = Einsum::nrc(vec![(node54.clone(), vec![0]),(node58.clone(), vec![0])], vec![0], Some("m0.n.w.full_s".to_owned()));
    let node60 = Rearrange::nrc(node59.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m0.n.w.full_s_sample".to_owned()));
    let node61 = Index::nrc(node15.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(32768,320621,6687987050098860993), TensorAxisIndex::Slice(Slice { start:None, stop:None }), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx tok_embeds_post_t_shape".to_owned()));
    let node62 = Rearrange::nrc(node61.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("embed_var_sample_rearrange_for_add_0".to_owned()));
    let node63 = ScalarConstant::nrc(0.044194173824159216_f64, vec![], Some("c.div_seq_len".to_owned()));
    let node64 = Rearrange::nrc(node63.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("c.div_seq_len_sample".to_owned()));
    let node65 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.v".to_owned()), 10133531896693890946).rc();
    let node66 = Rearrange::nrc(node65.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.v_sample".to_owned()));
    let node67 = ArrayConstant::randn_named_seeded(vec![8,1,1], Some("a0.w.sb".to_owned()), 1867266222616571753).rc();
    let node68 = Rearrange::nrc(node67.clone(), RearrangeSpec::new(vec![vec![0],vec![],vec![]], vec![vec![3],vec![0],vec![],vec![]], vec![OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1)),OpSize::from(Some(32768))]), Some("a0.w.sb_sample".to_owned()));
    let node69 = Rearrange::nrc(node68.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![],vec![]], vec![vec![0],vec![1],vec![],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1))]), Some("a0.w.sb_sample_rearrange_for_add_2".to_owned()));
    let node70 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.q".to_owned()), 15164929069836551244).rc();
    let node71 = Rearrange::nrc(node70.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.q_sample".to_owned()));
    let node72 = Einsum::nrc(vec![(node70.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a0.w.pos_q".to_owned()));
    let node73 = Rearrange::nrc(node72.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a0.w.pos_q_sample".to_owned()));
    let node74 = Rearrange::nrc(node73.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.w.pos_q_sample_rearrange_for_add_1".to_owned()));
    let node75 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.k".to_owned()), 13890711741635822223).rc();
    let node76 = Einsum::nrc(vec![(node75.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a0.w.pos_k".to_owned()));
    let node77 = Rearrange::nrc(node76.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a0.w.pos_k_sample".to_owned()));
    let node78 = Rearrange::nrc(node77.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.w.pos_k_sample_rearrange_for_add_1".to_owned()));
    let node79 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.out".to_owned()), 11344873045249210841).rc();
    let node80 = Rearrange::nrc(node79.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.out_sample".to_owned()));
    let node81 = Rearrange::nrc(node75.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.k_sample".to_owned()));
    let node82 = ArrayConstant::randn_named_seeded(vec![8], Some("a0.w.g1".to_owned()), 2618613096524235656).rc();
    let node83 = ArrayConstant::randn_named_seeded(vec![32], Some("a0.c.inv_nelt".to_owned()), 7885258334619126176).rc();
    let node84 = Einsum::nrc(vec![(node82.clone(), vec![0]),(node83.clone(), vec![1])], vec![0,1], Some("a0.w.g1op".to_owned()));
    let node85 = Rearrange::nrc(node84.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.w.g1op_sample".to_owned()));
    let node86 = Add::nrc(vec![node16.clone(), node84.clone()], Some("a0.w.c1".to_owned()));
    let node87 = Rearrange::nrc(node86.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.w.c1_sample".to_owned()));
    let node88 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.var".to_owned()), 2097624483321698950).rc();
    let node89 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a0.n.eps".to_owned()));
    let node90 = Add::nrc(vec![node88.clone(), node89.clone()], Some("a0.n.w.var_p_eps".to_owned()));
    let node91 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.scale".to_owned()), 13379100888128585973).rc();
    let node92 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.mean".to_owned()), 14181844882358567796).rc();
    let node93 = Rearrange::nrc(node92.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.mean_sample".to_owned()));
    let node94 = Rearrange::nrc(node93.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a0.n.w.mean_sample_rearrange_for_add_1".to_owned()));
    let node95 = GeneralFunction::new_by_name(vec![node90.clone()], "rsqrt".to_owned(), Some("a0.n.w.full_mul".to_owned())).unwrap().rc();
    let node96 = Einsum::nrc(vec![(node91.clone(), vec![0]),(node95.clone(), vec![0])], vec![0], Some("a0.n.w.full_s".to_owned()));
    let node97 = Rearrange::nrc(node96.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.full_s_sample".to_owned()));
    let node98 = Einsum::nrc(vec![(node94.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node99 = Add::nrc(vec![node62.clone(), node98.clone()], Some("a0.n.sub_mean_sample".to_owned()));
    let node100 = Einsum::nrc(vec![(node99.clone(), vec![0,1,2]),(node97.clone(), vec![0,2])], vec![0,1,2], Some("a0.n.y_out_sample".to_owned()));
    let node101 = Rearrange::nrc(node100.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a0.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node102 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.bias".to_owned()), 7836263396355991022).rc();
    let node103 = Rearrange::nrc(node102.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.bias_sample".to_owned()));
    let node104 = Rearrange::nrc(node103.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a0.n.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node105 = Add::nrc(vec![node104.clone(), node101.clone()], Some("a0.n_sample".to_owned()));
    let node106 = Einsum::nrc(vec![(node66.clone(), vec![0,1,2,3]),(node105.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.v_sample".to_owned()));
    let node107 = Einsum::nrc(vec![(node71.clone(), vec![0,1,2,3]),(node105.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.q_sample".to_owned()));
    let node108 = Rearrange::nrc(node107.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.q_sample_rearrange_for_add_0".to_owned()));
    let node109 = Einsum::nrc(vec![(node81.clone(), vec![0,1,2,3]),(node105.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.k_sample".to_owned()));
    let node110 = Rearrange::nrc(node109.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.k_sample_rearrange_for_add_0".to_owned()));
    let node111 = Add::nrc(vec![node108.clone(), node74.clone()], Some("a0.f_q_sample".to_owned()));
    let node112 = Add::nrc(vec![node110.clone(), node78.clone()], Some("a0.f_k_sample".to_owned()));
    let node113 = ScalarConstant::nrc(0.14433756729740646_f64, vec![], Some("a0.c.div_head_size".to_owned()));
    let node114 = Rearrange::nrc(node113.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("a0.c.div_head_size_sample".to_owned()));
    let node115 = Einsum::nrc(vec![(node111.clone(), vec![0,1,2,3]),(node112.clone(), vec![0,1,4,3]),(node114.clone(), vec![0])], vec![0,1,2,4], Some("a0.scores_not_masked_sample".to_owned()));
    let node116 = Rearrange::nrc(node115.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.scores_not_masked_sample_rearrange_for_add_0".to_owned()));
    let node117 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.scale".to_owned()), 4874878538922573945).rc();
    let node118 = Rearrange::nrc(node117.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.scale_sample".to_owned()));
    let node119 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.mean".to_owned()), 4942623806828509992).rc();
    let node120 = Rearrange::nrc(node119.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.mean_sample".to_owned()));
    let node121 = Rearrange::nrc(node120.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.s.w.mean_sample_rearrange_for_add_1".to_owned()));
    let node122 = Einsum::nrc(vec![(node121.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node123 = Add::nrc(vec![node116.clone(), node122.clone()], Some("a0.s.sub_mean_sample".to_owned()));
    let node124 = Einsum::nrc(vec![(node123.clone(), vec![0,1,2,3]),(node118.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.s.y_scale_sample".to_owned()));
    let node125 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.var".to_owned()), 17367023124078262057).rc();
    let node126 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a0.s.eps".to_owned()));
    let node127 = Add::nrc(vec![node125.clone(), node126.clone()], Some("a0.s.w.var_p_eps".to_owned()));
    let node128 = GeneralFunction::new_by_name(vec![node127.clone()], "rsqrt".to_owned(), Some("a0.s.w.full_mul".to_owned())).unwrap().rc();
    let node129 = Rearrange::nrc(node128.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.full_mul_sample".to_owned()));
    let node130 = Einsum::nrc(vec![(node124.clone(), vec![0,1,2,3]),(node129.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.s.y_out_sample".to_owned()));
    let node131 = Rearrange::nrc(node130.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.s.y_out_sample_rearrange_for_add_1".to_owned()));
    let node132 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.bias".to_owned()), 15464796744735661784).rc();
    let node133 = Rearrange::nrc(node132.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.bias_sample".to_owned()));
    let node134 = Rearrange::nrc(node133.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.s.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node135 = Add::nrc(vec![node134.clone(), node131.clone()], Some("a0.s_sample".to_owned()));
    let node136 = Einsum::nrc(vec![(node135.clone(), vec![0,1,2,3]),(node64.clone(), vec![0])], vec![0,1,2,3], Some("a0.scores_normed_sample".to_owned()));
    let node137 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node138 = Rearrange::nrc(node137.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.c.score_mask_sample".to_owned()));
    let node139 = Einsum::nrc(vec![(node136.clone(), vec![0,1,2,3]),(node138.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.scores_mul_mask_sample".to_owned()));
    let node140 = Einsum::nrc(vec![(node139.clone(), vec![0,1,2,3]),(node85.clone(), vec![0,1,2])], vec![0,1,2], Some("a0.t1_sample".to_owned()));
    let node141 = Rearrange::nrc(node140.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.t1u_sample".to_owned()));
    let node142 = Rearrange::nrc(node141.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.t1u_sample_rearrange_for_add_1".to_owned()));
    let node143 = Einsum::nrc(vec![(node136.clone(), vec![0,1,2,3]),(node87.clone(), vec![0,1,2])], vec![0,1,2,3], Some("a0.t0_sample".to_owned()));
    let node144 = Rearrange::nrc(node143.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.t0_sample_rearrange_for_add_0".to_owned()));
    let node145 = Einsum::nrc(vec![(node142.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node146 = Add::nrc(vec![node144.clone(), node145.clone(), node69.clone()], Some("a0.pre_probs_sample".to_owned()));
    let node147 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.pp.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node148 = Rearrange::nrc(node147.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.pp.c.score_mask_sample".to_owned()));
    let node149 = Einsum::nrc(vec![(node146.clone(), vec![0,1,2,3]),(node148.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.probs_sample".to_owned()));
    let node150 = Einsum::nrc(vec![(node149.clone(), vec![0,1,2,3]),(node106.clone(), vec![0,1,3,4])], vec![0,2,1,4], Some("a0.comb_v_sample".to_owned()));
    let node151 = Einsum::nrc(vec![(node150.clone(), vec![0,1,2,3]),(node80.clone(), vec![0,2,3,4])], vec![0,1,4], Some("a0_sample".to_owned()));
    let node152 = Rearrange::nrc(node151.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a0_sample_rearrange_for_add_1".to_owned()));
    let node153 = Add::nrc(vec![node62.clone(), node152.clone()], Some("m0.inp_sample".to_owned()));
    let node154 = Rearrange::nrc(node153.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m0.inp_sample_rearrange_for_add_1".to_owned()));
    let node155 = Einsum::nrc(vec![(node57.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node156 = Add::nrc(vec![node155.clone(), node154.clone()], Some("m0.n.sub_mean_sample".to_owned()));
    let node157 = Einsum::nrc(vec![(node156.clone(), vec![0,1,2]),(node60.clone(), vec![0,2])], vec![0,1,2], Some("m0.n.y_out_sample".to_owned()));
    let node158 = Rearrange::nrc(node157.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m0.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node159 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.bias".to_owned()), 7338166352898341219).rc();
    let node160 = Rearrange::nrc(node159.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m0.n.w.bias_sample".to_owned()));
    let node161 = Rearrange::nrc(node160.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("m0.n.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node162 = Add::nrc(vec![node161.clone(), node158.clone()], Some("m0.n_sample".to_owned()));
    let node163 = Einsum::nrc(vec![(node162.clone(), vec![0,1,2]),(node40.clone(), vec![0,2,3])], vec![0,1,3], Some("m0.before_product1_sample".to_owned()));
    let node164 = Rearrange::nrc(node163.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m0.before_product1_sample_rearrange_for_add_0".to_owned()));
    let node165 = Einsum::nrc(vec![(node162.clone(), vec![0,1,2]),(node42.clone(), vec![0,2,3])], vec![0,1,3], Some("m0.before_product0_sample".to_owned()));
    let node166 = Rearrange::nrc(node165.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m0.before_product0_sample_rearrange_for_add_0".to_owned()));
    let node167 = Add::nrc(vec![node164.clone(), node47.clone()], Some("m0.add1_sample".to_owned()));
    let node168 = Add::nrc(vec![node166.clone(), node50.clone()], Some("m0.add0_sample".to_owned()));
    let node169 = Einsum::nrc(vec![(node168.clone(), vec![0,1,2]),(node167.clone(), vec![0,1,2])], vec![0,1,2], Some("m0.act_sample".to_owned()));
    let node170 = Einsum::nrc(vec![(node169.clone(), vec![0,1,2]),(node44.clone(), vec![0,2,3])], vec![0,1,3], Some("m0_sample".to_owned()));
    let node171 = Rearrange::nrc(node170.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m0_sample_rearrange_for_add_0".to_owned()));
    let node172 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.v".to_owned()), 8687698313936163101).rc();
    let node173 = Rearrange::nrc(node172.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.w.v_sample".to_owned()));
    let node174 = ArrayConstant::randn_named_seeded(vec![8,1,1], Some("a1.w.sb".to_owned()), 2763458983135939246).rc();
    let node175 = Rearrange::nrc(node174.clone(), RearrangeSpec::new(vec![vec![0],vec![],vec![]], vec![vec![3],vec![0],vec![],vec![]], vec![OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1)),OpSize::from(Some(32768))]), Some("a1.w.sb_sample".to_owned()));
    let node176 = Rearrange::nrc(node175.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![],vec![]], vec![vec![0],vec![1],vec![],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1))]), Some("a1.w.sb_sample_rearrange_for_add_2".to_owned()));
    let node177 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.q".to_owned()), 7589589553252889926).rc();
    let node178 = Rearrange::nrc(node177.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.w.q_sample".to_owned()));
    let node179 = Einsum::nrc(vec![(node177.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a1.w.pos_q".to_owned()));
    let node180 = Rearrange::nrc(node179.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a1.w.pos_q_sample".to_owned()));
    let node181 = Rearrange::nrc(node180.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.w.pos_q_sample_rearrange_for_add_1".to_owned()));
    let node182 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.k".to_owned()), 346631027691184275).rc();
    let node183 = Einsum::nrc(vec![(node182.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a1.w.pos_k".to_owned()));
    let node184 = Rearrange::nrc(node183.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a1.w.pos_k_sample".to_owned()));
    let node185 = Rearrange::nrc(node184.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.w.pos_k_sample_rearrange_for_add_1".to_owned()));
    let node186 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.out".to_owned()), 15478159692831585940).rc();
    let node187 = Rearrange::nrc(node186.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.w.out_sample".to_owned()));
    let node188 = Rearrange::nrc(node182.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.w.k_sample".to_owned()));
    let node189 = ArrayConstant::randn_named_seeded(vec![8], Some("a1.w.g1".to_owned()), 3291412235451830005).rc();
    let node190 = ArrayConstant::randn_named_seeded(vec![32], Some("a1.c.inv_nelt".to_owned()), 7885258334619126176).rc();
    let node191 = Einsum::nrc(vec![(node189.clone(), vec![0]),(node190.clone(), vec![1])], vec![0,1], Some("a1.w.g1op".to_owned()));
    let node192 = Rearrange::nrc(node191.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.w.g1op_sample".to_owned()));
    let node193 = Add::nrc(vec![node16.clone(), node191.clone()], Some("a1.w.c1".to_owned()));
    let node194 = Rearrange::nrc(node193.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.w.c1_sample".to_owned()));
    let node195 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.var".to_owned()), 1425219787154012984).rc();
    let node196 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a1.n.eps".to_owned()));
    let node197 = Add::nrc(vec![node195.clone(), node196.clone()], Some("a1.n.w.var_p_eps".to_owned()));
    let node198 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.scale".to_owned()), 2062098532837674558).rc();
    let node199 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.mean".to_owned()), 10253594586416472532).rc();
    let node200 = Rearrange::nrc(node199.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.n.w.mean_sample".to_owned()));
    let node201 = Rearrange::nrc(node200.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a1.n.w.mean_sample_rearrange_for_add_0".to_owned()));
    let node202 = GeneralFunction::new_by_name(vec![node197.clone()], "rsqrt".to_owned(), Some("a1.n.w.full_mul".to_owned())).unwrap().rc();
    let node203 = Einsum::nrc(vec![(node198.clone(), vec![0]),(node202.clone(), vec![0])], vec![0], Some("a1.n.w.full_s".to_owned()));
    let node204 = Rearrange::nrc(node203.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.n.w.full_s_sample".to_owned()));
    let node205 = Add::nrc(vec![node171.clone(), node154.clone()], Some("a1.inp_sample".to_owned()));
    let node206 = Rearrange::nrc(node205.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.inp_sample_rearrange_for_add_1".to_owned()));
    let node207 = Einsum::nrc(vec![(node201.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node208 = Add::nrc(vec![node207.clone(), node206.clone()], Some("a1.n.sub_mean_sample".to_owned()));
    let node209 = Einsum::nrc(vec![(node208.clone(), vec![0,1,2]),(node204.clone(), vec![0,2])], vec![0,1,2], Some("a1.n.y_out_sample".to_owned()));
    let node210 = Rearrange::nrc(node209.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node211 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.bias".to_owned()), 10960967166164370007).rc();
    let node212 = Rearrange::nrc(node211.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.n.w.bias_sample".to_owned()));
    let node213 = Rearrange::nrc(node212.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a1.n.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node214 = Add::nrc(vec![node213.clone(), node210.clone()], Some("a1.n_sample".to_owned()));
    let node215 = Einsum::nrc(vec![(node173.clone(), vec![0,1,2,3]),(node214.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a1.v_sample".to_owned()));
    let node216 = Einsum::nrc(vec![(node178.clone(), vec![0,1,2,3]),(node214.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a1.q_sample".to_owned()));
    let node217 = Rearrange::nrc(node216.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.q_sample_rearrange_for_add_0".to_owned()));
    let node218 = Einsum::nrc(vec![(node188.clone(), vec![0,1,2,3]),(node214.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a1.k_sample".to_owned()));
    let node219 = Rearrange::nrc(node218.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.k_sample_rearrange_for_add_0".to_owned()));
    let node220 = Add::nrc(vec![node217.clone(), node181.clone()], Some("a1.f_q_sample".to_owned()));
    let node221 = Add::nrc(vec![node219.clone(), node185.clone()], Some("a1.f_k_sample".to_owned()));
    let node222 = ScalarConstant::nrc(0.14433756729740646_f64, vec![], Some("a1.c.div_head_size".to_owned()));
    let node223 = Rearrange::nrc(node222.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("a1.c.div_head_size_sample".to_owned()));
    let node224 = Einsum::nrc(vec![(node220.clone(), vec![0,1,2,3]),(node221.clone(), vec![0,1,4,3]),(node223.clone(), vec![0])], vec![0,1,2,4], Some("a1.scores_not_masked_sample".to_owned()));
    let node225 = Rearrange::nrc(node224.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a1.scores_not_masked_sample_rearrange_for_add_0".to_owned()));
    let node226 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.scale".to_owned()), 3798037696282213373).rc();
    let node227 = Rearrange::nrc(node226.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.s.w.scale_sample".to_owned()));
    let node228 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.mean".to_owned()), 15738309107844885954).rc();
    let node229 = Rearrange::nrc(node228.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.s.w.mean_sample".to_owned()));
    let node230 = Rearrange::nrc(node229.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a1.s.w.mean_sample_rearrange_for_add_1".to_owned()));
    let node231 = Einsum::nrc(vec![(node230.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node232 = Add::nrc(vec![node225.clone(), node231.clone()], Some("a1.s.sub_mean_sample".to_owned()));
    let node233 = Einsum::nrc(vec![(node232.clone(), vec![0,1,2,3]),(node227.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a1.s.y_scale_sample".to_owned()));
    let node234 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.var".to_owned()), 4873730304271440433).rc();
    let node235 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a1.s.eps".to_owned()));
    let node236 = Add::nrc(vec![node234.clone(), node235.clone()], Some("a1.s.w.var_p_eps".to_owned()));
    let node237 = GeneralFunction::new_by_name(vec![node236.clone()], "rsqrt".to_owned(), Some("a1.s.w.full_mul".to_owned())).unwrap().rc();
    let node238 = Rearrange::nrc(node237.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.s.w.full_mul_sample".to_owned()));
    let node239 = Einsum::nrc(vec![(node233.clone(), vec![0,1,2,3]),(node238.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a1.s.y_out_sample".to_owned()));
    let node240 = Rearrange::nrc(node239.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a1.s.y_out_sample_rearrange_for_add_1".to_owned()));
    let node241 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.bias".to_owned()), 4903695795856462846).rc();
    let node242 = Rearrange::nrc(node241.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.s.w.bias_sample".to_owned()));
    let node243 = Rearrange::nrc(node242.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a1.s.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node244 = Add::nrc(vec![node243.clone(), node240.clone()], Some("a1.s_sample".to_owned()));
    let node245 = Einsum::nrc(vec![(node244.clone(), vec![0,1,2,3]),(node64.clone(), vec![0])], vec![0,1,2,3], Some("a1.scores_normed_sample".to_owned()));
    let node246 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node247 = Rearrange::nrc(node246.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.c.score_mask_sample".to_owned()));
    let node248 = Einsum::nrc(vec![(node245.clone(), vec![0,1,2,3]),(node247.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a1.scores_mul_mask_sample".to_owned()));
    let node249 = Einsum::nrc(vec![(node248.clone(), vec![0,1,2,3]),(node192.clone(), vec![0,1,2])], vec![0,1,2], Some("a1.t1_sample".to_owned()));
    let node250 = Rearrange::nrc(node249.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a1.t1u_sample".to_owned()));
    let node251 = Rearrange::nrc(node250.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a1.t1u_sample_rearrange_for_add_1".to_owned()));
    let node252 = Einsum::nrc(vec![(node245.clone(), vec![0,1,2,3]),(node194.clone(), vec![0,1,2])], vec![0,1,2,3], Some("a1.t0_sample".to_owned()));
    let node253 = Rearrange::nrc(node252.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a1.t0_sample_rearrange_for_add_0".to_owned()));
    let node254 = Einsum::nrc(vec![(node251.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node255 = Add::nrc(vec![node253.clone(), node254.clone(), node176.clone()], Some("a1.pre_probs_sample".to_owned()));
    let node256 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.pp.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node257 = Rearrange::nrc(node256.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.pp.c.score_mask_sample".to_owned()));
    let node258 = Einsum::nrc(vec![(node255.clone(), vec![0,1,2,3]),(node257.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a1.probs_sample".to_owned()));
    let node259 = Einsum::nrc(vec![(node258.clone(), vec![0,1,2,3]),(node215.clone(), vec![0,1,3,4])], vec![0,2,1,4], Some("a1.comb_v_sample".to_owned()));
    let node260 = Einsum::nrc(vec![(node259.clone(), vec![0,1,2,3]),(node187.clone(), vec![0,2,3,4])], vec![0,1,4], Some("a1_sample".to_owned()));
    let node261 = Rearrange::nrc(node260.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1_sample_rearrange_for_add_0".to_owned()));
    let node262 = Add::nrc(vec![node261.clone(), node206.clone()], Some("m1.inp_sample".to_owned()));
    let node263 = Rearrange::nrc(node262.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1.inp_sample_rearrange_for_add_1".to_owned()));
    let node264 = Einsum::nrc(vec![(node35.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node265 = Add::nrc(vec![node264.clone(), node263.clone()], Some("m1.n.sub_mean_sample".to_owned()));
    let node266 = Einsum::nrc(vec![(node265.clone(), vec![0,1,2]),(node38.clone(), vec![0,2])], vec![0,1,2], Some("m1.n.y_out_sample".to_owned()));
    let node267 = Rearrange::nrc(node266.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node268 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.bias".to_owned()), 5952620041495829705).rc();
    let node269 = Rearrange::nrc(node268.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m1.n.w.bias_sample".to_owned()));
    let node270 = Rearrange::nrc(node269.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("m1.n.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node271 = Add::nrc(vec![node270.clone(), node267.clone()], Some("m1.n_sample".to_owned()));
    let node272 = Einsum::nrc(vec![(node271.clone(), vec![0,1,2]),(node18.clone(), vec![0,2,3])], vec![0,1,3], Some("m1.before_product1_sample".to_owned()));
    let node273 = Rearrange::nrc(node272.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m1.before_product1_sample_rearrange_for_add_0".to_owned()));
    let node274 = Einsum::nrc(vec![(node271.clone(), vec![0,1,2]),(node20.clone(), vec![0,2,3])], vec![0,1,3], Some("m1.before_product0_sample".to_owned()));
    let node275 = Rearrange::nrc(node274.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m1.before_product0_sample_rearrange_for_add_0".to_owned()));
    let node276 = Add::nrc(vec![node273.clone(), node25.clone()], Some("m1.add1_sample".to_owned()));
    let node277 = Add::nrc(vec![node275.clone(), node28.clone()], Some("m1.add0_sample".to_owned()));
    let node278 = Einsum::nrc(vec![(node277.clone(), vec![0,1,2]),(node276.clone(), vec![0,1,2])], vec![0,1,2], Some("m1.act_sample".to_owned()));
    let node279 = Einsum::nrc(vec![(node278.clone(), vec![0,1,2]),(node22.clone(), vec![0,2,3])], vec![0,1,3], Some("m1_sample".to_owned()));
    let node280 = Rearrange::nrc(node279.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1_sample_rearrange_for_add_0".to_owned()));
    let node281 = ArrayConstant::randn_named_seeded(vec![320621], Some("is_is".to_owned()), 14242293945302495994).rc();
    let node282 = Index::nrc(node281.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(32768,320621,6687987050098860993)] ), Some("idx is_is".to_owned()));
    let node283 = ScalarConstant::nrc(0.000030517578125_f64, vec![32768], Some("empirical_weights_for_sampled".to_owned()));
    let node284 = Einsum::nrc(vec![(node283.clone(), vec![0])], vec![], Some("Ein".to_owned()));
    let node285 = GeneralFunction::new_by_name(vec![node284.clone()], "reciprocal".to_owned(), Some("Ein_recip".to_owned())).unwrap().rc();
    let node286 = Einsum::nrc(vec![(node283.clone(), vec![0]),(node285.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node287 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node282.clone(), vec![0])], vec![], Some("is_is_var_sample_sample_expectation".to_owned()));
    let node288 = Rearrange::nrc(node287.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_sample_expectation_sample".to_owned()));
    let node289 = Rearrange::nrc(node288.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node290 = Rearrange::nrc(node282.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_rearrange_for_add_0".to_owned()));
    let node291 = Einsum::nrc(vec![(node289.clone(), vec![0]),(node1.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node292 = Add::nrc(vec![node290.clone(), node291.clone()], Some("is_is_var_centered_sample".to_owned()));
    let node293 = ArrayConstant::randn_named_seeded(vec![384], Some("final.n.w.mean".to_owned()), 5720117413700968387).rc();
    let node294 = Rearrange::nrc(node293.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("final.n.w.mean_sample".to_owned()));
    let node295 = Rearrange::nrc(node294.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("final.n.w.mean_sample_rearrange_for_add_0".to_owned()));
    let node296 = Add::nrc(vec![node280.clone(), node263.clone()], Some("final.inp_sample".to_owned()));
    let node297 = Rearrange::nrc(node296.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.inp_sample_rearrange_for_add_1".to_owned()));
    let node298 = Einsum::nrc(vec![(node295.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node299 = Add::nrc(vec![node298.clone(), node297.clone()], Some("final.n.sub_mean_sample".to_owned()));
    let node300 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node299.clone(), vec![0,1,2])], vec![1,2], Some("final.n.sub_mean_sample_sample_expectation".to_owned()));
    let node301 = Rearrange::nrc(node300.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("final.n.sub_mean_sample_sample_expectation_sample".to_owned()));
    let node302 = Rearrange::nrc(node301.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.n.sub_mean_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node303 = Rearrange::nrc(node299.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.n.sub_mean_sample_rearrange_for_add_0".to_owned()));
    let node304 = Einsum::nrc(vec![(node302.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node305 = Add::nrc(vec![node303.clone(), node304.clone()], Some("final.n.sub_mean_centered_sample".to_owned()));
    let node306 = Einsum::nrc(vec![(node292.clone(), vec![0]),(node305.clone(), vec![0,1,2])], vec![0,1,2], Some("outer_sample".to_owned()));
    let node307 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node306.clone(), vec![0,1,2])], vec![1,2], Some("outer_sample_sample_expectation".to_owned()));
    let node308 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node205.clone(), vec![0,1,2])], vec![1,2], Some("a1.inp_sample_sample_expectation".to_owned()));
    let node309 = Rearrange::nrc(node308.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.inp_sample_sample_expectation_sample".to_owned()));
    let node310 = Rearrange::nrc(node309.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.inp_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node311 = Rearrange::nrc(node205.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.inp_sample_rearrange_for_add_0".to_owned()));
    let node312 = Einsum::nrc(vec![(node310.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node313 = Add::nrc(vec![node311.clone(), node312.clone()], Some("a1.inp_centered_sample".to_owned()));
    let node314 = Einsum::nrc(vec![(node313.clone(), vec![0,1,2]),(node313.clone(), vec![0,3,4]),(node313.clone(), vec![0,5,6])], vec![0,1,2,3,4,5,6], Some("outer_sample".to_owned()));
    let node315 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node314.clone(), vec![0,1,2,3,4,5,6])], vec![1,2,3,4,5,6], Some("outer_sample_sample_expectation".to_owned()));
    let node316 = Einsum::nrc(vec![(node313.clone(), vec![0,1,2]),(node313.clone(), vec![0,3,4])], vec![0,1,2,3,4], Some("outer_sample".to_owned()));
    let node317 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node316.clone(), vec![0,1,2,3,4])], vec![1,2,3,4], Some("outer_sample_sample_expectation".to_owned()));
    let node318 = Einsum::nrc(vec![(node173.clone(), vec![0,1,2,3]),(node214.clone(), vec![0,4,3]),(node187.clone(), vec![0,1,2,5])], vec![0,1,4,5], Some("a1.ov_sample".to_owned()));
    let node319 = Rearrange::nrc(node318.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.ov_sample_rearrange_for_add_0".to_owned()));
    let node320 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node214.clone(), vec![0,1,2])], vec![1,2], Some("a1.n_sample_sample_expectation".to_owned()));
    let node321 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node220.clone(), vec![0,1,2,3])], vec![1,2,3], Some("a1.f_q_sample_sample_expectation".to_owned()));
    let node322 = Rearrange::nrc(node220.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.f_q_sample_rearrange_for_add_0".to_owned()));
    let node323 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node221.clone(), vec![0,1,2,3])], vec![1,2,3], Some("a1.f_k_sample_sample_expectation".to_owned()));
    let node324 = Einsum::nrc(vec![(node323.clone(), vec![0,1,2]),(node284.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node325 = Add::nrc(vec![node317.clone()], Some("I k2 a1.inp, a1.inp I_decompose".to_owned()));
    let node326 = Einsum::nrc(vec![(node325.clone(), vec![0,1,2,3]),(node284.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node327 = Einsum::nrc(vec![(node321.clone(), vec![0,1,2]),(node284.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node328 = Rearrange::nrc(node327.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k1 a1.f_q I_sample".to_owned()));
    let node329 = Rearrange::nrc(node328.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k1 a1.f_q I_sample_rearrange_for_add_1".to_owned()));
    let node330 = Einsum::nrc(vec![(node329.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node331 = Einsum::nrc(vec![(node320.clone(), vec![0,1]),(node284.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node332 = Einsum::nrc(vec![(node172.clone(), vec![0,1,2]),(node331.clone(), vec![3,2]),(node186.clone(), vec![0,1,4])], vec![0,3,4], Some("I k1 a1.w.v k1 a1.n k1 a1.w.out I perm".to_owned()));
    let node333 = Rearrange::nrc(node332.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("I k1 a1.w.v k1 a1.n k1 a1.w.out I perm_sample".to_owned()));
    let node334 = Rearrange::nrc(node333.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("I k1 a1.w.v k1 a1.n k1 a1.w.out I perm_sample_rearrange_for_add_1".to_owned()));
    let node335 = Einsum::nrc(vec![(node334.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node336 = Einsum::nrc(vec![(node326.clone(), vec![0,1,2,3]),(node284.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node337 = Einsum::nrc(vec![(node336.clone(), vec![0,1,2,3]),(node198.clone(), vec![3]),(node202.clone(), vec![3])], vec![2,3,0,1], Some("I k2 a1.inp, a1.n.y_out I shaped".to_owned()));
    let node338 = Einsum::nrc(vec![(node337.clone(), vec![0,1,2,3]),(node177.clone(), vec![4,5,1])], vec![2,3,4,0,5], Some("I k2 a1.f_q, a1.inp I shaped".to_owned()));
    let node339 = Einsum::nrc(vec![(node338.clone(), vec![0,1,2,3,4]),(node198.clone(), vec![1]),(node202.clone(), vec![1])], vec![0,1,2,3,4], Some("I k2 a1.f_q, a1.n.y_out I shaped".to_owned()));
    let node340 = Einsum::nrc(vec![(node339.clone(), vec![0,1,2,3,4]),(node172.clone(), vec![5,6,1]),(node186.clone(), vec![5,6,7])], vec![5,0,7,2,3,4], Some("I k2 a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm".to_owned()));
    let node341 = Rearrange::nrc(node340.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![vec![6],vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k2 a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm_sample".to_owned()));
    let node342 = Rearrange::nrc(node341.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k2 a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm_sample_rearrange_for_add_0".to_owned()));
    let node343 = Einsum::nrc(vec![(node342.clone(), vec![0,1,2,3,4,5,6]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6], Some("ScalarMul".to_owned()));
    let node344 = Rearrange::nrc(node324.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k1 a1.f_k I_sample".to_owned()));
    let node345 = Add::nrc(vec![node319.clone(), node335.clone()], Some("I eps1 a1.ov I_eps_sample".to_owned()));
    let node346 = Add::nrc(vec![node322.clone(), node330.clone()], Some("I eps1 a1.f_q I_eps_sample".to_owned()));
    let node347 = Einsum::nrc(vec![(node345.clone(), vec![0,1,2,3]),(node346.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("I eps1 a1.ov eps1 a1.f_q I_sample".to_owned()));
    let node348 = Rearrange::nrc(node347.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.ov eps1 a1.f_q I_sample_rearrange_for_add_1".to_owned()));
    let node349 = Add::nrc(vec![node343.clone(), node348.clone()], Some("I eps2 a1.f_q, a1.ov I_eps_sample".to_owned()));
    let node350 = Einsum::nrc(vec![(node349.clone(), vec![0,1,2,3,4,5,6]),(node344.clone(), vec![0,7,8,9])], vec![0,1,2,3,4,5,6,7,8,9], Some("eps_dec_i I eps2 a1.f_q, a1.ov I_eps I k1 a1.f_k I_sample".to_owned()));
    let node351 = Rearrange::nrc(node350.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("eps_dec_i I eps2 a1.f_q, a1.ov I_eps I k1 a1.f_k I_sample_rearrange_for_add_0".to_owned()));
    let node352 = Rearrange::nrc(node221.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a1.f_k_sample_rearrange_for_add_0".to_owned()));
    let node353 = Einsum::nrc(vec![(node337.clone(), vec![0,1,2,3]),(node182.clone(), vec![4,5,1])], vec![2,3,4,0,5], Some("I k2 a1.f_k, a1.inp I shaped".to_owned()));
    let node354 = Einsum::nrc(vec![(node353.clone(), vec![0,1,2,3,4]),(node198.clone(), vec![1]),(node202.clone(), vec![1])], vec![0,1,2,3,4], Some("I k2 a1.f_k, a1.n.y_out I shaped".to_owned()));
    let node355 = Einsum::nrc(vec![(node354.clone(), vec![0,1,2,3,4]),(node172.clone(), vec![5,6,1]),(node186.clone(), vec![5,6,7])], vec![5,0,7,2,3,4], Some("I k2 a1.f_k, a1.n k1 a1.w.v k1 a1.w.out I perm".to_owned()));
    let node356 = Rearrange::nrc(node355.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![vec![6],vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k2 a1.f_k, a1.n k1 a1.w.v k1 a1.w.out I perm_sample".to_owned()));
    let node357 = Rearrange::nrc(node356.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k2 a1.f_k, a1.n k1 a1.w.v k1 a1.w.out I perm_sample_rearrange_for_add_0".to_owned()));
    let node358 = Einsum::nrc(vec![(node357.clone(), vec![0,1,2,3,4,5,6]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6], Some("ScalarMul".to_owned()));
    let node359 = Rearrange::nrc(node344.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k1 a1.f_k I_sample_rearrange_for_add_1".to_owned()));
    let node360 = Einsum::nrc(vec![(node359.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node361 = Add::nrc(vec![node352.clone(), node360.clone()], Some("I eps1 a1.f_k I_eps_sample".to_owned()));
    let node362 = Einsum::nrc(vec![(node345.clone(), vec![0,1,2,3]),(node361.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("I eps1 a1.ov eps1 a1.f_k I_sample".to_owned()));
    let node363 = Rearrange::nrc(node362.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.ov eps1 a1.f_k I_sample_rearrange_for_add_1".to_owned()));
    let node364 = Add::nrc(vec![node358.clone(), node363.clone()], Some("I eps2 a1.f_k, a1.ov I_eps_sample".to_owned()));
    let node365 = Einsum::nrc(vec![(node364.clone(), vec![0,1,2,3,4,5,6]),(node328.clone(), vec![0,7,8,9])], vec![0,1,2,3,7,8,9,4,5,6], Some("eps_dec_i I eps2 a1.f_k, a1.ov I_eps I k1 a1.f_q I_sample".to_owned()));
    let node366 = Rearrange::nrc(node365.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("eps_dec_i I eps2 a1.f_k, a1.ov I_eps I k1 a1.f_q I_sample_rearrange_for_add_1".to_owned()));
    let node367 = Einsum::nrc(vec![(node354.clone(), vec![0,1,2,3,4]),(node177.clone(), vec![5,6,1])], vec![5,0,6,2,3,4], Some("I k2 a1.f_k, a1.q I shaped".to_owned()));
    let node368 = Rearrange::nrc(node367.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![vec![6],vec![0],vec![1],vec![2],vec![3],vec![4],vec![5]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k2 a1.f_k, a1.q I shaped_sample".to_owned()));
    let node369 = Rearrange::nrc(node368.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k2 a1.f_k, a1.q I shaped_sample_rearrange_for_add_0".to_owned()));
    let node370 = Einsum::nrc(vec![(node369.clone(), vec![0,1,2,3,4,5,6]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6], Some("ScalarMul".to_owned()));
    let node371 = Einsum::nrc(vec![(node346.clone(), vec![0,1,2,3]),(node361.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("I eps1 a1.f_q eps1 a1.f_k I_sample".to_owned()));
    let node372 = Rearrange::nrc(node371.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.f_q eps1 a1.f_k I_sample_rearrange_for_add_1".to_owned()));
    let node373 = Add::nrc(vec![node370.clone(), node372.clone()], Some("I eps2 a1.f_k, a1.f_q I_eps_sample".to_owned()));
    let node374 = Einsum::nrc(vec![(node373.clone(), vec![0,1,2,3,4,5,6]),(node333.clone(), vec![0,7,8,9])], vec![0,7,8,9,1,2,3,4,5,6], Some("eps_dec_i I eps2 a1.f_k, a1.f_q I_eps I k1 a1.ov I_sample".to_owned()));
    let node375 = Rearrange::nrc(node374.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("eps_dec_i I eps2 a1.f_k, a1.f_q I_eps I k1 a1.ov I_sample_rearrange_for_add_2".to_owned()));
    let node376 = Add::nrc(vec![node315.clone()], Some("I k3 a1.inp, a1.inp, a1.inp I_decompose".to_owned()));
    let node377 = Einsum::nrc(vec![(node376.clone(), vec![0,1,2,3,4,5]),(node284.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node378 = Einsum::nrc(vec![(node377.clone(), vec![0,1,2,3,4,5]),(node284.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node379 = Einsum::nrc(vec![(node341.clone(), vec![0,1,2,3,4,5,6]),(node361.clone(), vec![0,7,8,9])], vec![0,1,2,3,4,5,6,7,8,9], Some("I eps2 a1.f_q, a1.ov eps1 a1.f_k I_sample".to_owned()));
    let node380 = Rearrange::nrc(node379.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps2 a1.f_q, a1.ov eps1 a1.f_k I_sample_rearrange_for_add_2".to_owned()));
    let node381 = Einsum::nrc(vec![(node380.clone(), vec![0,1,2,3,4,5,6,7,8,9]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6,7,8,9], Some("ScalarMul".to_owned()));
    let node382 = Einsum::nrc(vec![(node378.clone(), vec![0,1,2,3,4,5]),(node198.clone(), vec![5]),(node202.clone(), vec![5])], vec![4,5,2,3,0,1], Some("I k3 a1.inp, a1.inp, a1.n.y_out I shaped".to_owned()));
    let node383 = Einsum::nrc(vec![(node382.clone(), vec![0,1,2,3,4,5]),(node182.clone(), vec![6,7,1])], vec![2,3,4,5,6,0,7], Some("I k3 a1.f_k, a1.inp, a1.inp I shaped".to_owned()));
    let node384 = Einsum::nrc(vec![(node383.clone(), vec![0,1,2,3,4,5,6]),(node198.clone(), vec![1]),(node202.clone(), vec![1])], vec![0,1,2,3,4,5,6], Some("I k3 a1.f_k, a1.inp, a1.n.y_out I shaped".to_owned()));
    let node385 = Einsum::nrc(vec![(node384.clone(), vec![0,1,2,3,4,5,6]),(node177.clone(), vec![7,8,1])], vec![2,3,7,0,8,4,5,6], Some("I k3 a1.f_k, a1.f_q, a1.inp I shaped".to_owned()));
    let node386 = Einsum::nrc(vec![(node385.clone(), vec![0,1,2,3,4,5,6,7]),(node198.clone(), vec![1]),(node202.clone(), vec![1])], vec![0,1,2,3,4,5,6,7], Some("I k3 a1.f_k, a1.f_q, a1.n.y_out I shaped".to_owned()));
    let node387 = Einsum::nrc(vec![(node386.clone(), vec![0,1,2,3,4,5,6,7]),(node172.clone(), vec![8,9,1]),(node186.clone(), vec![8,9,10])], vec![8,0,10,2,3,4,5,6,7], Some("I k3 a1.f_k, a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm".to_owned()));
    let node388 = Rearrange::nrc(node387.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8]], vec![vec![9],vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("I k3 a1.f_k, a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm_sample".to_owned()));
    let node389 = Rearrange::nrc(node388.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I k3 a1.f_k, a1.f_q, a1.n k1 a1.w.v k1 a1.w.out I perm_sample_rearrange_for_add_0".to_owned()));
    let node390 = Einsum::nrc(vec![(node389.clone(), vec![0,1,2,3,4,5,6,7,8,9]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6,7,8,9], Some("ScalarMul".to_owned()));
    let node391 = Einsum::nrc(vec![(node346.clone(), vec![0,1,2,3]),(node356.clone(), vec![0,4,5,6,7,8,9])], vec![0,4,5,6,1,2,3,7,8,9], Some("I eps1 a1.f_q eps2 a1.f_k, a1.ov I_sample".to_owned()));
    let node392 = Rearrange::nrc(node391.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.f_q eps2 a1.f_k, a1.ov I_sample_rearrange_for_add_3".to_owned()));
    let node393 = Einsum::nrc(vec![(node392.clone(), vec![0,1,2,3,4,5,6,7,8,9]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6,7,8,9], Some("ScalarMul".to_owned()));
    let node394 = Einsum::nrc(vec![(node345.clone(), vec![0,1,2,3]),(node368.clone(), vec![0,4,5,6,7,8,9])], vec![0,1,2,3,4,5,6,7,8,9], Some("I eps1 a1.ov eps2 a1.f_k, a1.f_q I_sample".to_owned()));
    let node395 = Rearrange::nrc(node394.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.ov eps2 a1.f_k, a1.f_q I_sample_rearrange_for_add_1".to_owned()));
    let node396 = Einsum::nrc(vec![(node395.clone(), vec![0,1,2,3,4,5,6,7,8,9]),(node1.clone(), vec![])], vec![0,1,2,3,4,5,6,7,8,9], Some("ScalarMul".to_owned()));
    let node397 = Einsum::nrc(vec![(node345.clone(), vec![0,1,2,3]),(node346.clone(), vec![0,4,5,6]),(node361.clone(), vec![0,7,8,9])], vec![0,1,2,3,4,5,6,7,8,9], Some("I eps1 a1.ov eps1 a1.f_q eps1 a1.f_k I_sample".to_owned()));
    let node398 = Rearrange::nrc(node397.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps1 a1.ov eps1 a1.f_q eps1 a1.f_k I_sample_rearrange_for_add_4".to_owned()));
    let node399 = Add::nrc(vec![node390.clone(), node396.clone(), node381.clone(), node393.clone(), node398.clone()], Some("I eps3 a1.f_k, a1.f_q, a1.ov I_eps_sample".to_owned()));
    let node400 = Rearrange::nrc(node399.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![vec![0],vec![1],vec![2],vec![3],vec![4],vec![5],vec![6],vec![7],vec![8],vec![9]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("I eps3 a1.f_k, a1.f_q, a1.ov I_eps_sample_rearrange_for_add_3".to_owned()));
    let node401 = Add::nrc(vec![node351.clone(), node366.clone(), node375.clone(), node400.clone()], Some("eps_dec_multi a1.ov a1.f_q a1.f_k_sample".to_owned()));
    let node402 = Einsum::nrc(vec![(node193.clone(), vec![0,1]),(node256.clone(), vec![1,2])], vec![1,2,0,2], Some("a1.w.c1 a1.pp.c.score_mask extra_probs_dim".to_owned()));
    let node403 = Einsum::nrc(vec![(node246.clone(), vec![0,1]),(node189.clone(), vec![2]),(node190.clone(), vec![0]),(node256.clone(), vec![0,3])], vec![0,1,2,3], Some("a1.c.score_mask a1.w.g1 a1.c.inv_nelt a1.pp.c.score_mask".to_owned()));
    let node404 = Einsum::nrc(vec![(node403.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node405 = Add::nrc(vec![node402.clone(), node404.clone()], Some("a1.probs.w_conv".to_owned()));
    let node406 = Einsum::nrc(vec![(node222.clone(), vec![]),(node226.clone(), vec![0,1]),(node237.clone(), vec![0,1]),(node63.clone(), vec![])], vec![0,1], Some("a1.probs.common_w".to_owned()));
    let node407 = Einsum::nrc(vec![(node406.clone(), vec![0,1]),(node405.clone(), vec![0,1,2,3])], vec![2,0,1,3], Some("a1.probs.mul".to_owned()));
    let node408 = Rearrange::nrc(node407.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![4],vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.probs.mul_sample".to_owned()));
    let node409 = Einsum::nrc(vec![(node401.clone(), vec![0,1,2,3,1,4,5,1,6,5]),(node408.clone(), vec![0,1,4,6,2])], vec![0,4,3], Some("eps_dec_multi a1.ov a1.f_q a1.f_k_probs.mul_sample".to_owned()));
    let node410 = Rearrange::nrc(node409.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("eps_dec_multi a1.ov a1.f_q a1.f_k_probs.mul_sample_rearrange_for_add_2".to_owned()));
    let node411 = Einsum::nrc(vec![(node174.clone(), vec![0,1,2]),(node256.clone(), vec![3,4])], vec![0,3,4], Some("a1.w.sb_out".to_owned()));
    let node412 = Einsum::nrc(vec![(node203.clone(), vec![0]),(node186.clone(), vec![1,2,3]),(node172.clone(), vec![1,2,0])], vec![1,0,3], Some("a1.w.ov_s_".to_owned()));
    let node413 = ScalarConstant::nrc(1_f64, vec![384,1], Some("a1.direct.ov.ident_ones".to_owned()));
    let node414 = Einsum::nrc(vec![(node413.clone(), vec![0,1])], vec![1,0,0], Some("a1.direct.ov.ident".to_owned()));
    let node415 = Concat::nrc(vec![node412.clone(), node414.clone()], 0, Some("a1.w.ov_s_with_ident".to_owned()));
    let node416 = Rearrange::nrc(node415.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(9)),OpSize::from(Some(384)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.w.ov_s_with_ident_sample".to_owned()));
    let node417 = Einsum::nrc(vec![(node228.clone(), vec![0,1]),(node226.clone(), vec![0,1]),(node237.clone(), vec![0,1]),(node63.clone(), vec![]),(node246.clone(), vec![0,1]),(node189.clone(), vec![2]),(node190.clone(), vec![0]),(node256.clone(), vec![0,3])], vec![2,0,3], Some("a1.s.w.mean_y_out_t1u_out".to_owned()));
    let node418 = Einsum::nrc(vec![(node228.clone(), vec![0,1]),(node226.clone(), vec![0,1]),(node237.clone(), vec![0,1]),(node63.clone(), vec![]),(node193.clone(), vec![2,0]),(node256.clone(), vec![0,1])], vec![2,0,1], Some("a1.s.w.mean_y_out_t0_out".to_owned()));
    let node419 = Einsum::nrc(vec![(node241.clone(), vec![0,1]),(node63.clone(), vec![]),(node246.clone(), vec![0,1]),(node189.clone(), vec![2]),(node190.clone(), vec![0]),(node256.clone(), vec![0,3])], vec![2,0,3], Some("a1.s.w.bias_t1u_out".to_owned()));
    let node420 = Einsum::nrc(vec![(node241.clone(), vec![0,1]),(node63.clone(), vec![]),(node193.clone(), vec![2,0]),(node256.clone(), vec![0,1])], vec![2,0,1], Some("a1.s.w.bias_t0_out".to_owned()));
    let node421 = Einsum::nrc(vec![(node419.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node422 = Einsum::nrc(vec![(node418.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node423 = Add::nrc(vec![node420.clone(), node422.clone(), node421.clone(), node417.clone(), node411.clone()], Some("a1.probs.const".to_owned()));
    let node424 = Einsum::nrc(vec![(node220.clone(), vec![0,1,2,3]),(node221.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("a1.f_q a1.f_k_sample".to_owned()));
    let node425 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node424.clone(), vec![0,1,2,3,4,5,6])], vec![1,2,3,4,5,6], Some("a1.f_q a1.f_k_sample_sample_expectation".to_owned()));
    let node426 = Einsum::nrc(vec![(node425.clone(), vec![0,1,2,3,4,5]),(node284.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node427 = Einsum::nrc(vec![(node426.clone(), vec![0,1,2,0,3,2]),(node407.clone(), vec![0,1,3,4])], vec![0,1,4], Some("I k1 a1.f_q a1.f_k I a1.probs.mul".to_owned()));
    let node428 = Add::nrc(vec![node423.clone(), node427.clone()], Some("a1.probs_const_all".to_owned()));
    let node429 = ScalarConstant::nrc(1_f64, vec![32,1], Some("a1.direct.k1_probs.ident_ones".to_owned()));
    let node430 = Einsum::nrc(vec![(node429.clone(), vec![0,1])], vec![1,0,0], Some("a1.direct.k1_probs.ident".to_owned()));
    let node431 = Concat::nrc(vec![node428.clone(), node430.clone()], 0, Some("a1.probs_with_ident".to_owned()));
    let node432 = Rearrange::nrc(node431.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(9)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a1.probs_with_ident_sample".to_owned()));
    let node433 = Einsum::nrc(vec![(node318.clone(), vec![0,1,2,3]),(node220.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("a1.ov a1.f_q_sample".to_owned()));
    let node434 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node433.clone(), vec![0,1,2,3,4,5,6])], vec![1,2,3,4,5,6], Some("a1.ov a1.f_q_sample_sample_expectation".to_owned()));
    let node435 = Einsum::nrc(vec![(node318.clone(), vec![0,1,2,3]),(node220.clone(), vec![0,4,5,6]),(node221.clone(), vec![0,7,8,9])], vec![0,1,2,3,4,5,6,7,8,9], Some("a1.ov a1.f_q a1.f_k_sample".to_owned()));
    let node436 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node435.clone(), vec![0,1,2,3,4,5,6,7,8,9])], vec![1,2,3,4,5,6,7,8,9], Some("a1.ov a1.f_q a1.f_k_sample_sample_expectation".to_owned()));
    let node437 = Einsum::nrc(vec![(node318.clone(), vec![0,1,2,3]),(node221.clone(), vec![0,4,5,6])], vec![0,1,2,3,4,5,6], Some("a1.ov a1.f_k_sample".to_owned()));
    let node438 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node437.clone(), vec![0,1,2,3,4,5,6])], vec![1,2,3,4,5,6], Some("a1.ov a1.f_k_sample_sample_expectation".to_owned()));
    let node439 = Einsum::nrc(vec![(node172.clone(), vec![0,1,2]),(node199.clone(), vec![2]),(node203.clone(), vec![2]),(node186.clone(), vec![0,1,3]),(node428.clone(), vec![0,4,5])], vec![4,3], Some("a1.n.w.mean_mul_ov_p".to_owned()));
    let node440 = Einsum::nrc(vec![(node172.clone(), vec![0,1,2]),(node211.clone(), vec![2]),(node186.clone(), vec![0,1,3]),(node428.clone(), vec![0,4,5])], vec![4,3], Some("a1.n.w.bias_mul_probs_const".to_owned()));
    let node441 = Einsum::nrc(vec![(node438.clone(), vec![0,1,2,3,4,5]),(node284.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node442 = Einsum::nrc(vec![(node441.clone(), vec![0,1,2,0,3,4]),(node407.clone(), vec![0,5,3,1])], vec![0,5,4,2], Some("I k1 a1.ov a1.f_k I a1.probs.mul".to_owned()));
    let node443 = Rearrange::nrc(node442.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![4],vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("I k1 a1.ov a1.f_k I a1.probs.mul_sample".to_owned()));
    let node444 = Einsum::nrc(vec![(node220.clone(), vec![0,1,2,3]),(node443.clone(), vec![0,1,2,3,4])], vec![0,2,4], Some("a1.f_q_probs.mul_sample".to_owned()));
    let node445 = Rearrange::nrc(node444.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.f_q_probs.mul_sample_rearrange_for_add_0".to_owned()));
    let node446 = Einsum::nrc(vec![(node434.clone(), vec![0,1,2,3,4,5]),(node284.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node447 = Einsum::nrc(vec![(node446.clone(), vec![0,1,2,0,3,4]),(node407.clone(), vec![0,3,5,1])], vec![0,5,4,2,3], Some("I k1 a1.ov a1.f_q I a1.probs.mul".to_owned()));
    let node448 = Rearrange::nrc(node447.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3],vec![4]], vec![vec![5],vec![0],vec![1],vec![2],vec![3],vec![4]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("I k1 a1.ov a1.f_q I a1.probs.mul_sample".to_owned()));
    let node449 = Einsum::nrc(vec![(node221.clone(), vec![0,1,2,3]),(node448.clone(), vec![0,1,2,3,4,5])], vec![0,5,4], Some("a1.f_k_probs.mul_sample".to_owned()));
    let node450 = Rearrange::nrc(node449.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.f_k_probs.mul_sample_rearrange_for_add_1".to_owned()));
    let node451 = Einsum::nrc(vec![(node205.clone(), vec![0,1,2]),(node416.clone(), vec![0,3,2,4]),(node432.clone(), vec![0,3,5,1])], vec![0,5,4], Some("a1.direct.term_sample".to_owned()));
    let node452 = Rearrange::nrc(node451.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.direct.term_sample_rearrange_for_add_3".to_owned()));
    let node453 = Einsum::nrc(vec![(node324.clone(), vec![0,1,2]),(node447.clone(), vec![0,1,2,3,4])], vec![4,3], Some("I k1 a1.f_k I_probs.mul".to_owned()));
    let node454 = Einsum::nrc(vec![(node453.clone(), vec![0,1]),(node1.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node455 = Einsum::nrc(vec![(node439.clone(), vec![0,1]),(node1.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node456 = Einsum::nrc(vec![(node327.clone(), vec![0,1,2]),(node442.clone(), vec![0,1,2,3])], vec![1,3], Some("I k1 a1.f_q I_probs.mul".to_owned()));
    let node457 = Einsum::nrc(vec![(node456.clone(), vec![0,1]),(node1.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node458 = Einsum::nrc(vec![(node436.clone(), vec![0,1,2,3,4,5,6,7,8]),(node284.clone(), vec![])], vec![0,1,2,3,4,5,6,7,8], Some("ScalarMul".to_owned()));
    let node459 = Einsum::nrc(vec![(node332.clone(), vec![0,1,2]),(node427.clone(), vec![0,3,1])], vec![3,2], Some("I k1 a1.w.v k1 a1.n k1 a1.w.out I perm_probs.mul".to_owned()));
    let node460 = Einsum::nrc(vec![(node459.clone(), vec![0,1]),(node1.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node461 = Einsum::nrc(vec![(node458.clone(), vec![0,1,2,0,3,4,0,5,4]),(node407.clone(), vec![0,3,5,1])], vec![3,2], Some("I k1 a1.ov a1.f_q a1.f_k I_probs.mul".to_owned()));
    let node462 = Add::nrc(vec![node461.clone(), node460.clone(), node457.clone(), node454.clone(), node440.clone(), node455.clone()], Some("a1.const".to_owned()));
    let node463 = Rearrange::nrc(node462.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a1.const_sample".to_owned()));
    let node464 = Rearrange::nrc(node463.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a1.const_sample_rearrange_for_add_4".to_owned()));
    let node465 = Add::nrc(vec![node445.clone(), node450.clone(), node410.clone(), node452.clone(), node464.clone()], Some("m1.inp_sample".to_owned()));
    let node466 = Rearrange::nrc(node465.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1.inp_sample_rearrange_for_add_1".to_owned()));
    let node467 = Add::nrc(vec![node264.clone(), node466.clone()], Some("m1.n.sub_mean_sample".to_owned()));
    let node468 = Einsum::nrc(vec![(node467.clone(), vec![0,1,2]),(node38.clone(), vec![0,2])], vec![0,1,2], Some("m1.n.y_out_sample".to_owned()));
    let node469 = Rearrange::nrc(node468.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node470 = Add::nrc(vec![node270.clone(), node469.clone()], Some("m1.n_sample".to_owned()));
    let node471 = Einsum::nrc(vec![(node470.clone(), vec![0,1,2]),(node18.clone(), vec![0,2,3])], vec![0,1,3], Some("m1.before_product1_sample".to_owned()));
    let node472 = Rearrange::nrc(node471.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m1.before_product1_sample_rearrange_for_add_0".to_owned()));
    let node473 = Einsum::nrc(vec![(node470.clone(), vec![0,1,2]),(node20.clone(), vec![0,2,3])], vec![0,1,3], Some("m1.before_product0_sample".to_owned()));
    let node474 = Rearrange::nrc(node473.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(768))]), Some("m1.before_product0_sample_rearrange_for_add_0".to_owned()));
    let node475 = Add::nrc(vec![node472.clone(), node25.clone()], Some("m1.add1_sample".to_owned()));
    let node476 = Add::nrc(vec![node474.clone(), node28.clone()], Some("m1.add0_sample".to_owned()));
    let node477 = Einsum::nrc(vec![(node476.clone(), vec![0,1,2]),(node475.clone(), vec![0,1,2])], vec![0,1,2], Some("m1.act_sample".to_owned()));
    let node478 = Einsum::nrc(vec![(node477.clone(), vec![0,1,2]),(node22.clone(), vec![0,2,3])], vec![0,1,3], Some("m1_sample".to_owned()));
    let node479 = Rearrange::nrc(node478.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m1_sample_rearrange_for_add_0".to_owned()));
    let node480 = Add::nrc(vec![node479.clone(), node466.clone()], Some("final.inp_sample".to_owned()));
    let node481 = Rearrange::nrc(node480.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.inp_sample_rearrange_for_add_1".to_owned()));
    let node482 = Add::nrc(vec![node298.clone(), node481.clone()], Some("final.n.sub_mean_sample".to_owned()));
    let node483 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node482.clone(), vec![0,1,2])], vec![1,2], Some("final.n.sub_mean_sample_sample_expectation".to_owned()));
    let node484 = Rearrange::nrc(node483.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("final.n.sub_mean_sample_sample_expectation_sample".to_owned()));
    let node485 = Rearrange::nrc(node484.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.n.sub_mean_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node486 = Rearrange::nrc(node482.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("final.n.sub_mean_sample_rearrange_for_add_0".to_owned()));
    let node487 = Einsum::nrc(vec![(node485.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node488 = Add::nrc(vec![node486.clone(), node487.clone()], Some("final.n.sub_mean_centered_sample".to_owned()));
    let node489 = Einsum::nrc(vec![(node292.clone(), vec![0]),(node488.clone(), vec![0,1,2])], vec![0,1,2], Some("outer_sample".to_owned()));
    let node490 = Einsum::nrc(vec![(node286.clone(), vec![0]),(node489.clone(), vec![0,1,2])], vec![1,2], Some("outer_sample_sample_expectation".to_owned()));
    let node491 = Add::nrc(vec![node490.clone()], Some("I k2 final.n.sub_mean, is_is_var I_decompose".to_owned()));
    let node492 = Einsum::nrc(vec![(node491.clone(), vec![0,1]),(node284.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node493 = Einsum::nrc(vec![(node492.clone(), vec![0,1]),(node284.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node494 = Index::nrc(node493.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx ScalarMul".to_owned()));
    let node495 = Add::nrc(vec![node307.clone()], Some("I k2 final.n.sub_mean, is_is_var I_decompose".to_owned()));
    let node496 = Einsum::nrc(vec![(node495.clone(), vec![0,1]),(node284.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node497 = Einsum::nrc(vec![(node496.clone(), vec![0,1]),(node284.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node498 = Index::nrc(node497.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx ScalarMul".to_owned()));
    let node499 = Einsum::nrc(vec![(node494.clone(), vec![0]),(node11.clone(), vec![0])], vec![], Some("I k2 is_is_var, logit_diff I".to_owned()));
    let node500 = Rearrange::nrc(node499.clone(), RearrangeSpec::new(vec![], vec![vec![]], vec![]), Some("flatten".to_owned()));
    let node501 = Einsum::nrc(vec![(node498.clone(), vec![0]),(node11.clone(), vec![0])], vec![], Some("I k2 is_is_var, logit_diff I".to_owned()));
    let node502 = Rearrange::nrc(node501.clone(), RearrangeSpec::new(vec![], vec![vec![]], vec![]), Some("flatten".to_owned()));
    Concat::nrc(vec![node502.clone(), node500.clone()], 0, Some("flat_concat".to_owned()))
},{
    let node0 = ArrayConstant::randn_named_seeded(vec![50259,384], Some("w.unembed".to_owned()), 929193938916086232).rc();
    let node1 = ScalarConstant::nrc(-1_f64, vec![], Some("unnamed".to_owned()));
    let node2 = Index::nrc(node0.clone(), TensorIndex ( vec![TensorAxisIndex::Single(318), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx w.unembed".to_owned()));
    let node3 = Index::nrc(node0.clone(), TensorIndex ( vec![TensorAxisIndex::Single(373), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx w.unembed".to_owned()));
    let node4 = Einsum::nrc(vec![(node3.clone(), vec![0]),(node1.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node5 = Add::nrc(vec![node2.clone(), node4.clone()], Some("w.unembed_is_m_was".to_owned()));
    let node6 = ArrayConstant::randn_named_seeded(vec![384], Some("final.n.w.var".to_owned()), 4811093865619151916).rc();
    let node7 = ScalarConstant::nrc(0.00001_f64, vec![], Some("final.n.eps".to_owned()));
    let node8 = Add::nrc(vec![node6.clone(), node7.clone()], Some("final.n.w.var_p_eps".to_owned()));
    let node9 = ArrayConstant::randn_named_seeded(vec![384], Some("final.n.w.scale".to_owned()), 6746609514966997473).rc();
    let node10 = GeneralFunction::new_by_name(vec![node8.clone()], "rsqrt".to_owned(), Some("final.n.w.full_mul".to_owned())).unwrap().rc();
    let node11 = Einsum::nrc(vec![(node9.clone(), vec![0]),(node10.clone(), vec![0]),(node5.clone(), vec![0])], vec![0], Some("w.unembed_is_m_was_s".to_owned()));
    let node12 = ArrayConstant::randn_named_seeded(vec![32,384], Some("w.pos_embeds".to_owned()), 18302579321424555450).rc();
    let node13 = ArrayConstant::randn_named_seeded(vec![50259,384], Some("all_tok_embeds".to_owned()), 2599709625776908268).rc();
    let node14 = Index::nrc(node13.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(10259872,50259,2989056716027710065), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx all_tok_embeds".to_owned()));
    let node15 = Rearrange::nrc(node14.clone(), RearrangeSpec::new(vec![vec![0,1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(320621)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("tok_embeds_post_t_shape".to_owned()));
    let node16 = ScalarConstant::nrc(1_f64, vec![], Some("one".to_owned()));
    let node17 = Index::nrc(node15.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(32768,320621,17283998981374314592), TensorAxisIndex::Slice(Slice { start:None, stop:None }), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx tok_embeds_post_t_shape".to_owned()));
    let node18 = Rearrange::nrc(node17.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("embed_var_sample_rearrange_for_add_0".to_owned()));
    let node19 = ScalarConstant::nrc(0.044194173824159216_f64, vec![], Some("c.div_seq_len".to_owned()));
    let node20 = Rearrange::nrc(node19.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("c.div_seq_len_sample".to_owned()));
    let node21 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.v".to_owned()), 10133531896693890946).rc();
    let node22 = Rearrange::nrc(node21.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.v_sample".to_owned()));
    let node23 = ArrayConstant::randn_named_seeded(vec![8,1,1], Some("a0.w.sb".to_owned()), 1867266222616571753).rc();
    let node24 = Rearrange::nrc(node23.clone(), RearrangeSpec::new(vec![vec![0],vec![],vec![]], vec![vec![3],vec![0],vec![],vec![]], vec![OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1)),OpSize::from(Some(32768))]), Some("a0.w.sb_sample".to_owned()));
    let node25 = Rearrange::nrc(node24.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![],vec![]], vec![vec![0],vec![1],vec![],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(1)),OpSize::from(Some(1))]), Some("a0.w.sb_sample_rearrange_for_add_2".to_owned()));
    let node26 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.q".to_owned()), 15164929069836551244).rc();
    let node27 = Rearrange::nrc(node26.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.q_sample".to_owned()));
    let node28 = Einsum::nrc(vec![(node26.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a0.w.pos_q".to_owned()));
    let node29 = Rearrange::nrc(node28.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a0.w.pos_q_sample".to_owned()));
    let node30 = Rearrange::nrc(node29.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.w.pos_q_sample_rearrange_for_add_1".to_owned()));
    let node31 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.k".to_owned()), 13890711741635822223).rc();
    let node32 = Einsum::nrc(vec![(node31.clone(), vec![0,1,2]),(node12.clone(), vec![3,2])], vec![0,3,1], Some("a0.w.pos_k".to_owned()));
    let node33 = Rearrange::nrc(node32.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48)),OpSize::from(Some(32768))]), Some("a0.w.pos_k_sample".to_owned()));
    let node34 = Rearrange::nrc(node33.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.w.pos_k_sample_rearrange_for_add_1".to_owned()));
    let node35 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a0.w.out".to_owned()), 11344873045249210841).rc();
    let node36 = Rearrange::nrc(node35.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.out_sample".to_owned()));
    let node37 = Rearrange::nrc(node31.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![3],vec![0],vec![1],vec![2]], vec![OpSize::from(Some(8)),OpSize::from(Some(48)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.w.k_sample".to_owned()));
    let node38 = ArrayConstant::randn_named_seeded(vec![8], Some("a0.w.g1".to_owned()), 2618613096524235656).rc();
    let node39 = ArrayConstant::randn_named_seeded(vec![32], Some("a0.c.inv_nelt".to_owned()), 7885258334619126176).rc();
    let node40 = Einsum::nrc(vec![(node38.clone(), vec![0]),(node39.clone(), vec![1])], vec![0,1], Some("a0.w.g1op".to_owned()));
    let node41 = Rearrange::nrc(node40.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.w.g1op_sample".to_owned()));
    let node42 = Add::nrc(vec![node16.clone(), node40.clone()], Some("a0.w.c1".to_owned()));
    let node43 = Rearrange::nrc(node42.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.w.c1_sample".to_owned()));
    let node44 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.var".to_owned()), 2097624483321698950).rc();
    let node45 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a0.n.eps".to_owned()));
    let node46 = Add::nrc(vec![node44.clone(), node45.clone()], Some("a0.n.w.var_p_eps".to_owned()));
    let node47 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.scale".to_owned()), 13379100888128585973).rc();
    let node48 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.mean".to_owned()), 14181844882358567796).rc();
    let node49 = Rearrange::nrc(node48.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.mean_sample".to_owned()));
    let node50 = Rearrange::nrc(node49.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a0.n.w.mean_sample_rearrange_for_add_1".to_owned()));
    let node51 = GeneralFunction::new_by_name(vec![node46.clone()], "rsqrt".to_owned(), Some("a0.n.w.full_mul".to_owned())).unwrap().rc();
    let node52 = Einsum::nrc(vec![(node47.clone(), vec![0]),(node51.clone(), vec![0])], vec![0], Some("a0.n.w.full_s".to_owned()));
    let node53 = Rearrange::nrc(node52.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.full_s_sample".to_owned()));
    let node54 = Einsum::nrc(vec![(node50.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node55 = Add::nrc(vec![node18.clone(), node54.clone()], Some("a0.n.sub_mean_sample".to_owned()));
    let node56 = Einsum::nrc(vec![(node55.clone(), vec![0,1,2]),(node53.clone(), vec![0,2])], vec![0,1,2], Some("a0.n.y_out_sample".to_owned()));
    let node57 = Rearrange::nrc(node56.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a0.n.y_out_sample_rearrange_for_add_1".to_owned()));
    let node58 = ArrayConstant::randn_named_seeded(vec![384], Some("a0.n.w.bias".to_owned()), 7836263396355991022).rc();
    let node59 = Rearrange::nrc(node58.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![1],vec![0]], vec![OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("a0.n.w.bias_sample".to_owned()));
    let node60 = Rearrange::nrc(node59.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![0],vec![],vec![1]], vec![OpSize::from(Some(32768)),OpSize::from(Some(384)),OpSize::from(Some(1))]), Some("a0.n.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node61 = Add::nrc(vec![node60.clone(), node57.clone()], Some("a0.n_sample".to_owned()));
    let node62 = Einsum::nrc(vec![(node22.clone(), vec![0,1,2,3]),(node61.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.v_sample".to_owned()));
    let node63 = Einsum::nrc(vec![(node27.clone(), vec![0,1,2,3]),(node61.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.q_sample".to_owned()));
    let node64 = Rearrange::nrc(node63.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.q_sample_rearrange_for_add_0".to_owned()));
    let node65 = Einsum::nrc(vec![(node37.clone(), vec![0,1,2,3]),(node61.clone(), vec![0,4,3])], vec![0,1,4,2], Some("a0.k_sample".to_owned()));
    let node66 = Rearrange::nrc(node65.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(48))]), Some("a0.k_sample_rearrange_for_add_0".to_owned()));
    let node67 = Add::nrc(vec![node64.clone(), node30.clone()], Some("a0.f_q_sample".to_owned()));
    let node68 = Add::nrc(vec![node66.clone(), node34.clone()], Some("a0.f_k_sample".to_owned()));
    let node69 = ScalarConstant::nrc(0.14433756729740646_f64, vec![], Some("a0.c.div_head_size".to_owned()));
    let node70 = Rearrange::nrc(node69.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("a0.c.div_head_size_sample".to_owned()));
    let node71 = Einsum::nrc(vec![(node67.clone(), vec![0,1,2,3]),(node68.clone(), vec![0,1,4,3]),(node70.clone(), vec![0])], vec![0,1,2,4], Some("a0.scores_not_masked_sample".to_owned()));
    let node72 = Rearrange::nrc(node71.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.scores_not_masked_sample_rearrange_for_add_0".to_owned()));
    let node73 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.scale".to_owned()), 4874878538922573945).rc();
    let node74 = Rearrange::nrc(node73.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.scale_sample".to_owned()));
    let node75 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.mean".to_owned()), 4942623806828509992).rc();
    let node76 = Rearrange::nrc(node75.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.mean_sample".to_owned()));
    let node77 = Rearrange::nrc(node76.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.s.w.mean_sample_rearrange_for_add_1".to_owned()));
    let node78 = Einsum::nrc(vec![(node77.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node79 = Add::nrc(vec![node72.clone(), node78.clone()], Some("a0.s.sub_mean_sample".to_owned()));
    let node80 = Einsum::nrc(vec![(node79.clone(), vec![0,1,2,3]),(node74.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.s.y_scale_sample".to_owned()));
    let node81 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.var".to_owned()), 17367023124078262057).rc();
    let node82 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a0.s.eps".to_owned()));
    let node83 = Add::nrc(vec![node81.clone(), node82.clone()], Some("a0.s.w.var_p_eps".to_owned()));
    let node84 = GeneralFunction::new_by_name(vec![node83.clone()], "rsqrt".to_owned(), Some("a0.s.w.full_mul".to_owned())).unwrap().rc();
    let node85 = Rearrange::nrc(node84.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.full_mul_sample".to_owned()));
    let node86 = Einsum::nrc(vec![(node80.clone(), vec![0,1,2,3]),(node85.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.s.y_out_sample".to_owned()));
    let node87 = Rearrange::nrc(node86.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.s.y_out_sample_rearrange_for_add_1".to_owned()));
    let node88 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.s.w.bias".to_owned()), 15464796744735661784).rc();
    let node89 = Rearrange::nrc(node88.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.s.w.bias_sample".to_owned()));
    let node90 = Rearrange::nrc(node89.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.s.w.bias_sample_rearrange_for_add_0".to_owned()));
    let node91 = Add::nrc(vec![node90.clone(), node87.clone()], Some("a0.s_sample".to_owned()));
    let node92 = Einsum::nrc(vec![(node91.clone(), vec![0,1,2,3]),(node20.clone(), vec![0])], vec![0,1,2,3], Some("a0.scores_normed_sample".to_owned()));
    let node93 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node94 = Rearrange::nrc(node93.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.c.score_mask_sample".to_owned()));
    let node95 = Einsum::nrc(vec![(node92.clone(), vec![0,1,2,3]),(node94.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.scores_mul_mask_sample".to_owned()));
    let node96 = Einsum::nrc(vec![(node95.clone(), vec![0,1,2,3]),(node41.clone(), vec![0,1,2])], vec![0,1,2], Some("a0.t1_sample".to_owned()));
    let node97 = Rearrange::nrc(node96.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.t1u_sample".to_owned()));
    let node98 = Rearrange::nrc(node97.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![]], vec![vec![0],vec![1],vec![2],vec![]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(1))]), Some("a0.t1u_sample_rearrange_for_add_1".to_owned()));
    let node99 = Einsum::nrc(vec![(node92.clone(), vec![0,1,2,3]),(node43.clone(), vec![0,1,2])], vec![0,1,2,3], Some("a0.t0_sample".to_owned()));
    let node100 = Rearrange::nrc(node99.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2],vec![3]], vec![vec![0],vec![1],vec![2],vec![3]], vec![OpSize::from(Some(32768)),OpSize::from(Some(8)),OpSize::from(Some(32)),OpSize::from(Some(32))]), Some("a0.t0_sample_rearrange_for_add_0".to_owned()));
    let node101 = Einsum::nrc(vec![(node98.clone(), vec![0,1,2,3]),(node1.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node102 = Add::nrc(vec![node100.clone(), node101.clone(), node25.clone()], Some("a0.pre_probs_sample".to_owned()));
    let node103 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a0.pp.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node104 = Rearrange::nrc(node103.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(32)),OpSize::from(Some(32768))]), Some("a0.pp.c.score_mask_sample".to_owned()));
    let node105 = Einsum::nrc(vec![(node102.clone(), vec![0,1,2,3]),(node104.clone(), vec![0,2,3])], vec![0,1,2,3], Some("a0.probs_sample".to_owned()));
    let node106 = Einsum::nrc(vec![(node105.clone(), vec![0,1,2,3]),(node62.clone(), vec![0,1,3,4])], vec![0,2,1,4], Some("a0.comb_v_sample".to_owned()));
    let node107 = Einsum::nrc(vec![(node106.clone(), vec![0,1,2,3]),(node36.clone(), vec![0,2,3,4])], vec![0,1,4], Some("a0_sample".to_owned()));
    let node108 = Rearrange::nrc(node107.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("a0_sample_rearrange_for_add_1".to_owned()));
    let node109 = Add::nrc(vec![node18.clone(), node108.clone()], Some("m0.inp_sample".to_owned()));
    let node110 = ScalarConstant::nrc(0.000030517578125_f64, vec![32768], Some("empirical_weights_for_sampled".to_owned()));
    let node111 = Einsum::nrc(vec![(node110.clone(), vec![0])], vec![], Some("Ein".to_owned()));
    let node112 = GeneralFunction::new_by_name(vec![node111.clone()], "reciprocal".to_owned(), Some("Ein_recip".to_owned())).unwrap().rc();
    let node113 = Einsum::nrc(vec![(node110.clone(), vec![0]),(node112.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node114 = Einsum::nrc(vec![(node113.clone(), vec![0]),(node109.clone(), vec![0,1,2])], vec![1,2], Some("m0.inp_sample_sample_expectation".to_owned()));
    let node115 = Rearrange::nrc(node114.clone(), RearrangeSpec::new(vec![vec![0],vec![1]], vec![vec![2],vec![0],vec![1]], vec![OpSize::from(Some(32)),OpSize::from(Some(384)),OpSize::from(Some(32768))]), Some("m0.inp_sample_sample_expectation_sample".to_owned()));
    let node116 = Rearrange::nrc(node115.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m0.inp_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node117 = Rearrange::nrc(node109.clone(), RearrangeSpec::new(vec![vec![0],vec![1],vec![2]], vec![vec![0],vec![1],vec![2]], vec![OpSize::from(Some(32768)),OpSize::from(Some(32)),OpSize::from(Some(384))]), Some("m0.inp_sample_rearrange_for_add_0".to_owned()));
    let node118 = Einsum::nrc(vec![(node116.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node119 = Add::nrc(vec![node117.clone(), node118.clone()], Some("m0.inp_centered_sample".to_owned()));
    let node120 = Einsum::nrc(vec![(node119.clone(), vec![0,1,2]),(node119.clone(), vec![0,3,4])], vec![0,1,2,3,4], Some("outer_sample".to_owned()));
    let node121 = Einsum::nrc(vec![(node113.clone(), vec![0]),(node120.clone(), vec![0,1,2,3,4])], vec![1,2,3,4], Some("outer_sample_sample_expectation".to_owned()));
    let node122 = ArrayConstant::randn_named_seeded(vec![320621], Some("is_is".to_owned()), 12816690053324737994).rc();
    let node123 = Index::nrc(node122.clone(), TensorIndex ( vec![TensorAxisIndex::new_tensor_randint_seeded(32768,320621,17283998981374314592)] ), Some("idx is_is".to_owned()));
    let node124 = Einsum::nrc(vec![(node113.clone(), vec![0]),(node123.clone(), vec![0])], vec![], Some("is_is_var_sample_sample_expectation".to_owned()));
    let node125 = Rearrange::nrc(node124.clone(), RearrangeSpec::new(vec![], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_sample_expectation_sample".to_owned()));
    let node126 = Rearrange::nrc(node125.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_sample_expectation_sample_rearrange_for_add_1".to_owned()));
    let node127 = Rearrange::nrc(node123.clone(), RearrangeSpec::new(vec![vec![0]], vec![vec![0]], vec![OpSize::from(Some(32768))]), Some("is_is_var_sample_rearrange_for_add_0".to_owned()));
    let node128 = Einsum::nrc(vec![(node126.clone(), vec![0]),(node1.clone(), vec![])], vec![0], Some("ScalarMul".to_owned()));
    let node129 = Add::nrc(vec![node127.clone(), node128.clone()], Some("is_is_var_centered_sample".to_owned()));
    let node130 = Einsum::nrc(vec![(node119.clone(), vec![0,1,2]),(node129.clone(), vec![0])], vec![0,1,2], Some("outer_sample".to_owned()));
    let node131 = Einsum::nrc(vec![(node113.clone(), vec![0]),(node130.clone(), vec![0,1,2])], vec![1,2], Some("outer_sample_sample_expectation".to_owned()));
    let node132 = Einsum::nrc(vec![(node119.clone(), vec![0,1,2]),(node119.clone(), vec![0,3,4]),(node119.clone(), vec![0,5,6]),(node129.clone(), vec![0])], vec![0,1,2,3,4,5,6], Some("outer_sample".to_owned()));
    let node133 = Einsum::nrc(vec![(node113.clone(), vec![0]),(node132.clone(), vec![0,1,2,3,4,5,6])], vec![1,2,3,4,5,6], Some("outer_sample_sample_expectation".to_owned()));
    let node134 = Add::nrc(vec![node131.clone()], Some("I k2 is_is_var, m0.inp I_decompose".to_owned()));
    let node135 = Einsum::nrc(vec![(node134.clone(), vec![0,1]),(node111.clone(), vec![])], vec![0,1], Some("ScalarMul".to_owned()));
    let node136 = Add::nrc(vec![node121.clone()], Some("I k2 m0.inp, m0.inp I_decompose".to_owned()));
    let node137 = Einsum::nrc(vec![(node136.clone(), vec![0,1,2,3]),(node111.clone(), vec![])], vec![0,1,2,3], Some("ScalarMul".to_owned()));
    let node138 = Einsum::nrc(vec![(node137.clone(), vec![0,1,2,3]),(node135.clone(), vec![4,5])], vec![2,3,0,1,4,5], Some("outer".to_owned()));
    let node139 = Einsum::nrc(vec![(node137.clone(), vec![0,1,2,3]),(node135.clone(), vec![4,5])], vec![2,3,4,5,0,1], Some("outer".to_owned()));
    let node140 = Einsum::nrc(vec![(node137.clone(), vec![0,1,2,3]),(node135.clone(), vec![4,5])], vec![4,5,2,3,0,1], Some("outer".to_owned()));
    let node141 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m1.w.w1".to_owned()), 1331227591797635193).rc();
    let node142 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.var".to_owned()), 7096362628065231700).rc();
    let node143 = ScalarConstant::nrc(0.00001_f64, vec![], Some("m1.n.eps".to_owned()));
    let node144 = Add::nrc(vec![node142.clone(), node143.clone()], Some("m1.n.w.var_p_eps".to_owned()));
    let node145 = ArrayConstant::randn_named_seeded(vec![384], Some("m1.n.w.scale".to_owned()), 1636268016078253515).rc();
    let node146 = GeneralFunction::new_by_name(vec![node144.clone()], "rsqrt".to_owned(), Some("m1.n.w.full_mul".to_owned())).unwrap().rc();
    let node147 = Einsum::nrc(vec![(node145.clone(), vec![0]),(node146.clone(), vec![0]),(node141.clone(), vec![0,1])], vec![0,1], Some("m1.w.w1_s".to_owned()));
    let node148 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m1.w.w0".to_owned()), 13185449622808679385).rc();
    let node149 = Einsum::nrc(vec![(node145.clone(), vec![0]),(node146.clone(), vec![0]),(node148.clone(), vec![0,1])], vec![0,1], Some("m1.w.w0_s".to_owned()));
    let node150 = ArrayConstant::randn_named_seeded(vec![768,384], Some("m1.w.out".to_owned()), 9981532348689177629).rc();
    let node151 = ArrayConstant::randn_named_seeded(vec![384,60], Some("m1.o.1".to_owned()), 12085267234228853601).rc();
    let node152 = ArrayConstant::randn_named_seeded(vec![384,60], Some("m1.o.0".to_owned()), 8166564426074829334).rc();
    let node153 = Einsum::nrc(vec![(node152.clone(), vec![0,1]),(node151.clone(), vec![2,1])], vec![0,2,1], Some("m1.o.outer".to_owned()));
    let node154 = Einsum::nrc(vec![(node153.clone(), vec![0,1,2]),(node153.clone(), vec![3,4,2])], vec![0,1,3,4], Some("m1.o.low_rank_id".to_owned()));
    let node155 = Einsum::nrc(vec![(node154.clone(), vec![0,1,2,3]),(node149.clone(), vec![3,4]),(node147.clone(), vec![2,4]),(node150.clone(), vec![4,5])], vec![0,1,5], Some("m1.weights".to_owned()));
    let node156 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m0.w.w1".to_owned()), 311213855405491785).rc();
    let node157 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.var".to_owned()), 1660750471384108115).rc();
    let node158 = ScalarConstant::nrc(0.00001_f64, vec![], Some("m0.n.eps".to_owned()));
    let node159 = Add::nrc(vec![node157.clone(), node158.clone()], Some("m0.n.w.var_p_eps".to_owned()));
    let node160 = ArrayConstant::randn_named_seeded(vec![384], Some("m0.n.w.scale".to_owned()), 3754049060485329335).rc();
    let node161 = GeneralFunction::new_by_name(vec![node159.clone()], "rsqrt".to_owned(), Some("m0.n.w.full_mul".to_owned())).unwrap().rc();
    let node162 = Einsum::nrc(vec![(node160.clone(), vec![0]),(node161.clone(), vec![0]),(node156.clone(), vec![0,1])], vec![0,1], Some("m0.w.w1_s".to_owned()));
    let node163 = ArrayConstant::randn_named_seeded(vec![384,768], Some("m0.w.w0".to_owned()), 864408194459359880).rc();
    let node164 = Einsum::nrc(vec![(node160.clone(), vec![0]),(node161.clone(), vec![0]),(node163.clone(), vec![0,1])], vec![0,1], Some("m0.w.w0_s".to_owned()));
    let node165 = ArrayConstant::randn_named_seeded(vec![768,384], Some("m0.w.out".to_owned()), 10661202434590036135).rc();
    let node166 = ArrayConstant::randn_named_seeded(vec![450,450], Some("m0.o.r_inv".to_owned()), 11122358394958234388).rc();
    let node167 = ArrayConstant::randn_named_seeded(vec![384,450], Some("m0.o.1_side".to_owned()), 10693498701633427610).rc();
    let node168 = ArrayConstant::randn_named_seeded(vec![384,450], Some("m0.o.0_side".to_owned()), 12652967732354939235).rc();
    let node169 = Einsum::nrc(vec![(node168.clone(), vec![0,1]),(node167.clone(), vec![2,1])], vec![0,2,1], Some("m0.o.both".to_owned()));
    let node170 = Einsum::nrc(vec![(node169.clone(), vec![0,1,2]),(node166.clone(), vec![2,3])], vec![0,1,3], Some("m0.o.qr".to_owned()));
    let node171 = Einsum::nrc(vec![(node170.clone(), vec![0,1,2]),(node170.clone(), vec![3,4,2])], vec![0,1,3,4], Some("m0.o.low_rank_id".to_owned()));
    let node172 = ArrayConstant::randn_named_seeded(vec![32,5], Some("m0.o.direct_pos.dirs".to_owned()), 205034188550914415).rc();
    let node173 = ArrayConstant::randn_named_seeded(vec![32,384,384], Some("m0.direct.mul_estimed".to_owned()), 15838276505077090363).rc();
    let node174 = Einsum::nrc(vec![(node173.clone(), vec![0,1,2]),(node172.clone(), vec![0,3])], vec![1,2,3], Some("m0.direct.mul_estimed m0.o.direct_pos.dirs".to_owned()));
    let node175 = Einsum::nrc(vec![(node174.clone(), vec![0,1,2]),(node172.clone(), vec![3,2])], vec![3,0,1], Some("m0.direct.mul_estimed_low_rank_id".to_owned()));
    let node176 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.v".to_owned()), 8687698313936163101).rc();
    let node177 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.out".to_owned()), 15478159692831585940).rc();
    let node178 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.var".to_owned()), 1425219787154012984).rc();
    let node179 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a1.n.eps".to_owned()));
    let node180 = Add::nrc(vec![node178.clone(), node179.clone()], Some("a1.n.w.var_p_eps".to_owned()));
    let node181 = ArrayConstant::randn_named_seeded(vec![384], Some("a1.n.w.scale".to_owned()), 2062098532837674558).rc();
    let node182 = GeneralFunction::new_by_name(vec![node180.clone()], "rsqrt".to_owned(), Some("a1.n.w.full_mul".to_owned())).unwrap().rc();
    let node183 = Einsum::nrc(vec![(node181.clone(), vec![0]),(node182.clone(), vec![0])], vec![0], Some("a1.n.w.full_s".to_owned()));
    let node184 = Einsum::nrc(vec![(node183.clone(), vec![0]),(node177.clone(), vec![1,2,3]),(node176.clone(), vec![1,2,0])], vec![1,0,3], Some("a1.w.ov_s_".to_owned()));
    let node185 = ScalarConstant::nrc(1_f64, vec![384,1], Some("a1.direct.ov.ident_ones".to_owned()));
    let node186 = Einsum::nrc(vec![(node185.clone(), vec![0,1])], vec![1,0,0], Some("a1.direct.ov.ident".to_owned()));
    let node187 = Concat::nrc(vec![node184.clone(), node186.clone()], 0, Some("a1.w.ov_s_with_ident".to_owned()));
    let node188 = ArrayConstant::randn_named_seeded(vec![9,32], Some("a1.probs_with_ident_last_estimed".to_owned()), 3815631680612149519).rc();
    let node189 = ArrayConstant::randn_named_seeded(vec![9,4], Some("a1.o.k1_probs.dirs".to_owned()), 10056162064710077951).rc();
    let node190 = ArrayConstant::randn_named_seeded(vec![32,9], Some("a1.o.k1_probs.basis".to_owned()), 5879176013628498381).rc();
    let node191 = Einsum::nrc(vec![(node189.clone(), vec![0,1]),(node190.clone(), vec![2,0])], vec![2,1], Some("a1.o.k1_probs.to_basis".to_owned()));
    let node192 = Einsum::nrc(vec![(node191.clone(), vec![0,1]),(node188.clone(), vec![2,0])], vec![2,1], Some("a1.probs_in_basis".to_owned()));
    let node193 = Einsum::nrc(vec![(node140.clone(), vec![0,1,2,3,4,5]),(node1.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node194 = Einsum::nrc(vec![(node139.clone(), vec![0,1,2,3,4,5]),(node1.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node195 = Einsum::nrc(vec![(node138.clone(), vec![0,1,2,3,4,5]),(node1.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node196 = Add::nrc(vec![node133.clone(), node195.clone(), node193.clone(), node194.clone()], Some("I k4 is_is_var, m0.inp, m0.inp, m0.inp I_decompose".to_owned()));
    let node197 = Einsum::nrc(vec![(node196.clone(), vec![0,1,2,3,4,5]),(node111.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node198 = Einsum::nrc(vec![(node197.clone(), vec![0,1,2,3,4,5]),(node111.clone(), vec![])], vec![0,1,2,3,4,5], Some("ScalarMul".to_owned()));
    let node199 = Einsum::nrc(vec![(node198.clone(), vec![0,1,2,3,4,5]),(node171.clone(), vec![5,3,6,7])], vec![0,1,2,7,4,6], Some("I k4 is_is_var, m0.inp, m0.inp, m0.inp I_low_rank_id".to_owned()));
    let node200 = Einsum::nrc(vec![(node199.clone(), vec![0,1,2,3,2,4]),(node164.clone(), vec![4,5]),(node162.clone(), vec![3,5]),(node165.clone(), vec![5,6])], vec![0,1,2,6], Some("I k3 eps_dec_i I eps2 m0.add0, m0.add1 I_eps I k1  I_mul_out, is_is_var, m0.inp I shaped_ablation".to_owned()));
    let node201 = Einsum::nrc(vec![(node200.clone(), vec![0,1,2,3]),(node175.clone(), vec![0,1,4])], vec![2,3,0,4], Some("I k3 a1.inp, is_is_var, m0.direct.term I shaped_ablation_ablation".to_owned()));
    let node202 = Einsum::nrc(vec![(node201.clone(), vec![0,1,2,3]),(node187.clone(), vec![4,3,5]),(node191.clone(), vec![2,6]),(node192.clone(), vec![4,6]),(node187.clone(), vec![7,1,8]),(node191.clone(), vec![0,9]),(node192.clone(), vec![7,9]),(node155.clone(), vec![5,8,10])], vec![10], Some("m1.k3_term_ablation_ablation".to_owned()));
    let node203 = ArrayConstant::randn_named_seeded(vec![384,384], Some("m1.direct.mul_last_estimed".to_owned()), 17609586715883837816).rc();
    let node204 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.scale".to_owned()), 3798037696282213373).rc();
    let node205 = Index::nrc(node204.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx a1.s.w.scale".to_owned()));
    let node206 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.s.w.var".to_owned()), 4873730304271440433).rc();
    let node207 = ScalarConstant::nrc(0.00001_f64, vec![], Some("a1.s.eps".to_owned()));
    let node208 = Add::nrc(vec![node206.clone(), node207.clone()], Some("a1.s.w.var_p_eps".to_owned()));
    let node209 = GeneralFunction::new_by_name(vec![node208.clone()], "rsqrt".to_owned(), Some("a1.s.w.full_mul".to_owned())).unwrap().rc();
    let node210 = Index::nrc(node209.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx a1.s.w.full_mul".to_owned()));
    let node211 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.pp.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node212 = Index::nrc(node211.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx a1.pp.c.score_mask".to_owned()));
    let node213 = ArrayConstant::randn_named_seeded(vec![32,32], Some("a1.c.score_mask".to_owned()), 8724464318490575396).rc();
    let node214 = Index::nrc(node213.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1), TensorAxisIndex::Slice(Slice { start:None, stop:None })] ), Some("idx a1.c.score_mask".to_owned()));
    let node215 = ArrayConstant::randn_named_seeded(vec![32], Some("a1.c.inv_nelt".to_owned()), 7885258334619126176).rc();
    let node216 = Index::nrc(node215.clone(), TensorIndex ( vec![TensorAxisIndex::Single(-1)] ), Some("idx a1.c.inv_nelt".to_owned()));
    let node217 = Einsum::nrc(vec![(node181.clone(), vec![0]),(node182.clone(), vec![0]),(node176.clone(), vec![1,2,0]),(node177.clone(), vec![1,2,3])], vec![0,1,3], Some("a1.w.ov_s".to_owned()));
    let node218 = ArrayConstant::randn_named_seeded(vec![8,48,384], Some("a1.w.k".to_owned()), 346631027691184275).rc();
    let node219 = Einsum::nrc(vec![(node181.clone(), vec![0]),(node182.clone(), vec![0]),(node218.clone(), vec![1,2,0])], vec![0,1,2], Some("a1.w.k_s".to_owned()));
    let node220 = ArrayConstant::randn_named_seeded(vec![2,2], Some("a1.o.k_k3.r_inv".to_owned()), 13012657009289174349).rc();
    let node221 = ArrayConstant::randn_named_seeded(vec![384,2], Some("a1.o.k_k3.ov_side".to_owned()), 4291626727429213053).rc();
    let node222 = ArrayConstant::randn_named_seeded(vec![384,2], Some("a1.o.k_k3.k_side".to_owned()), 12849349568052364750).rc();
    let node223 = Einsum::nrc(vec![(node222.clone(), vec![0,1]),(node221.clone(), vec![2,1])], vec![0,2,1], Some("a1.o.k_k3.outer".to_owned()));
    let node224 = Einsum::nrc(vec![(node223.clone(), vec![0,1,2]),(node220.clone(), vec![2,3])], vec![0,1,3], Some("a1.o.k_k3.qr".to_owned()));
    let node225 = ArrayConstant::randn_named_seeded(vec![8,48], Some("I k1 a1.f_q I_last_estimed".to_owned()), 8776661307162712220).rc();
    let node226 = Einsum::nrc(vec![(node224.clone(), vec![0,1,2]),(node219.clone(), vec![0,3,4]),(node225.clone(), vec![3,4])], vec![2,1,3], Some("a1.w.k1_q_k_s_low_rank".to_owned()));
    let node227 = ArrayConstant::randn_named_seeded(vec![8], Some("a1.w.g1".to_owned()), 3291412235451830005).rc();
    let node228 = Einsum::nrc(vec![(node227.clone(), vec![0]),(node216.clone(), vec![])], vec![0], Some("a1.w.g1op_last".to_owned()));
    let node229 = Add::nrc(vec![node16.clone(), node228.clone()], Some("a1.w.c1_last".to_owned()));
    let node230 = Einsum::nrc(vec![(node229.clone(), vec![0]),(node212.clone(), vec![1])], vec![1,0,1], Some("a1.w.c1 a1.pp.c.score_mask extra_probs_dim_last".to_owned()));
    let node231 = Einsum::nrc(vec![(node214.clone(), vec![0]),(node227.clone(), vec![1]),(node216.clone(), vec![]),(node212.clone(), vec![2])], vec![0,1,2], Some("a1.c.score_mask a1.w.g1 a1.c.inv_nelt a1.pp.c.score_mask_last".to_owned()));
    let node232 = Einsum::nrc(vec![(node231.clone(), vec![0,1,2]),(node1.clone(), vec![])], vec![0,1,2], Some("ScalarMul".to_owned()));
    let node233 = Add::nrc(vec![node230.clone(), node232.clone()], Some("a1.probs.w_conv_last".to_owned()));
    let node234 = ScalarConstant::nrc(0.14433756729740646_f64, vec![], Some("a1.c.div_head_size".to_owned()));
    let node235 = Einsum::nrc(vec![(node234.clone(), vec![]),(node205.clone(), vec![0]),(node210.clone(), vec![0]),(node19.clone(), vec![]),(node233.clone(), vec![0,1,2])], vec![2,0,1], Some("a1.probs.w_conv_last_s".to_owned()));
    let node236 = Einsum::nrc(vec![(node201.clone(), vec![0,1,2,3]),(node224.clone(), vec![3,1,4])], vec![0,2,4], Some("I k3 a1.inp, a1.inp, is_is_var I a1.o.k_k3.qr_ablation_ablation".to_owned()));
    let node237 = Einsum::nrc(vec![(node236.clone(), vec![0,1,2]),(node226.clone(), vec![2,3,4]),(node235.clone(), vec![0,1,4]),(node217.clone(), vec![3,4,5])], vec![5], Some("I k2 eps_dec_multi a1.ov a1.f_q a1.f_k_probs.mul, is_is_var I shaped_last_ablation_ablation".to_owned()));
    let node238 = Einsum::nrc(vec![(node237.clone(), vec![0]),(node203.clone(), vec![0,1])], vec![1], Some("I k2 is_is_var, m1.direct.term I shaped_perm_last_ablation_ablation".to_owned()));
    let node239 = Add::nrc(vec![node202.clone(), node238.clone()], Some("I k2 final.n.sub_mean, is_is_var I_last_ablation_ablation".to_owned()));
    let node240 = Einsum::nrc(vec![(node239.clone(), vec![0]),(node11.clone(), vec![0])], vec![], Some("I k2 is_is_var, logit_diff I_ablation_ablation".to_owned()));
    let node241 = Rearrange::nrc(node240.clone(), RearrangeSpec::new(vec![], vec![vec![]], vec![]), Some("flatten".to_owned()));
    Concat::nrc(vec![node241.clone()], 0, Some("flat_concat".to_owned()))
}];
    let mut settings: OptimizationSettings = Default::default();
    settings.verbose = 2;
    for circuit in circuits {
        let circ_gpu = cast_circuit(
            circuit.clone(),
            &TorchDeviceDtype {
                device: "cuda".to_owned(),
                dtype: "float16".to_owned(),
            },
        );
        let result = optimize_and_evaluate(circ_gpu, settings);
    }
}
#[cfg(test)]
mod tests {

    use super::*;
    use rust_circuit::circuit::{Add, ArrayConstant, CircuitNode, Einsum, GeneralFunction};
    use test::Bencher;
}
