{"version":3,"file":"chunks/app_components_modals_diffModal_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/interfaces/crashContent/stackTrace/rawContent.tsx","webpack:///./app/components/events/interfaces/frame/utils.tsx","webpack:///./app/components/events/interfaces/types.tsx","webpack:///./app/components/issueDiff/renderGroupingInfo.tsx","webpack:///./app/components/issueDiff/index.tsx","webpack:///./app/components/modals/diffModal.tsx","webpack:///./app/utils/getStacktraceBody.tsx","webpack:///./app/utils/useApi.tsx","webpack:///./app/utils/withApi.tsx"],"sourcesContent":["import {trimPackage} from 'sentry/components/events/interfaces/frame/utils';\nimport {ExceptionValue, Frame} from 'sentry/types';\nimport {StacktraceType} from 'sentry/types/stacktrace';\nimport {defined, trim} from 'sentry/utils';\n\nfunction getJavaScriptFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.function)) {\n    result += '  at ' + frame.function + '(';\n  } else {\n    result += '  at ? (';\n  }\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += frame.module;\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  result += ')';\n  return result;\n}\n\nfunction getRubyFrame(frame: Frame): string {\n  let result = '  from ';\n  if (defined(frame.filename)) {\n    result += frame.filename;\n  } else if (defined(frame.module)) {\n    result += '(' + frame.module + ')';\n  } else {\n    result += '?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ':' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ':' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ':in `' + frame.function + \"'\";\n  }\n  return result;\n}\n\nexport function getPHPFrame(frame: Frame, idx: number): string {\n  const funcName = frame.function === 'null' ? '{main}' : frame.function;\n  return `#${idx} ${frame.filename || frame.module}(${frame.lineNo}): ${funcName}`;\n}\n\nexport function getPythonFrame(frame: Frame): string {\n  let result = '';\n  if (defined(frame.filename)) {\n    result += '  File \"' + frame.filename + '\"';\n  } else if (defined(frame.module)) {\n    result += '  Module \"' + frame.module + '\"';\n  } else {\n    result += '  ?';\n  }\n  if (defined(frame.lineNo) && frame.lineNo >= 0) {\n    result += ', line ' + frame.lineNo;\n  }\n  if (defined(frame.colNo) && frame.colNo >= 0) {\n    result += ', col ' + frame.colNo;\n  }\n  if (defined(frame.function)) {\n    result += ', in ' + frame.function;\n  }\n  if (defined(frame.context)) {\n    frame.context.forEach(item => {\n      if (item[0] === frame.lineNo) {\n        result += '\\n    ' + trim(item[1]);\n      }\n    });\n  }\n  return result;\n}\n\nexport function getJavaFrame(frame: Frame): string {\n  let result = '    at';\n  if (defined(frame.module)) {\n    result += ' ' + frame.module + '.';\n  }\n  if (defined(frame.function)) {\n    result += frame.function;\n  }\n  if (defined(frame.filename)) {\n    result += '(' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nfunction ljust(str: string, len: number) {\n  return str + Array(Math.max(0, len - str.length) + 1).join(' ');\n}\n\nexport function getNativeFrame(frame: Frame): string {\n  let result = '  ';\n  if (defined(frame.package)) {\n    result += ljust(trimPackage(frame.package), 20);\n  }\n  if (defined(frame.instructionAddr)) {\n    result += ljust(frame.instructionAddr, 12);\n  }\n  result += ' ' + (frame.function || frame.symbolAddr);\n  if (defined(frame.filename)) {\n    result += ' (' + frame.filename;\n    if (defined(frame.lineNo) && frame.lineNo >= 0) {\n      result += ':' + frame.lineNo;\n    }\n    result += ')';\n  }\n  return result;\n}\n\nexport function getJavaPreamble(exception: ExceptionValue): string {\n  let result = `${exception.type}: ${exception.value}`;\n  if (exception.module) {\n    result = `${exception.module}.${result}`;\n  }\n  return result;\n}\n\nfunction getPreamble(exception: ExceptionValue, platform: string | undefined): string {\n  switch (platform) {\n    case 'java':\n      return getJavaPreamble(exception);\n    default:\n      return exception.type + ': ' + exception.value;\n  }\n}\n\nfunction getFrame(frame: Frame, frameIdx: number, platform: string | undefined): string {\n  if (frame.platform) {\n    platform = frame.platform;\n  }\n  switch (platform) {\n    case 'javascript':\n      return getJavaScriptFrame(frame);\n    case 'ruby':\n      return getRubyFrame(frame);\n    case 'php':\n      return getPHPFrame(frame, frameIdx);\n    case 'python':\n      return getPythonFrame(frame);\n    case 'java':\n      return getJavaFrame(frame);\n    case 'objc':\n    // fallthrough\n    case 'cocoa':\n    // fallthrough\n    case 'native':\n      return getNativeFrame(frame);\n    default:\n      return getPythonFrame(frame);\n  }\n}\n\nexport default function render(\n  data: StacktraceType,\n  platform?: string,\n  exception?: ExceptionValue\n) {\n  const frames: string[] = [];\n\n  (data?.frames ?? []).forEach((frame, frameIdx) => {\n    frames.push(getFrame(frame, frameIdx, platform));\n  });\n\n  if (platform !== 'python') {\n    frames.reverse();\n  }\n\n  if (exception) {\n    frames.unshift(getPreamble(exception, platform));\n  }\n\n  return frames.join('\\n');\n}\n","import {IconQuestion, IconWarning} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Frame, PlatformType} from 'sentry/types';\nimport {defined, objectIsEmpty} from 'sentry/utils';\n\nimport {SymbolicatorStatus} from '../types';\n\nexport function trimPackage(pkg: string) {\n  const pieces = pkg.split(/^([a-z]:\\\\|\\\\\\\\)/i.test(pkg) ? '\\\\' : '/');\n  const filename = pieces[pieces.length - 1] || pieces[pieces.length - 2] || pkg;\n  return filename.replace(/\\.(dylib|so|a|dll|exe)$/, '');\n}\n\nexport function getPlatform(dataPlatform: PlatformType | null, platform: string) {\n  // prioritize the frame platform but fall back to the platform\n  // of the stack trace / exception\n  return dataPlatform || platform;\n}\n\nexport function getFrameHint(frame: Frame) {\n  // returning [hintText, hintIcon]\n  const {symbolicatorStatus} = frame;\n  const func = frame.function || '<unknown>';\n  // Custom color used to match adjacent text.\n  const warningIcon = <IconQuestion size=\"xs\" color={'#2c45a8' as any} />;\n  const errorIcon = <IconWarning size=\"xs\" color=\"red300\" />;\n\n  if (func.match(/^@objc\\s/)) {\n    return [t('Objective-C -> Swift shim frame'), warningIcon];\n  }\n  if (func.match(/^__?hidden#\\d+/)) {\n    return [t('Hidden function from bitcode build'), errorIcon];\n  }\n  if (!symbolicatorStatus && func === '<unknown>') {\n    // Only render this if the event was not symbolicated.\n    return [t('No function name was supplied by the client SDK.'), warningIcon];\n  }\n\n  if (\n    func === '<unknown>' ||\n    (func === '<redacted>' && symbolicatorStatus === SymbolicatorStatus.MISSING_SYMBOL)\n  ) {\n    switch (symbolicatorStatus) {\n      case SymbolicatorStatus.MISSING_SYMBOL:\n        return [t('The symbol was not found within the debug file.'), warningIcon];\n      case SymbolicatorStatus.UNKNOWN_IMAGE:\n        return [t('No image is specified for the address of the frame.'), warningIcon];\n      case SymbolicatorStatus.MISSING:\n        return [\n          t('The debug file could not be retrieved from any of the sources.'),\n          errorIcon,\n        ];\n      case SymbolicatorStatus.MALFORMED:\n        return [t('The retrieved debug file could not be processed.'), errorIcon];\n      default:\n    }\n  }\n\n  if (func === '<redacted>') {\n    return [t('Unknown system frame. Usually from beta SDKs'), warningIcon];\n  }\n\n  return [null, null];\n}\n\nexport function isDotnet(platform: string) {\n  // csharp platform represents .NET and can be F#, VB or any language targeting CLS (the Common Language Specification)\n  return platform === 'csharp';\n}\n\nexport function hasContextSource(frame: Frame) {\n  return defined(frame.context) && !!frame.context.length;\n}\n\nexport function hasContextVars(frame: Frame) {\n  return !objectIsEmpty(frame.vars || {});\n}\n\nexport function hasContextRegisters(registers: Record<string, string>) {\n  return !objectIsEmpty(registers);\n}\n\nexport function hasAssembly(frame: Frame, platform?: string) {\n  return (\n    isDotnet(getPlatform(frame.platform, platform ?? 'other')) && defined(frame.package)\n  );\n}\n\nexport function isExpandable({\n  frame,\n  registers,\n  emptySourceNotation,\n  platform,\n  isOnlyFrame,\n}: {\n  frame: Frame;\n  registers: Record<string, string>;\n  emptySourceNotation?: boolean;\n  isOnlyFrame?: boolean;\n  platform?: string;\n}) {\n  return (\n    (!isOnlyFrame && emptySourceNotation) ||\n    hasContextSource(frame) ||\n    hasContextVars(frame) ||\n    hasContextRegisters(registers) ||\n    hasAssembly(frame, platform)\n  );\n}\n","export enum SymbolicatorStatus {\n  SYMBOLICATED = 'symbolicated',\n  MISSING_SYMBOL = 'missing_symbol',\n  UNKNOWN_IMAGE = 'unknown_image',\n  MISSING = 'missing',\n  MALFORMED = 'malformed',\n}\n","import {t} from 'sentry/locale';\nimport {EventGroupComponent, EventGroupInfo, EventGroupVariant} from 'sentry/types';\n\nfunction renderGroupingInfo(groupingInfo: EventGroupInfo): string[] {\n  return Object.values(groupingInfo).map(renderGroupVariant).flat();\n}\n\nfunction renderGroupVariant(variant: EventGroupVariant): string[] {\n  const title = [t('Type: %s', variant.type)];\n\n  if (variant.hash) {\n    title.push(t('Hash: %s', variant.hash));\n  }\n\n  if (variant.description) {\n    title.push(t('Description: %s', variant.description));\n  }\n\n  const rv = [title.join('\\n')];\n\n  if (variant.component) {\n    rv.push(renderComponent(variant.component).join('\\n'));\n  }\n\n  return rv;\n}\n\nfunction renderComponent(component: EventGroupComponent): string[] {\n  if (!component.contributes) {\n    return [];\n  }\n\n  const {name, id, hint} = component;\n  const name_or_id = name || id;\n  const title = name_or_id && hint ? `${name_or_id} (${hint})` : name_or_id;\n  const rv = title ? [title] : [];\n\n  if (component.values) {\n    for (const value of component.values) {\n      if (typeof value === 'string') {\n        rv.push(`  ${value}`);\n        continue;\n      }\n\n      for (const line of renderComponent(value)) {\n        rv.push(`  ${line}`);\n      }\n    }\n  }\n\n  return rv;\n}\n\nexport default renderGroupingInfo;\n","import {Component} from 'react';\nimport isPropValid from '@emotion/is-prop-valid';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SplitDiff from 'sentry/components/splitDiff';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Project} from 'sentry/types';\nimport getStacktraceBody from 'sentry/utils/getStacktraceBody';\nimport withApi from 'sentry/utils/withApi';\n\nimport renderGroupingInfo from './renderGroupingInfo';\n\nconst defaultProps = {\n  baseEventId: 'latest',\n  targetEventId: 'latest',\n};\n\ntype DefaultProps = typeof defaultProps;\n\ntype Props = {\n  api: Client;\n  baseIssueId: string;\n  orgId: string;\n  project: Project;\n  targetIssueId: string;\n  baseEventId?: string;\n  className?: string;\n  targetEventId?: string;\n};\n\ntype State = {\n  baseEvent: Array<string>;\n  groupingDiff: boolean;\n  loading: boolean;\n  targetEvent: Array<string>;\n  SplitDiffAsync?: typeof SplitDiff;\n};\n\nclass IssueDiff extends Component<Props, State> {\n  static defaultProps: DefaultProps = defaultProps;\n\n  state: State = {\n    loading: true,\n    groupingDiff: false,\n    baseEvent: [],\n    targetEvent: [],\n\n    // `SplitDiffAsync` is an async-loaded component\n    // This will eventually contain a reference to the exported component from `./splitDiff`\n    SplitDiffAsync: undefined,\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  fetchData() {\n    const {baseIssueId, targetIssueId, baseEventId, targetEventId} = this.props;\n\n    // Fetch component and event data\n    Promise.all([\n      import('../splitDiff'),\n      this.fetchEventData(baseIssueId, baseEventId ?? 'latest'),\n      this.fetchEventData(targetIssueId, targetEventId ?? 'latest'),\n    ])\n      .then(([{default: SplitDiffAsync}, baseEvent, targetEvent]) => {\n        this.setState({\n          SplitDiffAsync,\n          baseEvent,\n          targetEvent,\n          loading: false,\n        });\n      })\n      .catch(() => {\n        addErrorMessage(t('Error loading events'));\n      });\n  }\n\n  toggleDiffMode = () => {\n    this.setState(\n      state => ({groupingDiff: !state.groupingDiff, loading: true}),\n      this.fetchData\n    );\n  };\n\n  fetchEventData = async (issueId: string, eventId: string) => {\n    const {orgId, project, api} = this.props;\n    const {groupingDiff} = this.state;\n\n    let paramEventId = eventId;\n\n    if (eventId === 'latest') {\n      const event = await api.requestPromise(`/issues/${issueId}/events/latest/`);\n      paramEventId = event.eventID;\n    }\n\n    if (groupingDiff) {\n      const groupingInfo = await api.requestPromise(\n        `/projects/${orgId}/${project.slug}/events/${paramEventId}/grouping-info/`\n      );\n      return renderGroupingInfo(groupingInfo);\n    }\n\n    const event = await api.requestPromise(\n      `/projects/${orgId}/${project.slug}/events/${paramEventId}/`\n    );\n    return getStacktraceBody(event);\n  };\n\n  render() {\n    const {className, project} = this.props;\n    const {\n      SplitDiffAsync: DiffComponent,\n      loading,\n      groupingDiff,\n      baseEvent,\n      targetEvent,\n    } = this.state;\n\n    const showDiffToggle = project.features.includes('similarity-view-v2');\n\n    return (\n      <StyledIssueDiff className={className} loading={loading}>\n        {loading && <LoadingIndicator />}\n        {!loading && showDiffToggle && (\n          <HeaderWrapper>\n            <ButtonBar merged active={groupingDiff ? 'grouping' : 'event'}>\n              <Button barId=\"event\" size=\"sm\" onClick={this.toggleDiffMode}>\n                {t('Diff stack trace and message')}\n              </Button>\n              <Button barId=\"grouping\" size=\"sm\" onClick={this.toggleDiffMode}>\n                {t('Diff grouping information')}\n              </Button>\n            </ButtonBar>\n          </HeaderWrapper>\n        )}\n        {!loading &&\n          DiffComponent &&\n          baseEvent.map((value, i) => (\n            <DiffComponent\n              key={i}\n              base={value}\n              target={targetEvent[i] ?? ''}\n              type=\"words\"\n            />\n          ))}\n      </StyledIssueDiff>\n    );\n  }\n}\n\nexport default withApi(IssueDiff);\n\n// required for tests which do not provide API as context\nexport {IssueDiff};\n\nconst StyledIssueDiff = styled('div', {\n  shouldForwardProp: p => typeof p === 'string' && isPropValid(p) && p !== 'loading',\n})<Pick<State, 'loading'>>`\n  background-color: ${p => p.theme.backgroundSecondary};\n  overflow: auto;\n  padding: ${space(1)};\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  ${p =>\n    p.loading &&\n    `\n        background-color: ${p.theme.background};\n        justify-content: center;\n        align-items: center;\n      `};\n`;\n\nconst HeaderWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(2)};\n`;\n","import {css} from '@emotion/react';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport IssueDiff from 'sentry/components/issueDiff';\n\ntype Props = ModalRenderProps & React.ComponentProps<typeof IssueDiff>;\n\nconst DiffModal = ({className, Body, CloseButton, ...props}: Props) => (\n  <Body>\n    <CloseButton />\n    <IssueDiff className={className} {...props} />\n  </Body>\n);\n\nconst modalCss = css`\n  position: absolute;\n  left: 20px;\n  right: 20px;\n  top: 20px;\n  bottom: 20px;\n  display: flex;\n  padding: 0;\n  width: auto;\n\n  [role='document'] {\n    overflow: scroll;\n    height: 100%;\n    display: flex;\n    flex: 1;\n  }\n\n  section {\n    display: flex;\n    width: 100%;\n  }\n`;\n\nexport {modalCss};\n\nexport default DiffModal;\n","import rawStacktraceContent from 'sentry/components/events/interfaces/crashContent/stackTrace/rawContent';\nimport {Event} from 'sentry/types/event';\n\nexport default function getStacktraceBody(event: Event) {\n  if (!event || !event.entries) {\n    return [];\n  }\n\n  // TODO(billyvg): This only accounts for the first exception, will need navigation to be able to\n  // diff multiple exceptions\n  //\n  // See: https://github.com/getsentry/sentry/issues/6055\n  const exc = event.entries.find(({type}) => type === 'exception');\n\n  if (!exc) {\n    // Look for a message if not an exception\n    const msg = event.entries.find(({type}) => type === 'message');\n    if (!msg) {\n      return [];\n    }\n    return msg?.data?.formatted && [msg.data.formatted];\n  }\n\n  if (!exc.data) {\n    return [];\n  }\n\n  // TODO(ts): This should be verified when EntryData has the correct type\n  return exc.data.values\n    .filter(value => !!value.stacktrace)\n    .map(value => rawStacktraceContent(value.stacktrace, event.platform, value))\n    .reduce((acc, value) => acc.concat(value), []);\n}\n","import {useCallback, useEffect, useRef} from 'react';\n\nimport {Client} from 'sentry/api';\n\ntype Options = {\n  /**\n   * An existing API client may be provided.\n   *\n   * This is a continent way to re-use clients and still inherit the\n   * persistInFlight configuration.\n   */\n  api?: Client;\n  /**\n   * Enabling this option will disable clearing in-flight requests when the\n   * component is unmounted.\n   *\n   * This may be useful in situations where your component needs to finish up\n   * somewhere the client was passed into some type of action creator and the\n   * component is unmounted.\n   */\n  persistInFlight?: boolean;\n};\n\n/**\n * Returns an API client that will have it's requests canceled when the owning\n * React component is unmounted (may be disabled via options).\n */\nfunction useApi({persistInFlight, api: providedApi}: Options = {}) {\n  const localApi = useRef<Client>();\n\n  // Lazily construct the client if we weren't provided with one\n  if (localApi.current === undefined && providedApi === undefined) {\n    localApi.current = new Client();\n  }\n\n  // Use the provided client if available\n  const api = providedApi ?? localApi.current!;\n\n  // Clear API calls on unmount (if persistInFlight is disabled\n  const clearOnUnmount = useCallback(() => {\n    if (!persistInFlight) {\n      api.clear();\n    }\n  }, [api, persistInFlight]);\n\n  useEffect(() => clearOnUnmount, [clearOnUnmount]);\n\n  return api;\n}\n\nexport default useApi;\n","import {Client} from 'sentry/api';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport useApi from 'sentry/utils/useApi';\n\ntype InjectedApiProps = {\n  api: Client;\n};\n\ntype WrappedProps<P> = Omit<P, keyof InjectedApiProps> & Partial<InjectedApiProps>;\n\n/**\n * XXX: Prefer useApi if you are wrapping a Function Component!\n *\n * React Higher-Order Component (HoC) that provides \"api\" client when mounted,\n * and clears API requests when component is unmounted.\n *\n * If an `api` prop is provided when the component is invoked it will be passed\n * through.\n */\nconst withApi = <P extends InjectedApiProps>(\n  WrappedComponent: React.ComponentType<P>,\n  options: Parameters<typeof useApi>[0] = {}\n) => {\n  const WithApi: React.FC<WrappedProps<P>> = ({api: propsApi, ...props}) => {\n    const api = useApi({api: propsApi, ...options});\n\n    return <WrappedComponent {...(props as P)} api={api} />;\n  };\n\n  WithApi.displayName = `withApi(${getDisplayName(WrappedComponent)})`;\n\n  return WithApi;\n};\n\nexport default withApi;\n"],"names":["ljust","str","len","Array","Math","max","length","join","getFrame","frame","frameIdx","platform","result","defined","function","filename","module","lineNo","colNo","getJavaScriptFrame","getRubyFrame","idx","funcName","getPHPFrame","context","forEach","item","trim","getPythonFrame","getJavaFrame","package","trimPackage","instructionAddr","symbolAddr","getNativeFrame","render","data","exception","frames","push","reverse","unshift","type","value","getJavaPreamble","getPreamble","pkg","pieces","split","test","replace","getPlatform","dataPlatform","getFrameHint","symbolicatorStatus","func","warningIcon","size","color","errorIcon","match","t","SymbolicatorStatus","isDotnet","hasContextSource","hasContextVars","objectIsEmpty","vars","hasContextRegisters","registers","hasAssembly","isExpandable","emptySourceNotation","isOnlyFrame","renderGroupVariant","variant","title","hash","description","rv","component","renderComponent","contributes","name","id","hint","name_or_id","values","line","IssueDiff","Component","loading","groupingDiff","baseEvent","targetEvent","SplitDiffAsync","undefined","this","setState","state","fetchData","async","issueId","eventId","orgId","project","api","props","paramEventId","requestPromise","eventID","groupingInfo","Object","map","flat","renderGroupingInfo","slug","event","getStacktraceBody","componentDidMount","baseIssueId","targetIssueId","baseEventId","targetEventId","Promise","all","fetchEventData","then","default","catch","addErrorMessage","className","DiffComponent","showDiffToggle","features","includes","StyledIssueDiff","HeaderWrapper","merged","active","barId","onClick","toggleDiffMode","i","base","target","withApi","shouldForwardProp","p","isPropValid","theme","backgroundSecondary","space","background","DiffModal","Body","CloseButton","modalCss","entries","exc","find","msg","formatted","filter","stacktrace","rawStacktraceContent","reduce","acc","concat","persistInFlight","providedApi","localApi","useRef","current","Client","clearOnUnmount","useCallback","clear","useEffect","WrappedComponent","options","WithApi","propsApi","useApi","displayName","getDisplayName"],"sourceRoot":""}