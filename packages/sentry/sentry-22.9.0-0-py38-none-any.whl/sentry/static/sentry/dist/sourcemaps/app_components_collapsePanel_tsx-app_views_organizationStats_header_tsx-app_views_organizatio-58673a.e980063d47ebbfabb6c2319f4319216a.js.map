{"version":3,"file":"chunks/app_components_collapsePanel_tsx-app_views_organizationStats_header_tsx-app_views_organizatio-58673a.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/collapsePanel.tsx","webpack:///./app/components/featureFeedback/index.tsx","webpack:///./app/components/pageTimeRangeSelector.tsx","webpack:///./app/views/organizationStats/header.tsx","webpack:///./app/views/organizationStats/teamInsights/controls.tsx","webpack:///./app/views/organizationStats/teamInsights/descriptionCard.tsx","webpack:///./app/views/organizationStats/teamInsights/styles.tsx","webpack:///./app/views/organizationStats/teamInsights/utils.tsx"],"sourcesContent":["import {useState} from 'react';\nimport {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {IconChevron, IconList} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\nexport const COLLAPSE_COUNT = 5;\n\ntype ChildRenderProps = {\n  isExpanded: boolean;\n  showMoreButton: React.ReactNode;\n};\n\ntype Props = {\n  children: (props: ChildRenderProps) => JSX.Element;\n  items: number;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\n/**\n * Used to expand results.\n *\n * Our collapsible component was not used because we want our\n * expand button to be outside the list of children\n *\n */\nfunction CollapsePanel({\n  items,\n  children,\n  buttonTitle,\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n}: Props) {\n  const [isExpanded, setIsExpanded] = useState(false);\n  function expandResults() {\n    setIsExpanded(true);\n  }\n\n  return children({\n    isExpanded,\n    showMoreButton:\n      isExpanded || items <= collapseCount ? null : (\n        <ShowMoreButton\n          items={items}\n          buttonTitle={buttonTitle}\n          collapseCount={collapseCount}\n          disableBorder={disableBorder}\n          onClick={expandResults}\n        />\n      ),\n  });\n}\n\ntype ShowMoreButtonProps = {\n  items: number;\n  onClick: () => void;\n  buttonTitle?: string;\n  collapseCount?: number;\n  disableBorder?: boolean;\n};\n\nfunction ShowMoreButton({\n  items,\n  buttonTitle = 'More',\n  collapseCount = COLLAPSE_COUNT,\n  disableBorder = true,\n  onClick,\n}: ShowMoreButtonProps) {\n  return (\n    <ShowMore\n      onClick={onClick}\n      role=\"button\"\n      data-test-id=\"collapse-show-more\"\n      disableBorder={disableBorder}\n    >\n      <ShowMoreText>\n        <StyledIconList color=\"gray300\" />\n        {tct('Show [count] [buttonTitle]', {count: items - collapseCount, buttonTitle})}\n      </ShowMoreText>\n\n      <IconChevron color=\"gray300\" direction=\"down\" />\n    </ShowMore>\n  );\n}\n\nexport default CollapsePanel;\n\nconst ShowMore = styled('div')<{disableBorder: boolean}>`\n  display: flex;\n  align-items: center;\n  padding: ${space(1)} ${space(2)};\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  cursor: pointer;\n  border-top: 1px solid ${p => p.theme.border};\n\n  ${p =>\n    !p.disableBorder &&\n    css`\n      border-left: 1px solid ${p.theme.border};\n      border-right: 1px solid ${p.theme.border};\n      border-bottom: 1px solid ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};\n      border-bottom-right-radius: ${p.theme.borderRadius};\n      margin-bottom: ${space(2)};\n    `}\n`;\n\nconst StyledIconList = styled(IconList)`\n  margin-right: ${space(1)};\n`;\n\nconst ShowMoreText = styled('div')`\n  display: flex;\n  align-items: center;\n  flex-grow: 1;\n`;\n","import {openModal} from 'sentry/actionCreators/modal';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconMegaphone} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {FeedBackModalProps} from './feedbackModal';\n\nexport interface FeatureFeedbackProps extends FeedBackModalProps {\n  buttonProps?: Partial<ButtonProps>;\n}\n\n// Provides a button that, when clicked, opens a modal with a form that,\n// when filled and submitted, will send feedback to Sentry (feedbacks project).\nexport function FeatureFeedback({\n  feedbackTypes,\n  featureName,\n  buttonProps = {},\n}: FeatureFeedbackProps) {\n  async function handleClick() {\n    const mod = await import('sentry/components/featureFeedback/feedbackModal');\n\n    const {FeedbackModal, modalCss} = mod;\n\n    openModal(\n      deps => (\n        <FeedbackModal\n          {...deps}\n          featureName={featureName}\n          feedbackTypes={feedbackTypes}\n        />\n      ),\n      {\n        modalCss,\n      }\n    );\n  }\n\n  return (\n    <Button icon={<IconMegaphone />} onClick={handleClick} {...buttonProps}>\n      {t('Give Feedback')}\n    </Button>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport TimeRangeSelector from 'sentry/components/organizations/timeRangeSelector';\nimport {Panel} from 'sentry/components/panels';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype Props = React.ComponentProps<typeof TimeRangeSelector> & {className?: string};\n\nfunction PageTimeRangeSelector({className, ...props}: Props) {\n  return (\n    <DropdownDate className={className}>\n      <TimeRangeSelector\n        key={`period:${props.relative}-start:${props.start}-end:${props.end}-utc:${props.utc}-defaultPeriod:${props.defaultPeriod}`}\n        label={<DropdownLabel>{t('Date Range:')}</DropdownLabel>}\n        detached\n        {...props}\n      />\n    </DropdownDate>\n  );\n}\n\nconst DropdownDate = styled(Panel)`\n  padding: 0;\n  margin: 0;\n\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 42px;\n  background: ${p => p.theme.background};\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n\n  > div {\n    width: 100%;\n    align-self: stretch;\n  }\n  /* StyledItemHeader used to show selected value of TimeRangeSelector */\n  > div > div:first-child > div {\n    padding: 0 ${space(2)};\n  }\n  /* Menu that dropdowns from TimeRangeSelector */\n  > div > div:last-child:not(:first-child) {\n    /* Remove awkward 1px width difference on dropdown due to border */\n    min-width: calc(100% + 2px);\n    transform: translateX(-1px);\n    right: auto;\n  }\n`;\n\nconst DropdownLabel = styled('span')`\n  text-align: left;\n  font-weight: 600;\n  color: ${p => p.theme.textColor};\n\n  > span:last-child {\n    font-weight: 400;\n  }\n`;\n\nexport default PageTimeRangeSelector;\n","import styled from '@emotion/styled';\n\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport Link from 'sentry/components/links/link';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\n\ntype Props = {\n  activeTab: 'stats' | 'issues' | 'health';\n  organization: Organization;\n};\n\nfunction StatsHeader({organization, activeTab}: Props) {\n  return (\n    <Layout.Header>\n      <Layout.HeaderContent>\n        <StyledLayoutTitle>{t('Stats')}</StyledLayoutTitle>\n      </Layout.HeaderContent>\n      <Layout.HeaderActions>\n        {activeTab !== 'stats' && <FeatureFeedback featureName=\"team-stats\" />}\n      </Layout.HeaderActions>\n      <Layout.HeaderNavTabs underlined>\n        <li className={`${activeTab === 'stats' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/`}>{t('Usage')}</Link>\n        </li>\n        <li className={`${activeTab === 'issues' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/issues/`}>\n            {t('Issues')}\n          </Link>\n        </li>\n        <li className={`${activeTab === 'health' ? 'active' : ''}`}>\n          <Link to={`/organizations/${organization.slug}/stats/health/`}>\n            {t('Health')}\n          </Link>\n        </li>\n      </Layout.HeaderNavTabs>\n    </Layout.Header>\n  );\n}\n\nexport default StatsHeader;\n\nconst StyledLayoutTitle = styled(Layout.Title)`\n  margin-top: ${space(0.5)};\n`;\n","import {RouteComponentProps} from 'react-router';\nimport {useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\nimport {LocationDescriptorObject} from 'history';\nimport pick from 'lodash/pick';\nimport uniq from 'lodash/uniq';\nimport moment from 'moment';\n\nimport SelectControl from 'sentry/components/forms/selectControl';\nimport TeamSelector from 'sentry/components/forms/teamSelector';\nimport {ChangeData} from 'sentry/components/organizations/timeRangeSelector';\nimport PageTimeRangeSelector from 'sentry/components/pageTimeRangeSelector';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {DateString, TeamWithProjects} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport localStorage from 'sentry/utils/localStorage';\nimport useOrganization from 'sentry/utils/useOrganization';\nimport useProjects from 'sentry/utils/useProjects';\n\nimport {dataDatetime} from './utils';\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nconst PAGE_QUERY_PARAMS = [\n  'pageStatsPeriod',\n  'pageStart',\n  'pageEnd',\n  'pageUtc',\n  'dataCategory',\n  'transform',\n  'sort',\n  'query',\n  'cursor',\n  'team',\n  'environment',\n];\n\ntype Props = Pick<RouteComponentProps<{orgId: string}, {}>, 'router' | 'location'> & {\n  currentEnvironment?: string;\n  currentTeam?: TeamWithProjects;\n  showEnvironment?: boolean;\n};\n\nfunction TeamStatsControls({\n  location,\n  router,\n  currentTeam,\n  currentEnvironment,\n  showEnvironment,\n}: Props) {\n  const {projects} = useProjects({\n    slugs: currentTeam?.projects.map(project => project.slug) ?? [],\n  });\n  const organization = useOrganization();\n  const isSuperuser = isActiveSuperuser();\n  const theme = useTheme();\n\n  const query = location?.query ?? {};\n  const localStorageKey = `teamInsightsSelectedTeamId:${organization.slug}`;\n\n  function handleChangeTeam(teamId: string) {\n    localStorage.setItem(localStorageKey, teamId);\n    // TODO(workflow): Preserve environment if it exists for the new team\n    setStateOnUrl({team: teamId, environment: undefined});\n  }\n\n  function handleEnvironmentChange({value}: {label: string; value: string}) {\n    if (value === '') {\n      setStateOnUrl({environment: undefined});\n    } else {\n      setStateOnUrl({environment: value});\n    }\n  }\n\n  function handleUpdateDatetime(datetime: ChangeData): LocationDescriptorObject {\n    const {start, end, relative, utc} = datetime;\n\n    if (start && end) {\n      const parser = utc ? moment.utc : moment;\n\n      return setStateOnUrl({\n        pageStatsPeriod: undefined,\n        pageStart: parser(start).format(),\n        pageEnd: parser(end).format(),\n        pageUtc: utc ?? undefined,\n      });\n    }\n\n    return setStateOnUrl({\n      pageStatsPeriod: relative || undefined,\n      pageStart: undefined,\n      pageEnd: undefined,\n      pageUtc: undefined,\n    });\n  }\n\n  function setStateOnUrl(nextState: {\n    environment?: string;\n    pageEnd?: DateString;\n    pageStart?: DateString;\n    pageStatsPeriod?: string | null;\n    pageUtc?: boolean | null;\n    team?: string;\n  }): LocationDescriptorObject {\n    const nextQueryParams = pick(nextState, PAGE_QUERY_PARAMS);\n\n    const nextLocation = {\n      ...location,\n      query: {\n        ...query,\n        ...nextQueryParams,\n      },\n    };\n\n    router.push(nextLocation);\n\n    return nextLocation;\n  }\n\n  const {period, start, end, utc} = dataDatetime(query);\n  const environmentOptions = uniq(\n    projects.map(project => project.environments).flat()\n  ).map(env => ({label: env, value: env}));\n\n  return (\n    <ControlsWrapper showEnvironment={showEnvironment}>\n      <StyledTeamSelector\n        name=\"select-team\"\n        inFieldLabel={t('Team: ')}\n        value={currentTeam?.slug}\n        onChange={choice => handleChangeTeam(choice.actor.id)}\n        teamFilter={isSuperuser ? undefined : filterTeam => filterTeam.isMember}\n        styles={{\n          singleValue(provided: any) {\n            const custom = {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center',\n              fontSize: theme.fontSizeMedium,\n              ':before': {\n                ...provided[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n                marginLeft: space(0.5),\n              },\n            };\n            return {...provided, ...custom};\n          },\n          input: (provided: any, state: any) => ({\n            ...provided,\n            display: 'grid',\n            gridTemplateColumns: 'max-content 1fr',\n            alignItems: 'center',\n            gridGap: space(1),\n            ':before': {\n              backgroundColor: state.theme.backgroundSecondary,\n              height: 24,\n              width: 38,\n              borderRadius: 3,\n              content: '\"\"',\n              display: 'block',\n            },\n          }),\n        }}\n      />\n      {showEnvironment && (\n        <SelectControl\n          options={[\n            {\n              value: '',\n              label: t('All'),\n            },\n            ...environmentOptions,\n          ]}\n          value={currentEnvironment ?? ''}\n          onChange={handleEnvironmentChange}\n          styles={{\n            input: (provided: any) => ({\n              ...provided,\n              display: 'grid',\n              gridTemplateColumns: 'max-content 1fr',\n              alignItems: 'center',\n              gridGap: space(1),\n              ':before': {\n                height: 24,\n                width: 90,\n                borderRadius: 3,\n                content: '\"\"',\n                display: 'block',\n              },\n            }),\n            control: (base: any) => ({\n              ...base,\n              boxShadow: 'none',\n            }),\n            singleValue: (base: any) => ({\n              ...base,\n              fontSize: theme.fontSizeMedium,\n              display: 'flex',\n              ':before': {\n                ...base[':before'],\n                color: theme.textColor,\n                marginRight: space(1.5),\n              },\n            }),\n          }}\n          inFieldLabel={t('Environment:')}\n        />\n      )}\n      <StyledPageTimeRangeSelector\n        organization={organization}\n        relative={period ?? ''}\n        start={start ?? null}\n        end={end ?? null}\n        utc={utc ?? null}\n        onUpdate={handleUpdateDatetime}\n        showAbsolute={false}\n        relativeOptions={{\n          '14d': t('Last 2 weeks'),\n          '4w': t('Last 4 weeks'),\n          [INSIGHTS_DEFAULT_STATS_PERIOD]: t('Last 8 weeks'),\n          '12w': t('Last 12 weeks'),\n        }}\n      />\n    </ControlsWrapper>\n  );\n}\n\nexport default TeamStatsControls;\n\nconst ControlsWrapper = styled('div')<{showEnvironment?: boolean}>`\n  display: grid;\n  align-items: center;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 246px ${p => (p.showEnvironment ? '246px' : '')} 1fr;\n  }\n`;\n\nconst StyledTeamSelector = styled(TeamSelector)`\n  & > div {\n    box-shadow: ${p => p.theme.dropShadowLight};\n  }\n`;\n\nconst StyledPageTimeRangeSelector = styled(PageTimeRangeSelector)`\n  height: 40px;\n\n  div {\n    min-height: unset;\n  }\n`;\n","import styled from '@emotion/styled';\n\nimport space from 'sentry/styles/space';\n\ntype Props = {\n  children: React.ReactNode;\n  description: React.ReactNode;\n  title: string;\n};\n\nfunction DescriptionCard({title, description, children}: Props) {\n  return (\n    <Wrapper>\n      <LeftPanel>\n        <Title>{title}</Title>\n        <Description>{description}</Description>\n      </LeftPanel>\n      <RightPanel>{children}</RightPanel>\n    </Wrapper>\n  );\n}\n\nexport default DescriptionCard;\n\nconst Wrapper = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n  display: flex;\n  margin-bottom: ${space(3)};\n  flex-direction: column;\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    flex-direction: row;\n  }\n`;\n\nconst LeftPanel = styled('div')`\n  padding: ${space(2)} ${space(2)};\n  border-bottom: 1px solid ${p => p.theme.border};\n\n  @media (min-width: ${p => p.theme.breakpoints.medium}) {\n    max-width: 250px;\n    border-right: 1px solid ${p => p.theme.border};\n    border-bottom: 0;\n  }\n`;\n\nconst Title = styled('div')`\n  font-size: ${p => p.theme.fontSizeLarge};\n  margin: 0 0 ${space(0.5)};\n`;\n\nconst Description = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n`;\n\nconst RightPanel = styled('div')`\n  flex-grow: 1;\n`;\n","import styled from '@emotion/styled';\n\nimport IdBadge from 'sentry/components/idBadge';\n\nexport const ProjectBadgeContainer = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ProjectBadge = styled(IdBadge)`\n  flex-shrink: 0;\n`;\n","import moment from 'moment';\n\nimport BaseChart from 'sentry/components/charts/baseChart';\nimport {DateTimeObject} from 'sentry/components/charts/utils';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport type {SeriesDataUnit} from 'sentry/types/echarts';\n\n/**\n * Buckets a week of sequential days into one data unit\n */\nexport function sortSeriesByDay(data: SeriesDataUnit[]): SeriesDataUnit[] {\n  return data.sort((a, b) => new Date(a.name).getTime() - new Date(b.name).getTime());\n}\n\n/**\n * Convert an object with date as the key to a series\n */\nexport function convertDayValueObjectToSeries(\n  data: Record<string, number>\n): SeriesDataUnit[] {\n  return Object.entries(data).map(([bucket, count]) => ({\n    value: count,\n    name: new Date(bucket).getTime(),\n  }));\n}\n\n/**\n * Takes a sorted array of trend items and groups them by worst/better/no chagne\n */\nexport function groupByTrend<T extends {trend: number}>(data: T[]): T[] {\n  const worseItems = data.filter(x => Math.round(x.trend) < 0);\n  const betterItems = data.filter(x => Math.round(x.trend) > 0);\n  const zeroItems = data.filter(x => Math.round(x.trend) === 0);\n  return [...worseItems, ...betterItems, ...zeroItems];\n}\n\nexport const barAxisLabel = (\n  dataEntries: number\n): React.ComponentProps<typeof BaseChart>['xAxis'] => {\n  return {\n    splitNumber: Math.max(Math.round(dataEntries / 7), 4),\n    type: 'category',\n    axisTick: {\n      alignWithLabel: true,\n    },\n    axisLabel: {\n      formatter: (date: string) => {\n        return moment(new Date(Number(date))).format('MMM D');\n      },\n    },\n  };\n};\n\nconst INSIGHTS_DEFAULT_STATS_PERIOD = '8w';\n\nexport function dataDatetime(\n  query: Parameters<typeof normalizeDateTimeParams>[0]\n): DateTimeObject {\n  const {\n    start,\n    end,\n    statsPeriod,\n    utc: utcString,\n  } = normalizeDateTimeParams(query, {\n    allowEmptyPeriod: true,\n    allowAbsoluteDatetime: true,\n    allowAbsolutePageDatetime: true,\n  });\n\n  if (!statsPeriod && !start && !end) {\n    return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n  }\n\n  // Following getParams, statsPeriod will take priority over start/end\n  if (statsPeriod) {\n    return {period: statsPeriod};\n  }\n\n  const utc = utcString === 'true';\n  if (start && end) {\n    return utc\n      ? {\n          start: moment.utc(start).format(),\n          end: moment.utc(end).format(),\n          utc,\n        }\n      : {\n          start: moment(start).utc().format(),\n          end: moment(end).utc().format(),\n          utc,\n        };\n  }\n\n  return {period: INSIGHTS_DEFAULT_STATS_PERIOD};\n}\n"],"names":["COLLAPSE_COUNT","ShowMoreButton","items","buttonTitle","collapseCount","disableBorder","onClick","ShowMore","role","ShowMoreText","StyledIconList","color","tct","count","direction","children","isExpanded","setIsExpanded","useState","showMoreButton","space","p","theme","fontSizeMedium","subText","border","css","borderRadius","IconList","FeatureFeedback","feedbackTypes","featureName","buttonProps","icon","async","mod","FeedbackModal","modalCss","openModal","deps","t","PageTimeRangeSelector","className","props","DropdownDate","label","DropdownLabel","detached","relative","start","end","utc","defaultPeriod","Panel","background","textColor","StatsHeader","organization","activeTab","StyledLayoutTitle","underlined","to","slug","Layout","PAGE_QUERY_PARAMS","TeamStatsControls","location","router","currentTeam","currentEnvironment","showEnvironment","projects","useProjects","slugs","map","project","useOrganization","isSuperuser","isActiveSuperuser","useTheme","query","localStorageKey","setStateOnUrl","nextState","nextQueryParams","pick","nextLocation","push","period","dataDatetime","environmentOptions","uniq","environments","flat","env","value","ControlsWrapper","StyledTeamSelector","name","inFieldLabel","onChange","choice","handleChangeTeam","teamId","actor","id","localStorage","team","environment","undefined","teamFilter","filterTeam","isMember","styles","singleValue","provided","custom","display","justifyContent","alignItems","fontSize","marginRight","marginLeft","input","state","gridTemplateColumns","gridGap","backgroundColor","backgroundSecondary","height","width","content","options","control","base","boxShadow","StyledPageTimeRangeSelector","onUpdate","datetime","parser","moment","pageStatsPeriod","pageStart","format","pageEnd","pageUtc","showAbsolute","relativeOptions","breakpoints","small","TeamSelector","dropShadowLight","DescriptionCard","title","description","Wrapper","LeftPanel","Title","Description","RightPanel","medium","fontSizeLarge","ProjectBadgeContainer","ProjectBadge","IdBadge","sortSeriesByDay","data","sort","a","b","Date","getTime","convertDayValueObjectToSeries","Object","entries","bucket","groupByTrend","filter","x","Math","round","trend","barAxisLabel","dataEntries","splitNumber","max","type","axisTick","alignWithLabel","axisLabel","formatter","date","Number","statsPeriod","utcString","normalizeDateTimeParams","allowEmptyPeriod","allowAbsoluteDatetime","allowAbsolutePageDatetime"],"sourceRoot":""}