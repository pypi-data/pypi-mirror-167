{"version":3,"file":"chunks/app_views_eventsV2_eventDetails_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/events/eventMessage.tsx","webpack:///./app/components/seenByList.tsx","webpack:///./app/views/eventsV2/breadcrumb.tsx","webpack:///./app/components/group/times.tsx","webpack:///./app/views/eventsV2/eventDetails/linkedIssue.tsx","webpack:///./app/views/eventsV2/eventDetails/content.tsx","webpack:///./app/views/eventsV2/eventDetails/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import styled from '@emotion/styled';\n\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport space from 'sentry/styles/space';\nimport {Level} from 'sentry/types';\n\ntype Props = {\n  annotations?: React.ReactNode;\n  className?: string;\n  hasGuideAnchor?: boolean;\n  level?: Level;\n  levelIndicatorSize?: string;\n  message?: React.ReactNode;\n};\n\nconst EventMessage = styled(\n  ({className, level, levelIndicatorSize, message, annotations}: Props) => (\n    <div className={className}>\n      {level && (\n        <ErrorLevel size={levelIndicatorSize} level={level}>\n          {level}\n        </ErrorLevel>\n      )}\n\n      {message && <Message>{message}</Message>}\n\n      {annotations}\n    </div>\n  )\n)`\n  display: flex;\n  gap: ${space(1)};\n  align-items: center;\n  position: relative;\n  line-height: 1.2;\n  overflow: hidden;\n`;\n\nconst Message = styled('span')`\n  ${p => p.theme.overflowEllipsis}\n  width: auto;\n  max-height: 38px;\n`;\n\nexport default EventMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport moment from 'moment';\n\nimport AvatarList from 'sentry/components/avatar/avatarList';\nimport Tooltip from 'sentry/components/tooltip';\nimport {IconShow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {AvatarUser, User} from 'sentry/types';\nimport {userDisplayName} from 'sentry/utils/formatters';\n\ntype Props = {\n  // Avatar size\n  avatarSize?: number;\n\n  className?: string;\n\n  iconPosition?: 'left' | 'right';\n\n  // Tooltip message for the \"Seen By\" icon\n  iconTooltip?: string;\n\n  // Max avatars to display\n  maxVisibleAvatars?: number;\n  // List of *all* users that have seen something\n  seenBy?: User[];\n};\n\nconst SeenByList = ({\n  avatarSize = 28,\n  seenBy = [],\n  iconTooltip = t('People who have viewed this'),\n  maxVisibleAvatars = 10,\n  iconPosition = 'left',\n  className,\n}: Props) => {\n  const activeUser = ConfigStore.get('user');\n  const displayUsers = seenBy.filter(user => activeUser.id !== user.id);\n\n  if (displayUsers.length === 0) {\n    return null;\n  }\n\n  // Note className=\"seen-by\" is required for responsive design\n  return (\n    <SeenByWrapper\n      iconPosition={iconPosition}\n      className={classNames('seen-by', className)}\n    >\n      <AvatarList\n        users={displayUsers}\n        avatarSize={avatarSize}\n        maxVisibleAvatars={maxVisibleAvatars}\n        renderTooltip={user => (\n          <Fragment>\n            {userDisplayName(user)}\n            <br />\n            {moment((user as AvatarUser).lastSeen).format('LL')}\n          </Fragment>\n        )}\n      />\n      <IconWrapper iconPosition={iconPosition}>\n        <Tooltip title={iconTooltip} skipWrapper>\n          <IconShow size=\"sm\" color=\"subText\" />\n        </Tooltip>\n      </IconWrapper>\n    </SeenByWrapper>\n  );\n};\n\nconst SeenByWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  margin-top: 15px;\n  float: right;\n  ${p => (p.iconPosition === 'left' ? 'flex-direction: row-reverse' : '')};\n`;\n\nconst IconWrapper = styled('div')<{iconPosition: Props['iconPosition']}>`\n  display: flex;\n  align-items: center;\n  background-color: transparent;\n  color: ${p => p.theme.textColor};\n  height: 28px;\n  width: 24px;\n  text-align: center;\n  ${p => (p.iconPosition === 'left' ? 'margin-right: 10px' : '')};\n`;\n\nexport default SeenByList;\n","import {Location} from 'history';\n\nimport Breadcrumbs, {Crumb} from 'sentry/components/breadcrumbs';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {getDiscoverLandingUrl} from 'sentry/utils/discover/urls';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  event?: Event;\n};\n\nfunction DiscoverBreadcrumb({eventView, event, organization, location}: Props) {\n  const crumbs: Crumb[] = [];\n  const discoverTarget = organization.features.includes('discover-query')\n    ? {\n        pathname: getDiscoverLandingUrl(organization),\n        query: {\n          ...location.query,\n          ...eventView.generateBlankQueryStringObject(),\n          ...eventView.getPageFiltersQuery(),\n        },\n      }\n    : null;\n\n  crumbs.push({\n    to: discoverTarget,\n    label: t('Discover'),\n  });\n\n  if (eventView && eventView.isValid()) {\n    crumbs.push({\n      to: eventView.getResultsViewUrlTarget(organization.slug),\n      label: eventView.name || '',\n    });\n  }\n\n  if (event) {\n    crumbs.push({\n      label: t('Event Detail'),\n    });\n  }\n\n  return <Breadcrumbs crumbs={crumbs} />;\n}\n\nexport default DiscoverBreadcrumb;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\n/**\n * Renders the first & last seen times for a group or event with\n * a clock icon.\n */\n\ntype Props = {\n  firstSeen: string;\n  lastSeen: string;\n};\n\nconst Times = ({lastSeen, firstSeen}: Props) => (\n  <Container>\n    <FlexWrapper>\n      {lastSeen && (\n        <Fragment>\n          <StyledIconClock size=\"11px\" />\n          <TimeSince date={lastSeen} suffix={t('ago')} />\n        </Fragment>\n      )}\n      {firstSeen && lastSeen && (\n        <span className=\"hidden-xs hidden-sm\">&nbsp;—&nbsp;</span>\n      )}\n      {firstSeen && (\n        <TimeSince date={firstSeen} suffix={t('old')} className=\"hidden-xs hidden-sm\" />\n      )}\n    </FlexWrapper>\n  </Container>\n);\n\nconst Container = styled('div')`\n  flex-shrink: 1;\n  min-width: 0; /* flex-hack for overflow-ellipsised children */\n`;\n\nconst FlexWrapper = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n\n  /* The following aligns the icon with the text, fixes bug in Firefox */\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  /* this is solely for optics, since TimeSince always begins\n  with a number, and numbers do not have descenders */\n  margin-right: ${space(0.5)};\n`;\n\nexport default Times;\n","import styled from '@emotion/styled';\n\nimport Alert from 'sentry/components/alert';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport {SectionHeading} from 'sentry/components/charts/styles';\nimport Times from 'sentry/components/group/times';\nimport ProjectBadge from 'sentry/components/idBadge/projectBadge';\nimport Link from 'sentry/components/links/link';\nimport Placeholder from 'sentry/components/placeholder';\nimport SeenByList from 'sentry/components/seenByList';\nimport ShortId from 'sentry/components/shortId';\nimport GroupChart from 'sentry/components/stream/groupChart';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group} from 'sentry/types';\n\ntype Props = {\n  eventId: string;\n  groupId: string;\n};\n\ntype State = {\n  group: Group;\n};\n\nclass LinkedIssue extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {groupId} = this.props;\n    const groupUrl = `/issues/${groupId}/`;\n\n    return [['group', groupUrl]];\n  }\n\n  renderLoading() {\n    return <Placeholder height=\"120px\" bottomGutter={2} />;\n  }\n\n  renderError(error?: Error, disableLog = false): React.ReactNode {\n    const {errors} = this.state;\n    const hasNotFound = Object.values(errors).find(resp => resp && resp.status === 404);\n    if (hasNotFound) {\n      return (\n        <Alert type=\"warning\" showIcon>\n          {t('The linked issue cannot be found. It may have been deleted, or merged.')}\n        </Alert>\n      );\n    }\n\n    return super.renderError(error, disableLog);\n  }\n\n  renderBody() {\n    const {eventId} = this.props;\n    const {group} = this.state;\n    const issueUrl = `${group.permalink}events/${eventId}/`;\n\n    return (\n      <Section>\n        <SectionHeading>{t('Event Issue')}</SectionHeading>\n        <StyledIssueCard>\n          <IssueCardHeader>\n            <StyledLink to={issueUrl} data-test-id=\"linked-issue\">\n              <StyledShortId\n                shortId={group.shortId}\n                avatar={\n                  <ProjectBadge\n                    project={group.project}\n                    avatarSize={16}\n                    hideName\n                    disableLink\n                  />\n                }\n              />\n            </StyledLink>\n            <StyledSeenByList seenBy={group.seenBy} maxVisibleAvatars={5} />\n          </IssueCardHeader>\n          <IssueCardBody>\n            <GroupChart statsPeriod=\"30d\" data={group} height={56} />\n          </IssueCardBody>\n          <IssueCardFooter>\n            <Times lastSeen={group.lastSeen} firstSeen={group.firstSeen} />\n          </IssueCardFooter>\n        </StyledIssueCard>\n      </Section>\n    );\n  }\n}\n\nconst Section = styled('div')`\n  margin-bottom: ${space(4)};\n`;\n\nconst StyledIssueCard = styled('div')`\n  border: 1px solid ${p => p.theme.border};\n  border-radius: ${p => p.theme.borderRadius};\n`;\n\nconst IssueCardHeader = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: ${space(1)};\n`;\n\nconst StyledLink = styled(Link)`\n  justify-content: flex-start;\n`;\n\nconst IssueCardBody = styled('div')`\n  background: ${p => p.theme.backgroundSecondary};\n  padding-top: ${space(1)};\n`;\n\nconst StyledSeenByList = styled(SeenByList)`\n  margin: 0;\n`;\n\nconst StyledShortId = styled(ShortId)`\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.textColor};\n`;\n\nconst IssueCardFooter = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-size: ${p => p.theme.fontSizeSmall};\n  padding: ${space(0.5)} ${space(1)};\n`;\n\nexport default LinkedIssue;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport NotFound from 'sentry/components/errors/notFound';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport EventCustomPerformanceMetrics from 'sentry/components/events/eventCustomPerformanceMetrics';\nimport {BorderlessEventEntries} from 'sentry/components/events/eventEntries';\nimport EventMessage from 'sentry/components/events/eventMessage';\nimport EventVitals from 'sentry/components/events/eventVitals';\nimport * as SpanEntryContext from 'sentry/components/events/interfaces/spans/context';\nimport FileSize from 'sentry/components/fileSize';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {TagsTable} from 'sentry/components/tagsTable';\nimport {IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization, Project} from 'sentry/types';\nimport {Event, EventTag} from 'sentry/types/event';\nimport {trackAnalyticsEvent} from 'sentry/utils/analytics';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport EventView from 'sentry/utils/discover/eventView';\nimport {formatTagKey} from 'sentry/utils/discover/fields';\nimport {eventDetailsRoute} from 'sentry/utils/discover/urls';\nimport {getMessage} from 'sentry/utils/events';\nimport {QuickTraceContext} from 'sentry/utils/performance/quickTrace/quickTraceContext';\nimport QuickTraceQuery from 'sentry/utils/performance/quickTrace/quickTraceQuery';\nimport TraceMetaQuery, {\n  TraceMetaQueryChildrenProps,\n} from 'sentry/utils/performance/quickTrace/traceMetaQuery';\nimport {QuickTraceQueryChildrenProps} from 'sentry/utils/performance/quickTrace/types';\nimport {getTraceTimeRangeFromEvent} from 'sentry/utils/performance/quickTrace/utils';\nimport Projects from 'sentry/utils/projects';\nimport EventMetas from 'sentry/views/performance/transactionDetails/eventMetas';\nimport {transactionSummaryRouteWithQuery} from 'sentry/views/performance/transactionSummary/utils';\n\nimport DiscoverBreadcrumb from '../breadcrumb';\nimport {generateTitle, getExpandedResults} from '../utils';\n\nimport LinkedIssue from './linkedIssue';\n\ntype Props = Pick<\n  RouteComponentProps<{eventSlug: string}, {}>,\n  'params' | 'location' | 'route' | 'router'\n> & {\n  eventSlug: string;\n  eventView: EventView;\n  organization: Organization;\n};\n\ntype State = {\n  event: Event | undefined;\n  isSidebarVisible: boolean;\n} & AsyncComponent['state'];\n\nclass EventDetailsContent extends AsyncComponent<Props, State> {\n  state: State = {\n    // AsyncComponent state\n    loading: true,\n    reloading: false,\n    error: false,\n    errors: {},\n    event: undefined,\n\n    // local state\n    isSidebarVisible: true,\n  };\n\n  toggleSidebar = () => {\n    this.setState({isSidebarVisible: !this.state.isSidebarVisible});\n  };\n\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {organization, params, location, eventView} = this.props;\n    const {eventSlug} = params;\n\n    const query = eventView.getEventsAPIPayload(location);\n\n    // Fields aren't used, reduce complexity by omitting from query entirely\n    query.field = [];\n\n    const url = `/organizations/${organization.slug}/events/${eventSlug}/`;\n\n    // Get a specific event. This could be coming from\n    // a paginated group or standalone event.\n    return [['event', url, {query}]];\n  }\n\n  get projectId() {\n    return this.props.eventSlug.split(':')[0];\n  }\n\n  generateTagUrl = (tag: EventTag) => {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    if (!event) {\n      return '';\n    }\n    const eventReference = {...event};\n    if (eventReference.id) {\n      delete (eventReference as any).id;\n    }\n    const tagKey = formatTagKey(tag.key);\n    const nextView = getExpandedResults(eventView, {[tagKey]: tag.value}, eventReference);\n    return nextView.getResultsViewUrlTarget(organization.slug);\n  };\n\n  renderBody() {\n    const {event} = this.state;\n\n    if (!event) {\n      return <NotFound />;\n    }\n\n    return this.renderContent(event);\n  }\n\n  renderContent(event: Event) {\n    const {organization, location, eventView, route, router} = this.props;\n    const {isSidebarVisible} = this.state;\n\n    // metrics\n    trackAnalyticsEvent({\n      eventKey: 'discover_v2.event_details',\n      eventName: 'Discoverv2: Opened Event Details',\n      event_type: event.type,\n      organization_id: parseInt(organization.id, 10),\n    });\n\n    const transactionName = event.tags.find(tag => tag.key === 'transaction')?.value;\n    const transactionSummaryTarget =\n      event.type === 'transaction' && transactionName\n        ? transactionSummaryRouteWithQuery({\n            orgSlug: organization.slug,\n            transaction: transactionName,\n            projectID: event.projectID,\n            query: location.query,\n          })\n        : null;\n\n    const eventJsonUrl = `/api/0/projects/${organization.slug}/${this.projectId}/events/${event.eventID}/json/`;\n\n    const renderContent = (\n      results?: QuickTraceQueryChildrenProps,\n      metaResults?: TraceMetaQueryChildrenProps\n    ) => (\n      <Fragment>\n        <Layout.Header>\n          <Layout.HeaderContent>\n            <DiscoverBreadcrumb\n              eventView={eventView}\n              event={event}\n              organization={organization}\n              location={location}\n            />\n            <EventHeader event={event} />\n          </Layout.HeaderContent>\n          <Layout.HeaderActions>\n            <ButtonBar gap={1}>\n              <Button onClick={this.toggleSidebar}>\n                {isSidebarVisible ? 'Hide Details' : 'Show Details'}\n              </Button>\n              <Button\n                icon={<IconOpen />}\n                href={eventJsonUrl}\n                external\n                onClick={() =>\n                  trackAdvancedAnalyticsEvent(\n                    'performance_views.event_details.json_button_click',\n                    {\n                      organization,\n                    }\n                  )\n                }\n              >\n                {t('JSON')} (<FileSize bytes={event.size} />)\n              </Button>\n              {transactionSummaryTarget && (\n                <Feature organization={organization} features={['performance-view']}>\n                  {({hasFeature}) => (\n                    <Button\n                      disabled={!hasFeature}\n                      priority=\"primary\"\n                      to={transactionSummaryTarget}\n                    >\n                      {t('Go to Summary')}\n                    </Button>\n                  )}\n                </Feature>\n              )}\n            </ButtonBar>\n          </Layout.HeaderActions>\n        </Layout.Header>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <EventMetas\n              quickTrace={results ?? null}\n              meta={metaResults?.meta ?? null}\n              event={event}\n              organization={organization}\n              projectId={this.projectId}\n              location={location}\n              errorDest=\"discover\"\n              transactionDest=\"discover\"\n            />\n          </Layout.Main>\n          <Layout.Main fullWidth={!isSidebarVisible}>\n            <Projects orgId={organization.slug} slugs={[this.projectId]}>\n              {({projects, initiallyLoaded}) =>\n                initiallyLoaded ? (\n                  <SpanEntryContext.Provider\n                    value={{\n                      getViewChildTransactionTarget: childTransactionProps => {\n                        const childTransactionLink = eventDetailsRoute({\n                          eventSlug: childTransactionProps.eventSlug,\n                          orgSlug: organization.slug,\n                        });\n\n                        return {\n                          pathname: childTransactionLink,\n                          query: eventView.generateQueryStringObject(),\n                        };\n                      },\n                    }}\n                  >\n                    <QuickTraceContext.Provider value={results}>\n                      <BorderlessEventEntries\n                        organization={organization}\n                        event={event}\n                        project={projects[0] as Project}\n                        location={location}\n                        showExampleCommit={false}\n                        showTagSummary={false}\n                        api={this.api}\n                        router={router}\n                        route={route}\n                      />\n                    </QuickTraceContext.Provider>\n                  </SpanEntryContext.Provider>\n                ) : (\n                  <LoadingIndicator />\n                )\n              }\n            </Projects>\n          </Layout.Main>\n          {isSidebarVisible && (\n            <Layout.Side>\n              <EventVitals event={event} />\n              {(organization.features.includes('dashboards-mep') ||\n                organization.features.includes('mep-rollout-flag')) && (\n                <EventCustomPerformanceMetrics\n                  event={event}\n                  location={location}\n                  organization={organization}\n                />\n              )}\n              {event.groupID && (\n                <LinkedIssue groupId={event.groupID} eventId={event.eventID} />\n              )}\n              <TagsTable\n                generateUrl={this.generateTagUrl}\n                event={event}\n                query={eventView.query}\n              />\n            </Layout.Side>\n          )}\n        </Layout.Body>\n      </Fragment>\n    );\n\n    const hasQuickTraceView = organization.features.includes('performance-view');\n\n    if (hasQuickTraceView) {\n      const traceId = event.contexts?.trace?.trace_id ?? '';\n      const {start, end} = getTraceTimeRangeFromEvent(event);\n\n      return (\n        <TraceMetaQuery\n          location={location}\n          orgSlug={organization.slug}\n          traceId={traceId}\n          start={start}\n          end={end}\n        >\n          {metaResults => (\n            <QuickTraceQuery\n              event={event}\n              location={location}\n              orgSlug={organization.slug}\n            >\n              {results => renderContent(results, metaResults)}\n            </QuickTraceQuery>\n          )}\n        </TraceMetaQuery>\n      );\n    }\n\n    return renderContent();\n  }\n\n  renderError(error: Error) {\n    const notFound = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 404\n    );\n    const permissionDenied = Object.values(this.state.errors).find(\n      resp => resp && resp.status === 403\n    );\n\n    if (notFound) {\n      return <NotFound />;\n    }\n    if (permissionDenied) {\n      return (\n        <LoadingError message={t('You do not have permission to view that event.')} />\n      );\n    }\n\n    return super.renderError(error, true);\n  }\n\n  getEventSlug = (): string => {\n    const {eventSlug} = this.props.params;\n\n    if (typeof eventSlug === 'string') {\n      return eventSlug.trim();\n    }\n\n    return '';\n  };\n\n  renderComponent() {\n    const {eventView, organization} = this.props;\n    const {event} = this.state;\n    const eventSlug = this.getEventSlug();\n    const projectSlug = eventSlug.split(':')[0];\n\n    const title = generateTitle({eventView, event, organization});\n\n    return (\n      <SentryDocumentTitle\n        title={title}\n        orgSlug={organization.slug}\n        projectSlug={projectSlug}\n      >\n        {super.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n\nconst EventHeader = ({event}: {event: Event}) => {\n  const message = getMessage(event);\n  return (\n    <EventHeaderContainer data-test-id=\"event-header\">\n      <TitleWrapper>\n        <StyledEventOrGroupTitle data={event} />\n      </TitleWrapper>\n      {message && (\n        <MessageWrapper>\n          <EventMessage message={message} />\n        </MessageWrapper>\n      )}\n    </EventHeaderContainer>\n  );\n};\n\nconst EventHeaderContainer = styled('div')`\n  max-width: ${p => p.theme.breakpoints.small};\n`;\n\nconst TitleWrapper = styled('div')`\n  margin-top: 20px;\n`;\n\nconst StyledEventOrGroupTitle = styled(EventOrGroupTitle)`\n  font-size: ${p => p.theme.headerFontSize};\n`;\n\nconst MessageWrapper = styled('div')`\n  margin-top: ${space(1)};\n`;\n\nexport default EventDetailsContent;\n","import {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {t} from 'sentry/locale';\nimport {PageContent} from 'sentry/styles/organization';\nimport {Organization} from 'sentry/types';\nimport EventView from 'sentry/utils/discover/eventView';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport EventDetailsContent from './content';\n\ntype Props = RouteComponentProps<{eventSlug: string}, {}> & {\n  organization: Organization;\n};\n\nfunction EventDetails({organization, location, params, router, route}: Props) {\n  const eventSlug = typeof params.eventSlug === 'string' ? params.eventSlug.trim() : '';\n\n  const eventView = EventView.fromLocation(location);\n  const eventName = eventView.name;\n\n  const documentTitle =\n    typeof eventName === 'string' && String(eventName).trim().length > 0\n      ? [String(eventName).trim(), t('Discover')]\n      : [t('Discover')];\n\n  const projectSlug = eventSlug.split(':')[0];\n\n  return (\n    <SentryDocumentTitle\n      title={documentTitle.join(' - ')}\n      orgSlug={organization.slug}\n      projectSlug={projectSlug}\n    >\n      <StyledPageContent>\n        <NoProjectMessage organization={organization}>\n          <EventDetailsContent\n            organization={organization}\n            location={location}\n            params={params}\n            eventView={eventView}\n            eventSlug={eventSlug}\n            router={router}\n            route={route}\n          />\n        </NoProjectMessage>\n      </StyledPageContent>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withOrganization(EventDetails);\n\nconst StyledPageContent = styled(PageContent)`\n  padding: 0;\n`;\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","EventMessage","className","levelIndicatorSize","message","annotations","Message","space","overflowEllipsis","SeenByList","avatarSize","seenBy","iconTooltip","t","maxVisibleAvatars","iconPosition","activeUser","ConfigStore","displayUsers","filter","user","id","length","SeenByWrapper","classNames","users","renderTooltip","Fragment","userDisplayName","moment","lastSeen","format","IconWrapper","title","skipWrapper","color","textColor","DiscoverBreadcrumb","eventView","event","organization","location","crumbs","discoverTarget","features","includes","pathname","getDiscoverLandingUrl","query","generateBlankQueryStringObject","getPageFiltersQuery","push","to","label","isValid","getResultsViewUrlTarget","slug","name","Times","firstSeen","Container","FlexWrapper","StyledIconClock","date","suffix","IconClock","LinkedIssue","AsyncComponent","getEndpoints","groupId","this","props","renderLoading","height","bottomGutter","renderError","disableLog","errors","state","Object","values","find","resp","status","type","showIcon","super","renderBody","eventId","group","issueUrl","permalink","Section","StyledIssueCard","IssueCardHeader","StyledLink","StyledShortId","shortId","avatar","project","hideName","disableLink","StyledSeenByList","IssueCardBody","statsPeriod","data","IssueCardFooter","border","borderRadius","Link","backgroundSecondary","ShortId","fontSizeMedium","gray300","fontSizeSmall","EventDetailsContent","loading","reloading","undefined","isSidebarVisible","setState","tag","eventReference","tagKey","formatTagKey","key","getExpandedResults","value","eventSlug","params","trim","getEventsAPIPayload","field","projectId","split","renderContent","route","router","trackAnalyticsEvent","eventKey","eventName","event_type","organization_id","parseInt","transactionName","tags","transactionSummaryTarget","transactionSummaryRouteWithQuery","orgSlug","transaction","projectID","eventJsonUrl","eventID","results","metaResults","EventHeader","gap","onClick","toggleSidebar","icon","href","external","trackAdvancedAnalyticsEvent","bytes","hasFeature","disabled","priority","fullWidth","quickTrace","meta","errorDest","transactionDest","orgId","slugs","projects","initiallyLoaded","getViewChildTransactionTarget","childTransactionProps","eventDetailsRoute","generateQueryStringObject","showExampleCommit","showTagSummary","api","groupID","generateUrl","generateTagUrl","traceId","contexts","trace","trace_id","start","end","getTraceTimeRangeFromEvent","notFound","permissionDenied","renderComponent","projectSlug","getEventSlug","generateTitle","getMessage","EventHeaderContainer","TitleWrapper","StyledEventOrGroupTitle","MessageWrapper","breakpoints","small","EventOrGroupTitle","headerFontSize","EventDetails","EventView","documentTitle","String","join","StyledPageContent","withOrganization","PageContent"],"sourceRoot":""}