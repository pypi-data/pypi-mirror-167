{"version":3,"file":"chunks/app_views_organizationGroupDetails_grouping_grouping_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/featureFeedback/index.tsx","webpack:///./app/views/organizationGroupDetails/grouping/errorMessage.tsx","webpack:///./app/views/organizationGroupDetails/grouping/newIssue.tsx","webpack:///./app/views/organizationGroupDetails/grouping/grouping.tsx"],"sourcesContent":["import {openModal} from 'sentry/actionCreators/modal';\nimport Button, {ButtonProps} from 'sentry/components/button';\nimport {IconMegaphone} from 'sentry/icons';\nimport {t} from 'sentry/locale';\n\nimport {FeedBackModalProps} from './feedbackModal';\n\nexport interface FeatureFeedbackProps extends FeedBackModalProps {\n  buttonProps?: Partial<ButtonProps>;\n}\n\n// Provides a button that, when clicked, opens a modal with a form that,\n// when filled and submitted, will send feedback to Sentry (feedbacks project).\nexport function FeatureFeedback({\n  feedbackTypes,\n  featureName,\n  buttonProps = {},\n}: FeatureFeedbackProps) {\n  async function handleClick() {\n    const mod = await import('sentry/components/featureFeedback/feedbackModal');\n\n    const {FeedbackModal, modalCss} = mod;\n\n    openModal(\n      deps => (\n        <FeedbackModal\n          {...deps}\n          featureName={featureName}\n          feedbackTypes={feedbackTypes}\n        />\n      ),\n      {\n        modalCss,\n      }\n    );\n  }\n\n  return (\n    <Button icon={<IconMegaphone />} onClick={handleClick} {...buttonProps}>\n      {t('Give Feedback')}\n    </Button>\n  );\n}\n","import {Fragment} from 'react';\n\nimport Alert from 'sentry/components/alert';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Group, Organization, Project} from 'sentry/types';\n\ntype ErrorCode =\n  | 'issue_not_hierarchical'\n  | 'project_not_hierarchical'\n  | 'no_events'\n  | 'merged_issues'\n  | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  hasProjectWriteAccess: boolean;\n  onRetry: () => void;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n  className?: string;\n};\n\nfunction ErrorMessage({\n  error,\n  groupId,\n  onRetry,\n  orgSlug,\n  projSlug,\n  hasProjectWriteAccess,\n  className,\n}: Props) {\n  function getErrorDetails(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping breakdown is available'\n          ),\n          action: (\n            <Button\n              priority=\"primary\"\n              to={`/organizations/${orgSlug}/issues/${groupId}/merged/?${location.search}`}\n            >\n              {t('Unmerge issue')}\n            </Button>\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t(\n            'This project does not have the grouping breakdown available. Is your organization still an early adopter?'\n          ),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'issue_not_hierarchical':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'Only new issues with the latest grouping strategy have this feature available'\n          ),\n        };\n      case 'project_not_hierarchical':\n        return {\n          title: (\n            <Fragment>\n              {t('Update your Grouping Config')}\n              <FeatureBadge type=\"beta\" />\n            </Fragment>\n          ),\n          subTitle: (\n            <Fragment>\n              <p>\n                {t(\n                  'Enable advanced grouping insights and functionality by updating this project to the latest Grouping Config:'\n                )}\n              </p>\n\n              <ul>\n                <li>\n                  {tct(\n                    '[strong:Breakdowns:] Explore events in this issue by call hierarchy.',\n                    {strong: <strong />}\n                  )}\n                </li>\n                <li>\n                  {tct(\n                    '[strong:Stack trace annotations:] See important frames Sentry uses to group issues directly in the stack trace.',\n                    {strong: <strong />}\n                  )}\n                </li>\n              </ul>\n            </Fragment>\n          ),\n          leftAligned: true,\n          action: (\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"primary\"\n                to={`/settings/${orgSlug}/projects/${projSlug}/issue-grouping/#upgrade-grouping`}\n                disabled={!hasProjectWriteAccess}\n                title={\n                  !hasProjectWriteAccess\n                    ? t('You do not have permission to update this project')\n                    : undefined\n                }\n              >\n                {t('Upgrade Grouping Strategy')}\n              </Button>\n              <Button href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/\">\n                {t('Read the docs')}\n              </Button>\n            </ButtonBar>\n          ),\n        };\n      default:\n        return {};\n    }\n  }\n\n  if (typeof error === 'string') {\n    return (\n      <Alert type=\"warning\" className={className}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const {action, title, subTitle, leftAligned} = getErrorDetails(code);\n\n    return (\n      <Panel className={className}>\n        <EmptyMessage\n          size=\"large\"\n          title={title ?? message}\n          description={subTitle}\n          action={action}\n          leftAligned={leftAligned}\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n      className={className}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  eventCount: number;\n  organization: Organization;\n  sampleEvent: Event;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          grouping\n          hideIcons\n          hideLevel\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock size=\"11px\" />\n            <TimeSince\n              date={\n                sampleEvent.dateCreated\n                  ? sampleEvent.dateCreated\n                  : sampleEvent.dateReceived\n              }\n              suffix={t('old')}\n            />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {browserHistory, InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Slider from 'sentry/components/forms/controls/rangeSlider/slider';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t, tct, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {BaseGroup, Group, Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport withApi from 'sentry/utils/withApi';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  api: Client;\n  groupId: Group['id'];\n  location: Location<{cursor?: string; level?: number}>;\n  organization: Organization;\n  projSlug: Project['slug'];\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: number;\n  isCurrent: boolean;\n};\n\nexport const groupingFeedbackTypes = [\n  t('Too eager grouping'),\n  t('Too specific grouping'),\n  t('Other grouping issue'),\n];\n\nconst GROUPING_BREAKDOWN__DOC_LINK =\n  'https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/';\n\nfunction Grouping({api, groupId, location, organization, router, projSlug}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useEffect(() => {\n    fetchGroupingLevels();\n    return browserHistory.listen(handleRouteLeave);\n  }, []);\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]);\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]);\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]);\n\n  function handleRouteLeave(newLocation: Location<{cursor?: string; level?: number}>) {\n    if (\n      newLocation.pathname === location.pathname ||\n      (newLocation.pathname !== location.pathname &&\n        newLocation.query.cursor === undefined &&\n        newLocation.query.level === undefined)\n    ) {\n      return true;\n    }\n\n    // Removes cursor and level from the URL on route leave\n    // so that the parameters will not interfere with other pages\n    browserHistory.replace({\n      pathname: newLocation.pathname,\n      query: {\n        ...newLocation.query,\n        cursor: undefined,\n        level: undefined,\n      },\n    });\n\n    return false;\n  }\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [data, , resp] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = resp?.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(Array.isArray(data) ? data : [data]);\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(groupingLevels[1].id);\n      return;\n    }\n\n    setActiveGroupingLevel(groupingLevels[0].id);\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return (\n      <Fragment>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <ErrorWrapper>\n              <ButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </ButtonBar>\n              <StyledErrorMessage\n                onRetry={fetchGroupingLevels}\n                groupId={groupId}\n                error={error}\n                projSlug={projSlug}\n                orgSlug={organization.slug}\n                hasProjectWriteAccess={organization.access.includes('project:write')}\n              />\n            </ErrorWrapper>\n          </Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Layout.Body>\n      <Layout.Main fullWidth>\n        <Wrapper>\n          <Header>\n            {t(\n              'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n            )}\n          </Header>\n          <Body>\n            <Actions>\n              <SliderWrapper>\n                {t('Fewer issues')}\n                <StyledRangeSlider\n                  name=\"grouping-level\"\n                  allowedValues={groupingLevels.map(groupingLevel =>\n                    Number(groupingLevel.id)\n                  )}\n                  value={activeGroupingLevel ?? 0}\n                  onChange={handleSetActiveGroupingLevel}\n                  showLabel={false}\n                />\n                {t('More issues')}\n              </SliderWrapper>\n              <StyledButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </StyledButtonBar>\n            </Actions>\n            <Content isReloading={isGroupingLevelDetailsLoading}>\n              <StyledPanelTable headers={['', t('Events')]}>\n                {activeGroupingLevelDetails.map(\n                  ({hash, title, metadata, latestEvent, eventCount}) => {\n                    // XXX(markus): Ugly hack to make NewIssue show the right things.\n                    return (\n                      <NewIssue\n                        key={hash}\n                        sampleEvent={{\n                          ...latestEvent,\n                          metadata: {\n                            ...(metadata || latestEvent.metadata),\n                            current_level: activeGroupingLevel,\n                          },\n                          title: title || latestEvent.title,\n                        }}\n                        eventCount={eventCount}\n                        organization={organization}\n                      />\n                    );\n                  }\n                )}\n              </StyledPanelTable>\n              <StyledPagination\n                pageLinks={pagination}\n                disabled={isGroupingLevelDetailsLoading}\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            </Content>\n          </Body>\n        </Wrapper>\n      </Layout.Main>\n    </Layout.Body>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 1fr max-content;\n    gap: ${space(2)};\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledErrorMessage = styled(ErrorMessage)`\n  width: 100%;\n`;\n\nconst ErrorWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: ${space(1)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n"],"names":["FeatureFeedback","feedbackTypes","featureName","buttonProps","icon","onClick","async","mod","FeedbackModal","modalCss","openModal","deps","t","ErrorMessage","error","groupId","onRetry","orgSlug","projSlug","hasProjectWriteAccess","className","type","status","responseJSON","detail","code","message","action","title","subTitle","leftAligned","errorCode","priority","to","location","search","Fragment","tct","strong","gap","disabled","undefined","href","getErrorDetails","size","description","NewIssue","sampleEvent","eventCount","organization","EventDetails","data","grouping","hideIcons","hideLevel","ExtraInfo","TimeWrapper","StyledIconClock","date","dateCreated","dateReceived","suffix","EventCount","space","p","theme","fontSizeSmall","IconClock","subText","groupingFeedbackTypes","GROUPING_BREAKDOWN__DOC_LINK","Grouping","api","router","cursor","level","query","isLoading","setIsLoading","useState","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","handleRouteLeave","newLocation","pathname","browserHistory","useEffect","fetchGroupingLevels","length","defined","id","setSecondGrouping","replace","resp","requestPromise","method","includeAllArgs","per_page","pageLinks","getResponseHeader","Array","isArray","err","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","Number","DEFAULT_DEBOUNCE_DURATION","response","levels","fullWidth","ErrorWrapper","external","StyledErrorMessage","slug","access","includes","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Wrapper","Header","Body","Actions","SliderWrapper","StyledRangeSlider","name","allowedValues","map","groupingLevel","value","onChange","showLabel","StyledButtonBar","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","current_level","StyledPagination","caption","result","tn","current","total","withApi","breakpoints","small","ButtonBar","PanelTable","xlarge","Pagination","fontSizeMedium","RangeSlider","Slider","backgroundSecondary"],"sourceRoot":""}