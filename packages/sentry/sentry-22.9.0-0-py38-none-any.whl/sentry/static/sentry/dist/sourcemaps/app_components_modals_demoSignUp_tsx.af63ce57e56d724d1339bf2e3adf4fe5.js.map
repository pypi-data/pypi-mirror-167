{"version":3,"file":"chunks/app_components_modals_demoSignUp_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"0iBAYe,SAASA,EAAT,GAIL,IAJsC,SAC9CC,EAD8C,YAE9CC,EAF8C,SAG9CC,GACQ,EACR,OACE,QAAC,EAAAC,SAAD,YACE,QAACC,EAAD,CAAkBC,IAAKC,EAAUC,MAAOP,IACvCE,GACD,QAACM,EAAD,CAAoBH,I,qjBAAiBE,MAAON,MAGjD,CAZuBF,EAAAA,YAAAA,0BAcxB,MAAMK,GAAmB,OAAO,MAAP,sBAAH,4BAEXK,GAAKA,EAAEF,OAFI,uCAQhBC,GAAqB,OAAO,MAAP,sBAAH,4BAEbC,GAAKA,EAAEF,OAFM,yCAQxBR,EAAwBW,aAAe,CACrCV,SAAU,QACVC,YAAa,S,uJC9Bf,MAAMU,EAAkB,IAAyB,IAAxB,WAACC,GAAuB,EAC/C,MAAMC,GAAYC,EAAAA,EAAAA,IAChB,6BACAC,EAAAA,EAAAA,OAGF,OACE,QAAChB,EAAD,WACE,0BACE,QAACiB,EAAD,YACE,QAACC,EAAD,WAAYC,EAAAA,EAAAA,GAAE,qBACd,wBAAKA,EAAAA,EAAAA,GAAE,8BACP,uBACGA,EAAAA,EAAAA,GACC,+HAIN,QAACC,EAAD,CAAiBC,IAAK,EAAtB,WACE,QAAC,KAAD,CACEC,SAAS,UACTC,KAAMT,EACNU,QAAS,KACPC,EAAAA,EAAAA,GAA4B,mCAAoC,CAC9DC,aAAc,OALpB,UASGP,EAAAA,EAAAA,GAAE,kBAEL,QAAC,KAAD,CACEG,SAAS,UACTE,QAAS,MACPC,EAAAA,EAAAA,GAA4B,qCAAsC,CAChEC,aAAc,OAEhBb,GAAY,EANhB,UASGM,EAAAA,EAAAA,GAAE,2BAjCb,EANIP,EAAAA,YAAAA,kBA+CN,MAAMK,GAAiB,OAAO,MAAP,sBAAH,YACPU,EAAAA,EAAAA,GAAM,GADC,mBAGHjB,GAAKA,EAAEkB,MAAMC,gBAHV,mCAWPC,EAAW,CAAH,2HAUfZ,GAAY,OAAO,KAAP,sBAAH,kBACIS,EAAAA,EAAAA,GAAM,GADV,qDAIJjB,GAAKA,EAAEkB,MAAMG,WAJT,eAKArB,GAAKA,EAAEkB,MAAMI,oBALb,KAQTZ,GAAkB,OAAOa,EAAAA,GAAP,sBAAH,eACLN,EAAAA,EAAAA,GAAM,GADD,2BAKrB,G,g3BC/DA,MAAMO,EAA6C,IAC9CC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,GASL,GAFoCC,EAAAA,EAAAA,GAAuCd,E,uCCpDpE,SAASe,IAAuC,MACrD,MAAMC,GAAmB,UAAAC,OAAOC,mBAAP,eAAoBF,mBAAoB,GAEjE,OADmB,IAAIG,gBAAgBH,EAExC,CAEM,SAASlC,IACd,MAAMsC,EAASL,IACTM,EAAQC,aAAaC,QAAQ,SAInC,OAHIF,GACFD,EAAOI,OAAO,QAASH,GAElBD,CACR,CAEM,SAASvC,EAAqB4C,EAAaL,GAChD,MAAMM,EAAcN,EAAOO,WAC3B,OAAID,EACKD,EAAM,IAAMC,EAEdD,CACR,C","sources":["webpack:///./app/components/highlightModalContainer.tsx","webpack:///./app/components/modals/demoSignUp.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/demoMode.tsx"],"sourcesContent":["import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport BottomLeft from 'sentry-images/pattern/highlight-bottom-left.svg';\nimport TopRight from 'sentry-images/pattern/highlight-top-right.svg';\n\ntype Props = {\n  bottomWidth: string;\n  children: React.ReactNode;\n  topWidth: string;\n};\n\nexport default function HighlightModalContainer({\n  topWidth,\n  bottomWidth,\n  children,\n}: Props) {\n  return (\n    <Fragment>\n      <PositionTopRight src={TopRight} width={topWidth} />\n      {children}\n      <PositionBottomLeft src={BottomLeft} width={bottomWidth} />\n    </Fragment>\n  );\n}\n\nconst PositionTopRight = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  right: 0;\n  top: 0;\n  pointer-events: none;\n`;\n\nconst PositionBottomLeft = styled('img')<{width: string}>`\n  position: absolute;\n  width: ${p => p.width};\n  bottom: 0;\n  left: 0;\n  pointer-events: none;\n`;\n\nHighlightModalContainer.defaultProps = {\n  topWidth: '400px',\n  bottomWidth: '200px',\n};\n","import {css} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport HighlightModalContainer from 'sentry/components/highlightModalContainer';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport trackAdvancedAnalyticsEvent from 'sentry/utils/analytics/trackAdvancedAnalyticsEvent';\nimport {extraQueryParameterWithEmail, urlAttachQueryParams} from 'sentry/utils/demoMode';\n\ntype Props = ModalRenderProps;\n\nconst DemoSignUpModal = ({closeModal}: Props) => {\n  const signupUrl = urlAttachQueryParams(\n    'https://sentry.io/signup/',\n    extraQueryParameterWithEmail()\n  );\n\n  return (\n    <HighlightModalContainer>\n      <div>\n        <TrialCheckInfo>\n          <Subheader>{t('Sandbox Signup')}</Subheader>\n          <h2>{t('Hey, love what you see?')}</h2>\n          <p>\n            {t(\n              'Sign up now to setup your own project to see problems within your code and learn how to quickly improve your project.'\n            )}\n          </p>\n        </TrialCheckInfo>\n        <StyledButtonBar gap={2}>\n          <Button\n            priority=\"primary\"\n            href={signupUrl}\n            onClick={() =>\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_signup', {\n                organization: null,\n              })\n            }\n          >\n            {t('Sign up now')}\n          </Button>\n          <Button\n            priority=\"default\"\n            onClick={() => {\n              trackAdvancedAnalyticsEvent('growth.demo_modal_clicked_continue', {\n                organization: null,\n              });\n              closeModal();\n            }}\n          >\n            {t('Keep Exploring')}\n          </Button>\n        </StyledButtonBar>\n      </div>\n    </HighlightModalContainer>\n  );\n};\n\nconst TrialCheckInfo = styled('div')`\n  padding: ${space(3)} 0;\n  p {\n    font-size: ${p => p.theme.fontSizeMedium};\n    margin: 0;\n  }\n  h2 {\n    font-size: 1.5em;\n  }\n`;\n\nexport const modalCss = css`\n  width: 100%;\n  max-width: 730px;\n  [role='document'] {\n    position: relative;\n    padding: 70px 80px;\n    overflow: hidden;\n  }\n`;\n\nconst Subheader = styled('h4')`\n  margin-bottom: ${space(2)};\n  text-transform: uppercase;\n  font-weight: bold;\n  color: ${p => p.theme.purple300};\n  font-size: ${p => p.theme.fontSizeExtraSmall};\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  margin-top: ${space(2)};\n  max-width: fit-content;\n`;\n\nexport default DemoSignUpModal;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {profilingEventMap, ProfilingEventParameters} from './profilingAnalyticsEvents';\nimport {releasesEventMap, ReleasesEventParameters} from './releasesAnalyticsEvents';\nimport {replayEventMap, ReplayEventParameters} from './replayAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  CoreUIEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  ProfilingEventParameters &\n  ReleasesEventParameters &\n  ReplayEventParameters &\n  SamplingEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  TeamInsightsEventParameters;\n\nconst allEventMap: Record<string, string | null> = {\n  ...coreUIEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...profilingEventMap,\n  ...releasesEventMap,\n  ...replayEventMap,\n  ...samplingEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...workflowEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","export function extraQueryParameter(): URLSearchParams {\n  const extraQueryString = window.SandboxData?.extraQueryString || '';\n  const extraQuery = new URLSearchParams(extraQueryString);\n  return extraQuery;\n}\n\nexport function extraQueryParameterWithEmail(): URLSearchParams {\n  const params = extraQueryParameter();\n  const email = localStorage.getItem('email');\n  if (email) {\n    params.append('email', email);\n  }\n  return params;\n}\n\nexport function urlAttachQueryParams(url: string, params: URLSearchParams): string {\n  const queryString = params.toString();\n  if (queryString) {\n    return url + '?' + queryString;\n  }\n  return url;\n}\n"],"names":["HighlightModalContainer","topWidth","bottomWidth","children","Fragment","PositionTopRight","src","TopRight","width","PositionBottomLeft","p","defaultProps","DemoSignUpModal","closeModal","signupUrl","urlAttachQueryParams","extraQueryParameterWithEmail","TrialCheckInfo","Subheader","t","StyledButtonBar","gap","priority","href","onClick","trackAdvancedAnalyticsEvent","organization","space","theme","fontSizeMedium","modalCss","purple300","fontSizeExtraSmall","ButtonBar","allEventMap","coreUIEventMap","dashboardsEventMap","discoverEventMap","growthEventMap","issueEventMap","performanceEventMap","profilingEventMap","releasesEventMap","replayEventMap","samplingEventMap","searchEventMap","settingsEventMap","workflowEventMap","makeAnalyticsFunction","extraQueryParameter","extraQueryString","window","SandboxData","URLSearchParams","params","email","localStorage","getItem","append","url","queryString","toString"],"sourceRoot":""}