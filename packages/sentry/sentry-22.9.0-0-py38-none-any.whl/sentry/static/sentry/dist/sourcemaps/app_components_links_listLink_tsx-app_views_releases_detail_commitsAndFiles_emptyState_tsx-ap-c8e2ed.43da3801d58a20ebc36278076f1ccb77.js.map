{"version":3,"file":"chunks/app_components_links_listLink_tsx-app_views_releases_detail_commitsAndFiles_emptyState_tsx-ap-c8e2ed.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/links/listLink.tsx","webpack:///./app/stores/repositoryStore.tsx","webpack:///./app/utils/withRepositories.tsx","webpack:///./app/actionCreators/repositories.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/emptyState.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/repositorySwitcher.tsx","webpack:///./app/views/releases/detail/commitsAndFiles/withReleaseRepos.tsx","webpack:///./app/views/releases/detail/utils.tsx","webpack:///../node_modules/lodash/_baseMean.js","webpack:///../node_modules/lodash/_baseSum.js","webpack:///../node_modules/lodash/mean.js"],"sourcesContent":["import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {Link as RouterLink, withRouter, WithRouterProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport classNames from 'classnames';\nimport {LocationDescriptor} from 'history';\nimport omit from 'lodash/omit';\nimport * as qs from 'query-string';\n\ntype DefaultProps = {\n  activeClassName: string;\n  disabled: boolean;\n  index: boolean;\n};\n\ntype LinkProps = Omit<React.ComponentProps<typeof RouterLink>, 'to'>;\n\ntype Props = WithRouterProps &\n  Partial<DefaultProps> &\n  LinkProps & {\n    /**\n     * Link target. We don't want to expose the ToLocationFunction on this component.\n     */\n    to: LocationDescriptor;\n    // If supplied by parent component, decides whether link element\n    // is \"active\" or not ... overriding default behavior of strict\n    // route matching\n    isActive?: (location: LocationDescriptor, indexOnly?: boolean) => boolean;\n    query?: string;\n  };\n\nclass ListLink extends Component<Props> {\n  static displayName = 'ListLink';\n\n  static defaultProps: DefaultProps = {\n    activeClassName: 'active',\n    index: false,\n    disabled: false,\n  };\n\n  isActive() {\n    const {isActive, to, query, index, router} = this.props;\n    const queryData = query ? qs.parse(query) : undefined;\n    const target: LocationDescriptor =\n      typeof to === 'string' ? {pathname: to, query: queryData} : to;\n\n    if (typeof isActive === 'function') {\n      return isActive(target, index);\n    }\n\n    return router.isActive(target, index);\n  }\n\n  getClassName = () => {\n    const _classNames = {};\n    const {className, activeClassName} = this.props;\n\n    if (className) {\n      _classNames[className] = true;\n    }\n\n    if (this.isActive() && activeClassName) {\n      _classNames[activeClassName] = true;\n    }\n\n    return classNames(_classNames);\n  };\n\n  render() {\n    const {index, children, to, disabled, ...props} = this.props;\n    const carriedProps = omit(\n      props,\n      'activeClassName',\n      'css',\n      'isActive',\n      'index',\n      'router',\n      'location'\n    );\n\n    return (\n      <StyledLi className={this.getClassName()} disabled={disabled}>\n        <RouterLink {...carriedProps} onlyActiveOnIndex={index} to={disabled ? '' : to}>\n          {children}\n        </RouterLink>\n      </StyledLi>\n    );\n  }\n}\n\nexport default withRouter(ListLink);\n\nconst StyledLi = styled('li', {\n  shouldForwardProp: prop => prop !== 'disabled',\n})<{disabled?: boolean}>`\n  ${p =>\n    p.disabled &&\n    `\n   a {\n    color:${p.theme.disabled} !important;\n    pointer-events: none;\n    :hover {\n      color: ${p.theme.disabled}  !important;\n    }\n   }\n`}\n`;\n","import {createStore, StoreDefinition} from 'reflux';\n\nimport {Repository} from 'sentry/types';\n\ninterface RepositoryStoreDefinition extends StoreDefinition {\n  get(): {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n  loadRepositories(orgSlug: string): void;\n  loadRepositoriesError(error: Error): void;\n  loadRepositoriesSuccess(data: Repository[]): void;\n  resetRepositories(): void;\n  state: {\n    orgSlug?: string;\n    repositories?: Repository[];\n    repositoriesError?: Error;\n    repositoriesLoading?: boolean;\n  };\n}\n\nconst storeConfig: RepositoryStoreDefinition = {\n  state: {\n    orgSlug: undefined,\n    repositories: undefined,\n    repositoriesLoading: undefined,\n    repositoriesError: undefined,\n  },\n\n  init() {\n    this.resetRepositories();\n  },\n\n  resetRepositories() {\n    this.state = {\n      orgSlug: undefined,\n      repositories: undefined,\n      repositoriesLoading: undefined,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositories(orgSlug: string) {\n    this.state = {\n      orgSlug,\n      repositories: orgSlug === this.state.orgSlug ? this.state.repositories : undefined,\n      repositoriesLoading: true,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesError(err: Error) {\n    this.state = {\n      ...this.state,\n      repositories: undefined,\n      repositoriesLoading: false,\n      repositoriesError: err,\n    };\n    this.trigger(this.state);\n  },\n\n  loadRepositoriesSuccess(data: Repository[]) {\n    this.state = {\n      ...this.state,\n      repositories: data,\n      repositoriesLoading: false,\n      repositoriesError: undefined,\n    };\n    this.trigger(this.state);\n  },\n\n  get() {\n    return {...this.state};\n  },\n};\n\nconst RepositoryStore = createStore(storeConfig);\nexport default RepositoryStore;\n","import {Component} from 'react';\n\nimport {getRepositories} from 'sentry/actionCreators/repositories';\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Organization, Repository} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype DependentProps = {\n  api: Client;\n  organization: Organization;\n};\n\ntype InjectedProps = {\n  repositories?: Repository[];\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n};\n\nconst INITIAL_STATE: InjectedProps = {\n  repositories: undefined,\n  repositoriesLoading: undefined,\n  repositoriesError: undefined,\n};\n\nfunction withRepositories<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithRepositories extends Component<P & DependentProps, InjectedProps> {\n    static displayName = `withRepositories(${getDisplayName(WrappedComponent)})`;\n\n    constructor(props: P & DependentProps, context: any) {\n      super(props, context);\n\n      const repoData = RepositoryStore.get();\n\n      this.state =\n        repoData.orgSlug === props.organization.slug\n          ? {...INITIAL_STATE, ...repoData}\n          : {...INITIAL_STATE};\n    }\n\n    componentDidMount() {\n      const {organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      if (repoData.orgSlug !== orgSlug) {\n        RepositoryStore.resetRepositories();\n      }\n\n      // XXX(leedongwei): Do not move this function call unless you modify the\n      // unit test named \"prevents repeated calls\"\n      this.fetchRepositories();\n    }\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n    unsubscribe = RepositoryStore.listen(() => this.onStoreUpdate(), undefined);\n\n    fetchRepositories() {\n      const {api, organization} = this.props;\n      const orgSlug = organization.slug;\n      const repoData = RepositoryStore.get();\n\n      // XXX(leedongwei): Do not check the orgSlug here. It would have been\n      // verified at `getInitialState`. The short-circuit hack in actionCreator\n      // does not update the orgSlug in the store.\n      if (\n        (!repoData.repositories && !repoData.repositoriesLoading) ||\n        repoData.repositoriesError\n      ) {\n        getRepositories(api, {orgSlug});\n      }\n    }\n\n    onStoreUpdate() {\n      const repoData = RepositoryStore.get();\n      this.setState({...repoData});\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} {...this.state} />;\n    }\n  }\n\n  return WithRepositories;\n}\n\nexport default withRepositories;\n","import * as Sentry from '@sentry/react';\n\nimport {Client} from 'sentry/api';\nimport RepositoryStore from 'sentry/stores/repositoryStore';\nimport {Repository} from 'sentry/types';\n\ntype ParamsGet = {\n  orgSlug: string;\n};\n\nexport function getRepositories(api: Client, params: ParamsGet) {\n  const {orgSlug} = params;\n  const path = `/organizations/${orgSlug}/repos/`;\n\n  // HACK(leedongwei): Actions fired by the ActionCreators are queued to\n  // the back of the event loop, allowing another getRepo for the same\n  // repo to be fired before the loading state is updated in store.\n  // This hack short-circuits that and update the state immediately.\n  RepositoryStore.state.repositoriesLoading = true;\n  RepositoryStore.loadRepositories(orgSlug);\n\n  return api\n    .requestPromise(path, {\n      method: 'GET',\n    })\n    .then((res: Repository[]) => {\n      RepositoryStore.loadRepositoriesSuccess(res);\n    })\n    .catch(err => {\n      RepositoryStore.loadRepositoriesError(err);\n      Sentry.withScope(scope => {\n        scope.setLevel('warning');\n        scope.setFingerprint(['getRepositories-action-creator']);\n        Sentry.captureException(err);\n      });\n    });\n}\n","import EmptyStateWarning from 'sentry/components/emptyStateWarning';\nimport {Panel, PanelBody} from 'sentry/components/panels';\n\ntype Props = {\n  children: React.ReactNode;\n};\n\nconst EmptyState = ({children}: Props) => (\n  <Panel>\n    <PanelBody>\n      <EmptyStateWarning>\n        <p>{children}</p>\n      </EmptyStateWarning>\n    </PanelBody>\n  </Panel>\n);\n\nexport default EmptyState;\n","import {PureComponent} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport CompactSelect from 'sentry/components/forms/compactSelect';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Repository} from 'sentry/types';\n\ntype Props = {\n  location: Location;\n  repositories: Array<Repository>;\n  router: InjectedRouter;\n  activeRepository?: Repository;\n};\n\nclass RepositorySwitcher extends PureComponent<Props> {\n  handleRepoFilterChange = (activeRepo: string) => {\n    const {router, location} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, activeRepo},\n    });\n  };\n\n  render() {\n    const {activeRepository, repositories} = this.props;\n\n    const activeRepo = activeRepository?.name;\n\n    return (\n      <StyledCompactSelect\n        triggerLabel={activeRepo}\n        triggerProps={{prefix: t('Filter')}}\n        value={activeRepo}\n        options={repositories.map(repo => ({\n          value: repo.name,\n          label: <RepoLabel>{repo.name}</RepoLabel>,\n        }))}\n        onChange={opt => this.handleRepoFilterChange(opt?.value)}\n      />\n    );\n  }\n}\n\nexport default RepositorySwitcher;\n\nconst StyledCompactSelect = styled(CompactSelect)`\n  margin-bottom: ${space(1)};\n`;\n\nconst RepoLabel = styled('div')`\n  ${p => p.theme.overflowEllipsis}\n`;\n","import {Component} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Button from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {Body, Main} from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel} from 'sentry/components/panels';\nimport {IconCommit} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {Organization, Repository} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withRepositories from 'sentry/utils/withRepositories';\n\nimport {ReleaseContext} from '..';\n\n// These props are required when using this HoC\ntype DependentProps = RouteComponentProps<{orgId: string; release: string}, {}>;\n\ntype HoCsProps = {\n  api: Client;\n  organization: Organization;\n  repositories?: Repository[];\n  repositoriesError?: Error;\n  repositoriesLoading?: boolean;\n};\n\ntype State = {\n  isLoading: boolean;\n  releaseRepos: Repository[];\n  activeReleaseRepo?: Repository;\n};\n\nfunction withReleaseRepos<P extends DependentProps>(\n  WrappedComponent: React.ComponentType<P>\n) {\n  class WithReleaseRepos extends Component<P & HoCsProps, State> {\n    static displayName = `withReleaseRepos(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      releaseRepos: [],\n      isLoading: true,\n    };\n\n    componentDidMount() {\n      this.fetchReleaseRepos();\n    }\n\n    componentDidUpdate(prevProps: P & HoCsProps, prevState: State) {\n      if (\n        this.props.params.release !== prevProps.params.release ||\n        (!!prevProps.repositoriesLoading && !this.props.repositoriesLoading)\n      ) {\n        this.fetchReleaseRepos();\n        return;\n      }\n\n      if (\n        prevState.releaseRepos.length !== this.state.releaseRepos.length ||\n        prevProps.location.query?.activeRepo !== this.props.location.query?.activeRepo\n      ) {\n        this.setActiveReleaseRepo(this.props);\n      }\n    }\n\n    static contextType = ReleaseContext;\n\n    setActiveReleaseRepo(props: P & HoCsProps) {\n      const {releaseRepos, activeReleaseRepo} = this.state;\n\n      if (!releaseRepos.length) {\n        return;\n      }\n\n      const activeCommitRepo = props.location.query?.activeRepo;\n\n      if (!activeCommitRepo) {\n        this.setState({\n          activeReleaseRepo: releaseRepos[0] ?? null,\n        });\n        return;\n      }\n\n      if (activeCommitRepo === activeReleaseRepo?.name) {\n        return;\n      }\n\n      const matchedRepository = releaseRepos.find(\n        commitRepo => commitRepo.name === activeCommitRepo\n      );\n\n      if (matchedRepository) {\n        this.setState({\n          activeReleaseRepo: matchedRepository,\n        });\n        return;\n      }\n\n      addErrorMessage(t('The repository you were looking for was not found.'));\n    }\n\n    async fetchReleaseRepos() {\n      const {params, api, repositories, repositoriesLoading} = this.props;\n\n      if (repositoriesLoading === undefined || repositoriesLoading === true) {\n        return;\n      }\n\n      if (!repositories?.length) {\n        this.setState({isLoading: false});\n        return;\n      }\n\n      const {release, orgId} = params;\n      const {project} = this.context;\n\n      this.setState({isLoading: true});\n\n      try {\n        const releasePath = encodeURIComponent(release);\n        const releaseRepos = await api.requestPromise(\n          `/projects/${orgId}/${project.slug}/releases/${releasePath}/repositories/`\n        );\n        this.setState({releaseRepos, isLoading: false});\n        this.setActiveReleaseRepo(this.props);\n      } catch (error) {\n        Sentry.captureException(error);\n        addErrorMessage(\n          t(\n            'An error occurred while trying to fetch the repositories of the release: %s',\n            release\n          )\n        );\n      }\n    }\n\n    render() {\n      const {isLoading, activeReleaseRepo, releaseRepos} = this.state;\n      const {repositoriesLoading, repositories, params, router, location, organization} =\n        this.props;\n\n      if (isLoading || repositoriesLoading) {\n        return <LoadingIndicator />;\n      }\n\n      const noRepositoryOrgRelatedFound = !repositories?.length;\n\n      if (noRepositoryOrgRelatedFound) {\n        const {orgId} = params;\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'Connect a repository to see commit info, files changed, and authors involved in future releases.'\n                  )}\n                  action={\n                    <Button priority=\"primary\" to={`/settings/${orgId}/repos/`}>\n                      {t('Connect a repository')}\n                    </Button>\n                  }\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      const noReleaseReposFound = !releaseRepos.length;\n\n      if (noReleaseReposFound) {\n        return (\n          <Body>\n            <Main fullWidth>\n              <Panel dashedBorder>\n                <EmptyMessage\n                  icon={<IconCommit size=\"xl\" />}\n                  title={t('Releases are better with commit data!')}\n                  description={t(\n                    'No commits associated with this release have been found.'\n                  )}\n                />\n              </Panel>\n            </Main>\n          </Body>\n        );\n      }\n\n      if (activeReleaseRepo === undefined) {\n        return <LoadingIndicator />;\n      }\n\n      const {release} = params;\n      const orgSlug = organization.slug;\n\n      return (\n        <WrappedComponent\n          {...this.props}\n          orgSlug={orgSlug}\n          projectSlug={this.context.project.slug}\n          release={release}\n          router={router}\n          location={location}\n          releaseRepos={releaseRepos}\n          activeReleaseRepo={activeReleaseRepo}\n        />\n      );\n    }\n  }\n\n  return withApi(withOrganization(withRepositories(WithReleaseRepos)));\n}\n\nexport default withReleaseRepos;\n","import {Location} from 'history';\nimport pick from 'lodash/pick';\nimport moment from 'moment';\n\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {parseStatsPeriod} from 'sentry/components/organizations/timeRangeSelector/utils';\nimport {URL_PARAM} from 'sentry/constants/pageFilters';\nimport {t} from 'sentry/locale';\nimport {\n  Commit,\n  CommitFile,\n  FilesByRepository,\n  ReleaseComparisonChartType,\n  ReleaseProject,\n  ReleaseWithHealth,\n  Repository,\n} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {decodeList} from 'sentry/utils/queryString';\nimport {Theme} from 'sentry/utils/theme';\n\nimport {getReleaseBounds, getReleaseParams, isMobileRelease} from '../utils';\nimport {commonTermsDescription, SessionTerm} from '../utils/sessionTerm';\n\nexport type CommitsByRepository = {\n  [key: string]: Commit[];\n};\n\n/**\n * Convert list of individual file changes into a per-file summary grouped by repository\n */\nexport function getFilesByRepository(fileList: CommitFile[]) {\n  return fileList.reduce<FilesByRepository>((filesByRepository, file) => {\n    const {filename, repoName, author, type} = file;\n\n    if (!filesByRepository.hasOwnProperty(repoName)) {\n      filesByRepository[repoName] = {};\n    }\n\n    if (!filesByRepository[repoName].hasOwnProperty(filename)) {\n      filesByRepository[repoName][filename] = {\n        authors: {},\n        types: new Set(),\n      };\n    }\n\n    if (author.email) {\n      filesByRepository[repoName][filename].authors[author.email] = author;\n    }\n\n    filesByRepository[repoName][filename].types.add(type);\n\n    return filesByRepository;\n  }, {});\n}\n\n/**\n * Convert list of individual commits into a summary grouped by repository\n */\nexport function getCommitsByRepository(commitList: Commit[]): CommitsByRepository {\n  return commitList.reduce((commitsByRepository, commit) => {\n    const repositoryName = commit.repository?.name ?? t('unknown');\n\n    if (!commitsByRepository.hasOwnProperty(repositoryName)) {\n      commitsByRepository[repositoryName] = [];\n    }\n\n    commitsByRepository[repositoryName].push(commit);\n\n    return commitsByRepository;\n  }, {});\n}\n\n/**\n * Get request query according to the url params and active repository\n */\n\ntype GetQueryProps = {\n  location: Location;\n  activeRepository?: Repository;\n  perPage?: number;\n};\n\nexport function getQuery({location, perPage = 40, activeRepository}: GetQueryProps) {\n  const query = {\n    ...pick(location.query, [...Object.values(URL_PARAM), 'cursor']),\n    per_page: perPage,\n  };\n\n  if (!activeRepository) {\n    return query;\n  }\n\n  return {...query, repo_name: activeRepository.name};\n}\n\n/**\n * Get repositories to render according to the activeRepository\n */\nexport function getReposToRender(repos: Array<string>, activeRepository?: Repository) {\n  if (!activeRepository) {\n    return repos;\n  }\n  return [activeRepository.name];\n}\n\nexport const releaseComparisonChartLabels = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.SESSION_DURATION]: t('Session Duration p50'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartTitles = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]: t('Crash Free Session Rate'),\n  [ReleaseComparisonChartType.HEALTHY_SESSIONS]: t('Healthy Session Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_SESSIONS]: t('Abnormal Session Rate'),\n  [ReleaseComparisonChartType.ERRORED_SESSIONS]: t('Errored Session Rate'),\n  [ReleaseComparisonChartType.CRASHED_SESSIONS]: t('Crashed Session Rate'),\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]: t('Crash Free User Rate'),\n  [ReleaseComparisonChartType.HEALTHY_USERS]: t('Healthy User Rate'),\n  [ReleaseComparisonChartType.ABNORMAL_USERS]: t('Abnormal User Rate'),\n  [ReleaseComparisonChartType.ERRORED_USERS]: t('Errored User Rate'),\n  [ReleaseComparisonChartType.CRASHED_USERS]: t('Crashed User Rate'),\n  [ReleaseComparisonChartType.SESSION_COUNT]: t('Session Count'),\n  [ReleaseComparisonChartType.SESSION_DURATION]: t('Session Duration'),\n  [ReleaseComparisonChartType.USER_COUNT]: t('User Count'),\n  [ReleaseComparisonChartType.ERROR_COUNT]: t('Error Count'),\n  [ReleaseComparisonChartType.TRANSACTION_COUNT]: t('Transaction Count'),\n  [ReleaseComparisonChartType.FAILURE_RATE]: t('Failure Rate'),\n};\n\nexport const releaseComparisonChartHelp = {\n  [ReleaseComparisonChartType.CRASH_FREE_SESSIONS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_SESSIONS],\n  [ReleaseComparisonChartType.CRASH_FREE_USERS]:\n    commonTermsDescription[SessionTerm.CRASH_FREE_USERS],\n  [ReleaseComparisonChartType.SESSION_COUNT]: t(\n    'The number of sessions in a given period.'\n  ),\n  [ReleaseComparisonChartType.USER_COUNT]: t('The number of users in a given period.'),\n};\n\ntype GenerateReleaseMarklineOptions = {\n  axisIndex?: number;\n  hideLabel?: boolean;\n};\n\nfunction generateReleaseMarkLine(\n  title: string,\n  position: number,\n  theme: Theme,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const {hideLabel, axisIndex} = options || {};\n\n  return {\n    seriesName: title,\n    type: 'line',\n    data: [{name: position, value: null as any}], // TODO(ts): echart types\n    yAxisIndex: axisIndex ?? undefined,\n    xAxisIndex: axisIndex ?? undefined,\n    color: theme.gray300,\n    markLine: MarkLine({\n      silent: true,\n      lineStyle: {color: theme.gray300, type: 'solid'},\n      label: {\n        position: 'insideEndBottom',\n        formatter: hideLabel ? '' : title,\n        // @ts-expect-error weird echart types\n        font: 'Rubik',\n        fontSize: 11,\n      },\n      data: [\n        {\n          xAxis: position,\n        },\n      ],\n    }),\n  };\n}\n\nexport const releaseMarkLinesLabels = {\n  created: t('Release Created'),\n  adopted: t('Adopted'),\n  unadopted: t('Replaced'),\n};\n\nexport function generateReleaseMarkLines(\n  release: ReleaseWithHealth,\n  project: ReleaseProject,\n  theme: Theme,\n  location: Location,\n  options?: GenerateReleaseMarklineOptions\n) {\n  const markLines: Series[] = [];\n  const adoptionStages = release.adoptionStages?.[project.slug];\n  const isSingleEnv = decodeList(location.query.environment).length === 1;\n  const releaseBounds = getReleaseBounds(release);\n  const {statsPeriod, ...releaseParamsRest} = getReleaseParams({\n    location,\n    releaseBounds,\n  });\n  let {start, end} = releaseParamsRest;\n  const isDefaultPeriod = !(\n    location.query.pageStart ||\n    location.query.pageEnd ||\n    location.query.pageStatsPeriod\n  );\n\n  if (statsPeriod) {\n    const parsedStatsPeriod = parseStatsPeriod(statsPeriod, null);\n    start = parsedStatsPeriod.start;\n    end = parsedStatsPeriod.end;\n  }\n\n  const releaseCreated = moment(release.dateCreated).startOf('minute');\n  if (\n    releaseCreated.isBetween(start, end) ||\n    (isDefaultPeriod && releaseBounds.type === 'normal')\n  ) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.created,\n        releaseCreated.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  if (!isSingleEnv || !isMobileRelease(project.platform)) {\n    // for now want to show marklines only on mobile platforms with single environment selected\n    return markLines;\n  }\n\n  const releaseAdopted = adoptionStages?.adopted && moment(adoptionStages.adopted);\n  if (releaseAdopted && releaseAdopted.isBetween(start, end)) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.adopted,\n        releaseAdopted.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  const releaseReplaced = adoptionStages?.unadopted && moment(adoptionStages.unadopted);\n  if (releaseReplaced && releaseReplaced.isBetween(start, end)) {\n    markLines.push(\n      generateReleaseMarkLine(\n        releaseMarkLinesLabels.unadopted,\n        releaseReplaced.valueOf(),\n        theme,\n        options\n      )\n    );\n  }\n\n  return markLines;\n}\n","var baseSum = require('./_baseSum');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nmodule.exports = baseMean;\n","/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseSum;\n","var baseMean = require('./_baseMean'),\n    identity = require('./identity');\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nmodule.exports = mean;\n"],"names":["ListLink","Component","_classNames","className","activeClassName","this","props","isActive","classNames","to","query","index","router","queryData","qs","undefined","target","pathname","render","children","disabled","carriedProps","omit","StyledLi","getClassName","onlyActiveOnIndex","withRouter","shouldForwardProp","prop","p","theme","storeConfig","state","orgSlug","repositories","repositoriesLoading","repositoriesError","init","resetRepositories","trigger","loadRepositories","loadRepositoriesError","err","loadRepositoriesSuccess","data","get","createStore","INITIAL_STATE","WrappedComponent","WithRepositories","constructor","context","super","RepositoryStore","onStoreUpdate","repoData","organization","slug","componentDidMount","fetchRepositories","componentWillUnmount","unsubscribe","api","params","path","requestPromise","method","then","res","catch","Sentry","scope","setLevel","setFingerprint","getRepositories","setState","getDisplayName","EmptyState","RepositorySwitcher","PureComponent","activeRepo","location","push","cursor","activeRepository","name","StyledCompactSelect","triggerLabel","triggerProps","prefix","t","value","options","map","repo","label","RepoLabel","onChange","opt","handleRepoFilterChange","CompactSelect","space","overflowEllipsis","WithReleaseRepos","releaseRepos","isLoading","fetchReleaseRepos","componentDidUpdate","prevProps","prevState","release","length","setActiveReleaseRepo","activeReleaseRepo","activeCommitRepo","matchedRepository","find","commitRepo","addErrorMessage","orgId","project","releasePath","encodeURIComponent","error","fullWidth","dashedBorder","icon","size","title","description","action","priority","projectSlug","ReleaseContext","withApi","withOrganization","withRepositories","getFilesByRepository","fileList","reduce","filesByRepository","file","filename","repoName","author","type","hasOwnProperty","authors","types","Set","email","add","getCommitsByRepository","commitList","commitsByRepository","commit","repositoryName","repository","getQuery","perPage","pick","Object","values","URL_PARAM","per_page","repo_name","getReposToRender","repos","releaseComparisonChartLabels","ReleaseComparisonChartType","releaseComparisonChartTitles","releaseComparisonChartHelp","commonTermsDescription","SessionTerm","generateReleaseMarkLine","position","hideLabel","axisIndex","seriesName","yAxisIndex","xAxisIndex","color","gray300","markLine","MarkLine","silent","lineStyle","formatter","font","fontSize","xAxis","releaseMarkLinesLabels","created","adopted","unadopted","generateReleaseMarkLines","markLines","adoptionStages","isSingleEnv","decodeList","environment","releaseBounds","getReleaseBounds","statsPeriod","releaseParamsRest","getReleaseParams","start","end","isDefaultPeriod","pageStart","pageEnd","pageStatsPeriod","parsedStatsPeriod","parseStatsPeriod","releaseCreated","moment","dateCreated","startOf","isBetween","valueOf","isMobileRelease","platform","releaseAdopted","releaseReplaced","baseSum","module","exports","array","iteratee","result","current","baseMean","identity"],"sourceRoot":""}