{"version":3,"file":"chunks/app_views_organizationGroupDetails_groupTagValues_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/dataExport.tsx","webpack:///./app/constants/ios-device-list.tsx","webpack:///./app/components/deviceName.tsx","webpack:///./app/views/organizationGroupDetails/groupTagValues.tsx"],"sourcesContent":["import {useCallback, useEffect, useRef, useState} from 'react';\nimport debounce from 'lodash/debounce';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Feature from 'sentry/components/acl/feature';\nimport Button from 'sentry/components/button';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\n// NOTE: Coordinate with other ExportQueryType (src/sentry/data_export/base.py)\nexport enum ExportQueryType {\n  IssuesByTag = 'Issues-by-Tag',\n  Discover = 'Discover',\n}\n\ninterface DataExportPayload {\n  queryInfo: any;\n  queryType: ExportQueryType; // TODO(ts): Formalize different possible payloads\n}\n\ninterface DataExportProps {\n  api: Client;\n  organization: Organization;\n  payload: DataExportPayload;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  icon?: React.ReactNode;\n}\n\nfunction DataExport({\n  api,\n  children,\n  disabled,\n  organization,\n  payload,\n  icon,\n}: DataExportProps): React.ReactElement {\n  const unmountedRef = useRef(false);\n  const [inProgress, setInProgress] = useState(false);\n\n  // We clear the indicator if export props change so that the user\n  // can fire another export without having to wait for the previous one to finish.\n  useEffect(() => {\n    if (inProgress) {\n      setInProgress(false);\n    }\n    // We are skipping the inProgress dependency because it would have fired on each handleDataExport\n    // call and would have immediately turned off the value giving users no feedback on their click action.\n    // An alternative way to handle this would have probably been to key the component by payload/queryType,\n    // but that seems like it can be a complex object so tracking changes could result in very brittle behavior.\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [payload.queryType, payload.queryInfo]);\n\n  // Tracking unmounting of the component to prevent setState call on unmounted component\n  useEffect(() => {\n    return () => {\n      unmountedRef.current = true;\n    };\n  }, []);\n\n  const handleDataExport = useCallback(() => {\n    setInProgress(true);\n\n    // This is a fire and forget request.\n    api\n      .requestPromise(`/organizations/${organization.slug}/data-export/`, {\n        includeAllArgs: true,\n        method: 'POST',\n        data: {\n          query_type: payload.queryType,\n          query_info: payload.queryInfo,\n        },\n      })\n      .then(([_data, _, response]) => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n\n        addSuccessMessage(\n          response?.status === 201\n            ? t(\n                \"Sit tight. We'll shoot you an email when your data is ready for download.\"\n              )\n            : t(\"It looks like we're already working on it. Sit tight, we'll email you.\")\n        );\n      })\n      .catch(err => {\n        // If component has unmounted, don't do anything\n        if (unmountedRef.current) {\n          return;\n        }\n        const message =\n          err?.responseJSON?.detail ??\n          \"We tried our hardest, but we couldn't export your data. Give it another go.\";\n\n        addErrorMessage(t(message));\n        setInProgress(false);\n      });\n  }, [payload.queryInfo, payload.queryType, organization.slug, api]);\n\n  return (\n    <Feature features={['organizations:discover-query']}>\n      {inProgress ? (\n        <Button\n          size=\"sm\"\n          priority=\"default\"\n          title=\"You can get on with your life. We'll email you when your data's ready.\"\n          disabled\n          icon={icon}\n        >\n          {t(\"We're working on it...\")}\n        </Button>\n      ) : (\n        <Button\n          onClick={debounce(handleDataExport, 500)}\n          disabled={disabled || false}\n          size=\"sm\"\n          priority=\"default\"\n          title=\"Put your data to work. Start your export and we'll email you when it's finished.\"\n          icon={icon}\n        >\n          {children ? children : t('Export All to CSV')}\n        </Button>\n      )}\n    </Feature>\n  );\n}\n\nexport {DataExport};\nexport default withApi(withOrganization(DataExport));\n","// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.\n// generated using scripts/extract-ios-device-names.ts as part of build step.\n// the purpose of the script is to extract only the iOS information that Sentry cares about\n// and discard the rest of the JSON so we do not end up bloating bundle size.\n\nconst iOSDeviceMapping: Record<string, string> = {\n  'iPod1,1': 'iPod touch',\n  'iPod2,1': 'iPod touch (2nd generation)',\n  'iPod3,1': 'iPod touch (3rd generation)',\n  'iPod4,1': 'iPod touch (4th generation)',\n  'iPod5,1': 'iPod touch (5th generation)',\n  'iPod7,1': 'iPod touch (6th generation)',\n  'iPod9,1': 'iPod touch (7th generation)',\n  'iPhone1,1': 'iPhone',\n  'iPhone1,2': 'iPhone 3G',\n  'iPhone2,1': 'iPhone 3GS',\n  'iPhone3,1': 'iPhone 4',\n  'iPhone3,2': 'iPhone 4',\n  'iPhone3,3': 'iPhone 4',\n  'iPhone4,1': 'iPhone 4S',\n  'iPhone5,1': 'iPhone 5',\n  'iPhone5,2': 'iPhone 5',\n  'iPhone5,3': 'iPhone 5c',\n  'iPhone5,4': 'iPhone 5c',\n  'iPhone6,1': 'iPhone 5s',\n  'iPhone6,2': 'iPhone 5s',\n  'iPhone8,4': 'iPhone SE (1st generation)',\n  'iPhone7,2': 'iPhone 6',\n  'iPhone7,1': 'iPhone 6 Plus',\n  'iPhone8,1': 'iPhone 6s',\n  'iPhone8,2': 'iPhone 6s Plus',\n  'iPhone9,1': 'iPhone 7',\n  'iPhone9,3': 'iPhone 7',\n  'iPhone9,2': 'iPhone 7 Plus',\n  'iPhone9,4': 'iPhone 7 Plus',\n  'iPhone10,1': 'iPhone 8',\n  'iPhone10,4': 'iPhone 8',\n  'iPhone10,2': 'iPhone 8 Plus',\n  'iPhone10,5': 'iPhone 8 Plus',\n  'iPhone10,3': 'iPhone X',\n  'iPhone10,6': 'iPhone X',\n  'iPhone11,8': 'iPhone XR',\n  'iPhone11,2': 'iPhone XS',\n  'iPhone11,4': 'iPhone XS Max',\n  'iPhone11,6': 'iPhone XS Max',\n  'iPhone12,1': 'iPhone 11',\n  'iPhone12,3': 'iPhone 11 Pro',\n  'iPhone12,5': 'iPhone 11 Pro Max',\n  'iPhone12,8': 'iPhone SE (2nd generation)',\n  'iPhone13,1': 'iPhone 12 mini',\n  'iPhone13,2': 'iPhone 12',\n  'iPhone13,3': 'iPhone 12 Pro',\n  'iPhone13,4': 'iPhone 12 Pro Max',\n  'iPad6,7': 'iPad Pro (12.9-inch)',\n  'iPad6,8': 'iPad Pro (12.9-inch)',\n  'iPad6,3': 'iPad Pro (9.7-inch)',\n  'iPad6,4': 'iPad Pro (9.7-inch)',\n  'iPad7,1': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,2': 'iPad Pro (12.9-inch, 2nd generation)',\n  'iPad7,3': 'iPad Pro (10.5-inch)',\n  'iPad7,4': 'iPad Pro (10.5-inch)',\n  'iPad8,1': 'iPad Pro (11-inch)',\n  'iPad8,2': 'iPad Pro (11-inch)',\n  'iPad8,3': 'iPad Pro (11-inch)',\n  'iPad8,4': 'iPad Pro (11-inch)',\n  'iPad8,5': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,6': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,7': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,8': 'iPad Pro (12.9-inch) (3rd generation)',\n  'iPad8,9': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,10': 'iPad Pro (11-inch) (2nd generation)',\n  'iPad8,11': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad8,12': 'iPad Pro (12.9-inch) (4th generation)',\n  'iPad2,5': 'iPad mini',\n  'iPad2,6': 'iPad mini',\n  'iPad2,7': 'iPad mini',\n  'iPad4,4': 'iPad mini 2',\n  'iPad4,5': 'iPad mini 2',\n  'iPad4,6': 'iPad mini 2',\n  'iPad4,7': 'iPad mini 3',\n  'iPad4,8': 'iPad mini 3',\n  'iPad4,9': 'iPad mini 3',\n  'iPad5,1': 'iPad mini 4',\n  'iPad5,2': 'iPad mini 4',\n  'iPad11,1': 'iPad mini (5th generation)',\n  'iPad11,2': 'iPad mini (5th generation)',\n  'iPad4,1': 'iPad Air',\n  'iPad4,2': 'iPad Air',\n  'iPad4,3': 'iPad Air',\n  'iPad5,3': 'iPad Air 2',\n  'iPad5,4': 'iPad Air 2',\n  'iPad11,3': 'iPad Air (3rd generation)',\n  'iPad11,4': 'iPad Air (3rd generation)',\n  'iPad13,1': 'iPad Air (4th generation)',\n  'iPad13,2': 'iPad Air (4th generation)',\n  'iPad1,1': 'iPad',\n  'iPad2,1': 'iPad 2',\n  'iPad2,2': 'iPad 2',\n  'iPad2,3': 'iPad 2',\n  'iPad2,4': 'iPad 2',\n  'iPad3,1': 'iPad (3rd generation)',\n  'iPad3,2': 'iPad (3rd generation)',\n  'iPad3,3': 'iPad (3rd generation)',\n  'iPad3,4': 'iPad (4th generation)',\n  'iPad3,5': 'iPad (4th generation)',\n  'iPad3,6': 'iPad (4th generation)',\n  'iPad6,11': 'iPad (5th generation)',\n  'iPad6,12': 'iPad (5th generation)',\n  'iPad7,5': 'iPad (6th generation)',\n  'iPad7,6': 'iPad (6th generation)',\n  'iPad7,11': 'iPad (7th generation)',\n  'iPad7,12': 'iPad (7th generation)',\n  'iPad11,6': 'iPad (8th generation)',\n  'iPad11,7': 'iPad (8th generation)',\n  'AudioAccessory1,1': 'HomePod',\n  'AudioAccessory1,2': 'HomePod',\n  'AudioAccessory5,1': 'HomePod mini',\n  'Watch1,1': 'Apple Watch (1st generation)',\n  'Watch1,2': 'Apple Watch (1st generation)',\n  'Watch2,6': 'Apple Watch Series 1',\n  'Watch2,7': 'Apple Watch Series 1',\n  'Watch2,3': 'Apple Watch Series 2',\n  'Watch2,4': 'Apple Watch Series 2',\n  'Watch3,1': 'Apple Watch Series 3',\n  'Watch3,2': 'Apple Watch Series 3',\n  'Watch3,3': 'Apple Watch Series 3',\n  'Watch3,4': 'Apple Watch Series 3',\n  'Watch4,1': 'Apple Watch Series 4',\n  'Watch4,2': 'Apple Watch Series 4',\n  'Watch4,3': 'Apple Watch Series 4',\n  'Watch4,4': 'Apple Watch Series 4',\n  'Watch5,1': 'Apple Watch Series 5',\n  'Watch5,2': 'Apple Watch Series 5',\n  'Watch5,3': 'Apple Watch Series 5',\n  'Watch5,4': 'Apple Watch Series 5',\n  'Watch5,9': 'Apple Watch SE',\n  'Watch5,10': 'Apple Watch SE',\n  'Watch5,11': 'Apple Watch SE',\n  'Watch5,12': 'Apple Watch SE',\n  'Watch6,1': 'Apple Watch Series 6',\n  'Watch6,2': 'Apple Watch Series 6',\n  'Watch6,3': 'Apple Watch Series 6',\n  'Watch6,4': 'Apple Watch Series 6',\n  'AppleTV1,1': 'Apple TV (1st generation)',\n  'AppleTV2,1': 'Apple TV (2nd generation)',\n  'AppleTV3,1': 'Apple TV (3rd generation)',\n  'AppleTV3,2': 'Apple TV (3rd generation)',\n  'AppleTV5,3': 'Apple TV (4th generation)',\n  'AppleTV6,2': 'Apple TV 4K',\n  'AirPods1,1': 'AirPods (1st generation)',\n  'AirPods2,1': 'AirPods (2nd generation)',\n  'iProd8,1': 'AirPods Pro',\n};\n\nexport {iOSDeviceMapping};\n","import {useMemo} from 'react';\n\nimport {iOSDeviceMapping} from 'sentry/constants/ios-device-list';\n\nexport function deviceNameMapper(model: string | undefined): string | null {\n  // If we have no model, render nothing\n  if (typeof model !== 'string') {\n    return null;\n  }\n\n  // If module has not loaded yet, render the unparsed model\n  if (module === null) {\n    return model;\n  }\n\n  const [identifier, ...rest] = model.split(' ');\n\n  const modelName = iOSDeviceMapping[identifier];\n  return modelName === undefined ? model : `${modelName} ${rest.join(' ')}`;\n}\n\ninterface DeviceNameProps {\n  value: string;\n  children?: (name: string) => React.ReactNode;\n}\n\n/**\n * This is used to map iOS Device Names to model name.\n * This asynchronously loads the ios-device-list library because of its size\n */\nfunction DeviceName({value, children}: DeviceNameProps): React.ReactElement | null {\n  const deviceName = useMemo(() => deviceNameMapper(value), [value]);\n\n  return deviceName ? (\n    <span data-test-id=\"loaded-device-name\">\n      {children ? children(deviceName) : deviceName}\n    </span>\n  ) : null;\n}\n\nexport {DeviceName};\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport Feature from 'sentry/components/acl/feature';\nimport AsyncComponent from 'sentry/components/asyncComponent';\nimport Button from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport DataExport, {ExportQueryType} from 'sentry/components/dataExport';\nimport {DeviceName} from 'sentry/components/deviceName';\nimport DropdownLink from 'sentry/components/dropdownLink';\nimport GlobalSelectionLink from 'sentry/components/globalSelectionLink';\nimport UserBadge from 'sentry/components/idBadge/userBadge';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link from 'sentry/components/links/link';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconArrow, IconEllipsis, IconMail, IconOpen} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Group, Project, SavedQueryVersions, Tag, TagValue} from 'sentry/types';\nimport {isUrl, percent} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\n\ntype RouteParams = {\n  groupId: string;\n  orgId: string;\n  tagKey?: string;\n};\n\ntype Props = {\n  baseUrl: string;\n  group: Group;\n  environments?: string[];\n  project?: Project;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  tag: Tag | null;\n  tagValueList: TagValue[] | null;\n  tagValueListPageLinks: string;\n};\n\nconst DEFAULT_SORT = 'count';\n\nclass GroupTagValues extends AsyncComponent<\n  Props & AsyncComponent['props'],\n  State & AsyncComponent['state']\n> {\n  getEndpoints(): ReturnType<AsyncComponent['getEndpoints']> {\n    const {environments: environment} = this.props;\n    const {groupId, tagKey} = this.props.params;\n    return [\n      ['tag', `/issues/${groupId}/tags/${tagKey}/`],\n      [\n        'tagValueList',\n        `/issues/${groupId}/tags/${tagKey}/values/`,\n        {query: {environment, sort: this.getSort()}},\n      ],\n    ];\n  }\n\n  getSort(): string {\n    return this.props.location.query.sort || DEFAULT_SORT;\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderResults() {\n    const {\n      baseUrl,\n      project,\n      environments: environment,\n      params: {orgId, groupId, tagKey},\n    } = this.props;\n    const {tagValueList, tag} = this.state;\n    const discoverFields = [\n      'title',\n      'release',\n      'environment',\n      'user.display',\n      'timestamp',\n    ];\n\n    return tagValueList?.map((tagValue, tagValueIdx) => {\n      const pct = tag?.totalValues\n        ? `${percent(tagValue.count, tag?.totalValues).toFixed(2)}%`\n        : '--';\n      const key = tagValue.key ?? tagKey;\n      const issuesQuery = tagValue.query || `${key}:\"${tagValue.value}\"`;\n      const discoverView = EventView.fromSavedQuery({\n        id: undefined,\n        name: key ?? '',\n        fields: [\n          ...(key !== undefined ? [key] : []),\n          ...discoverFields.filter(field => field !== key),\n        ],\n        orderby: '-timestamp',\n        query: `issue.id:${groupId} ${issuesQuery}`,\n        projects: [Number(project?.id)],\n        environment,\n        version: 2 as SavedQueryVersions,\n        range: '90d',\n      });\n      const issuesPath = `/organizations/${orgId}/issues/`;\n\n      return (\n        <Fragment key={tagValueIdx}>\n          <NameColumn>\n            <NameWrapper data-test-id=\"group-tag-value\">\n              <GlobalSelectionLink\n                to={{\n                  pathname: `${baseUrl}events/`,\n                  query: {query: issuesQuery},\n                }}\n              >\n                {key === 'user' ? (\n                  <UserBadge\n                    user={{...tagValue, id: tagValue.identifier ?? ''}}\n                    avatarSize={20}\n                    hideEmail\n                  />\n                ) : (\n                  <DeviceName value={tagValue.name} />\n                )}\n              </GlobalSelectionLink>\n            </NameWrapper>\n\n            {tagValue.email && (\n              <StyledExternalLink\n                href={`mailto:${tagValue.email}`}\n                data-test-id=\"group-tag-mail\"\n              >\n                <IconMail size=\"xs\" color=\"gray300\" />\n              </StyledExternalLink>\n            )}\n            {isUrl(tagValue.value) && (\n              <StyledExternalLink href={tagValue.value} data-test-id=\"group-tag-url\">\n                <IconOpen size=\"xs\" color=\"gray300\" />\n              </StyledExternalLink>\n            )}\n          </NameColumn>\n          <RightAlignColumn>{pct}</RightAlignColumn>\n          <RightAlignColumn>{tagValue.count.toLocaleString()}</RightAlignColumn>\n          <RightAlignColumn>\n            <TimeSince date={tagValue.lastSeen} />\n          </RightAlignColumn>\n          <RightAlignColumn>\n            <DropdownLink\n              anchorRight\n              alwaysRenderMenu={false}\n              caret={false}\n              title={\n                <Button\n                  tooltipProps={{\n                    containerDisplayMode: 'flex',\n                  }}\n                  size=\"sm\"\n                  type=\"button\"\n                  aria-label={t('Show more')}\n                  icon={<IconEllipsis size=\"xs\" />}\n                />\n              }\n            >\n              <Feature features={['organizations:discover-basic']}>\n                <li>\n                  <Link to={discoverView.getResultsViewUrlTarget(orgId)}>\n                    {t('Open in Discover')}\n                  </Link>\n                </li>\n              </Feature>\n              <li>\n                <GlobalSelectionLink\n                  to={{pathname: issuesPath, query: {query: issuesQuery}}}\n                >\n                  {t('Search All Issues with Tag Value')}\n                </GlobalSelectionLink>\n              </li>\n            </DropdownLink>\n          </RightAlignColumn>\n        </Fragment>\n      );\n    });\n  }\n\n  renderBody() {\n    const {\n      group,\n      params: {orgId, tagKey},\n      location: {query},\n      environments,\n    } = this.props;\n    const {tagValueList, tag, tagValueListPageLinks, loading} = this.state;\n    const {cursor: _cursor, page: _page, ...currentQuery} = query;\n\n    const title = tagKey === 'user' ? t('Affected Users') : tagKey;\n\n    const sort = this.getSort();\n    const sortArrow = <IconArrow color=\"gray300\" size=\"xs\" direction=\"down\" />;\n    const lastSeenColumnHeader = (\n      <StyledSortLink\n        to={{\n          pathname: location.pathname,\n          query: {\n            ...currentQuery,\n            sort: 'date',\n          },\n        }}\n      >\n        {t('Last Seen')} {sort === 'date' && sortArrow}\n      </StyledSortLink>\n    );\n    const countColumnHeader = (\n      <StyledSortLink\n        to={{\n          pathname: location.pathname,\n          query: {\n            ...currentQuery,\n            sort: 'count',\n          },\n        }}\n      >\n        {t('Count')} {sort === 'count' && sortArrow}\n      </StyledSortLink>\n    );\n\n    return (\n      <Layout.Body>\n        <Layout.Main fullWidth>\n          <TitleWrapper>\n            <Title>{t('Tag Details')}</Title>\n            <ButtonBar gap={1}>\n              <Button\n                size=\"sm\"\n                priority=\"default\"\n                href={`/${orgId}/${group.project.slug}/issues/${group.id}/tags/${tagKey}/export/`}\n              >\n                {t('Export Page to CSV')}\n              </Button>\n              <DataExport\n                payload={{\n                  queryType: ExportQueryType.IssuesByTag,\n                  queryInfo: {\n                    project: group.project.id,\n                    group: group.id,\n                    key: tagKey,\n                  },\n                }}\n              />\n            </ButtonBar>\n          </TitleWrapper>\n          <StyledPanelTable\n            isLoading={loading}\n            isEmpty={tagValueList?.length === 0}\n            headers={[\n              title,\n              <PercentColumnHeader key=\"percent\">{t('Percent')}</PercentColumnHeader>,\n              countColumnHeader,\n              lastSeenColumnHeader,\n              '',\n            ]}\n            emptyMessage={t('Sorry, the tags for this issue could not be found.')}\n            emptyAction={\n              environments?.length\n                ? t('No tags were found for the currently selected environments')\n                : null\n            }\n          >\n            {tagValueList && tag && this.renderResults()}\n          </StyledPanelTable>\n          <StyledPagination pageLinks={tagValueListPageLinks} />\n        </Layout.Main>\n      </Layout.Body>\n    );\n  }\n}\n\nexport default GroupTagValues;\n\nconst TitleWrapper = styled('div')`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: space-between;\n  margin-bottom: ${space(2)};\n`;\n\nconst Title = styled('h3')`\n  margin: 0;\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  white-space: nowrap;\n  font-size: ${p => p.theme.fontSizeMedium};\n\n  overflow: auto;\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    overflow: initial;\n  }\n\n  & > * {\n    padding: ${space(1)} ${space(2)};\n  }\n`;\n\nconst PercentColumnHeader = styled('div')`\n  text-align: right;\n`;\n\nconst StyledSortLink = styled(Link)`\n  text-align: right;\n  color: inherit;\n\n  :hover {\n    color: inherit;\n  }\n`;\n\nconst StyledExternalLink = styled(ExternalLink)`\n  margin-left: ${space(0.5)};\n`;\n\nconst Column = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst NameColumn = styled(Column)`\n  ${p => p.theme.overflowEllipsis};\n  display: flex;\n  min-width: 320px;\n`;\n\nconst NameWrapper = styled('span')`\n  ${p => p.theme.overflowEllipsis};\n  width: auto;\n`;\n\nconst RightAlignColumn = styled(Column)`\n  justify-content: flex-end;\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin: 0;\n`;\n"],"names":["ExportQueryType","DataExport","api","children","disabled","organization","payload","icon","unmountedRef","useRef","inProgress","setInProgress","useState","useEffect","queryType","queryInfo","current","handleDataExport","useCallback","requestPromise","slug","includeAllArgs","method","data","query_type","query_info","then","_data","_","response","addSuccessMessage","status","t","catch","err","message","responseJSON","detail","addErrorMessage","features","size","priority","title","onClick","debounce","withApi","withOrganization","iOSDeviceMapping","deviceNameMapper","model","module","identifier","rest","split","modelName","undefined","join","DeviceName","value","deviceName","useMemo","GroupTagValues","AsyncComponent","getEndpoints","environments","environment","this","props","groupId","tagKey","params","query","sort","getSort","location","renderLoading","renderBody","renderResults","baseUrl","project","orgId","tagValueList","tag","state","discoverFields","map","tagValue","tagValueIdx","pct","totalValues","percent","count","toFixed","key","issuesQuery","discoverView","EventView","id","name","fields","filter","field","orderby","projects","Number","version","range","issuesPath","Fragment","NameColumn","NameWrapper","to","pathname","user","avatarSize","hideEmail","email","StyledExternalLink","href","color","isUrl","RightAlignColumn","toLocaleString","date","lastSeen","anchorRight","alwaysRenderMenu","caret","tooltipProps","containerDisplayMode","type","getResultsViewUrlTarget","group","tagValueListPageLinks","loading","cursor","_cursor","page","_page","currentQuery","sortArrow","direction","lastSeenColumnHeader","StyledSortLink","countColumnHeader","fullWidth","TitleWrapper","Title","gap","StyledPanelTable","isLoading","isEmpty","length","headers","PercentColumnHeader","emptyMessage","emptyAction","StyledPagination","pageLinks","space","PanelTable","p","theme","fontSizeMedium","breakpoints","small","Link","ExternalLink","Column","overflowEllipsis","Pagination"],"sourceRoot":""}