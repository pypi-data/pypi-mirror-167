{"version":3,"file":"chunks/app_components_events_interfaces_utils_tsx-app_components_modals_helpSearchModal_tsx-app_comp-d69899.xxxxxxxxxxxxxxxxxxxx.js","mappings":"s4BAcO,SAASA,EAAaC,GAC3B,OAAOA,EAAEC,QAAQ,MAAO,QAAQA,QAAQ,KAAM,MAC/C,CAGM,SAASC,EAAeC,GAA4B,UACzD,IAAIC,EAAS,QAETC,EAAAA,EAAAA,IAAQF,EAAKG,SAA2B,QAAhBH,EAAKG,SAC/BF,GAAU,YAAcD,EAAKG,SAIf,UAAGH,EAAKI,eAAR,aAAG,EAAcC,MAC/BC,GAAc,oBAATA,EAAE,KAAsD,IAA1BA,EAAE,GAAGC,QAAQ,aAGhDN,GAAU,sBAIZ,MAAMG,EAAO,oBACXJ,EAAKI,eADM,aACX,EAAcI,MAAK,SAAUC,EAAGC,GAC9B,OAAOD,EAAE,KAAOC,EAAE,GAAK,EAAID,EAAE,GAAKC,EAAE,IAAM,EAAI,CAC/C,WAHU,QAGL,GAER,IAAK,MAAMC,KAAUP,EACnBH,GAAU,aAAeU,EAAO,GAAK,KAAOf,EAAae,EAAO,GAAK,IAAM,IAG7E,IAAIT,EAAAA,EAAAA,IAAQF,EAAKA,MACf,OAAQA,EAAKY,qBACX,IAAK,mBACHX,GAAU,iBAAmBL,EAAaiB,KAAKC,UAAUd,EAAKA,OAAS,IACvE,MACF,IAAK,oCACHC,GACE,iBACAL,EAAamB,EAAAA,UAAaf,EAAKA,OAC/B,IACF,MAEF,QACMgB,IAAShB,EAAKA,MAChBC,GAAU,iBAAmBL,EAAaI,EAAKA,MAAQ,IACZ,IAAlCiB,OAAOC,KAAKlB,EAAKA,MAAMmB,QAGhCC,EAAAA,IAAiBC,IACfA,EAAMC,SAAS,OAAQtB,GACvBoB,EAAAA,GAAwB,IAAIG,MAAM,sBAAlC,IAOV,OADAtB,GAAU,UAAYuB,EAAWxB,GAAQ,IAClCC,CACR,CAuBM,SAASuB,EAAWxB,GAAgD,MACzE,IAAIyB,EAAUzB,aAAH,EAAGA,EAAM0B,IACpB,OAAKD,GAIDzB,SAAJ,UAAIA,EAAM2B,aAAV,OAAI,EAAaR,SACfM,GAAW,IA5BR,SAA4BE,GACjC,GAAIX,IAASW,GACX,OAAOA,EAGT,MAAMC,EAAqC,CAAC,EAC5C,IAAK,MAAMC,KAAMF,EACf,GAAW,OAAPE,GAA6B,IAAdA,EAAGV,OAAc,CAClC,MAAOW,EAAKC,GAASF,EACP,OAAVE,IACEC,MAAMC,QAAQL,EAASE,IACzBF,EAASE,GAAKI,KAAKH,GAEnBH,EAASE,GAAO,CAACC,GAGtB,CAEH,OAAOhB,EAAAA,UAAaa,EACrB,CASoBO,CAAmBnC,EAAK2B,QAGvC3B,EAAKoC,WACPX,GAAW,IAAMzB,EAAKoC,UAGjBX,GAXEA,CAYV,CAiCM,SAASY,EAAyDC,GACvE,MAAMC,EAAmC,CAAC,EAC1C,IAAK,MAAMT,KAAOb,OAAOuB,oBAAoBF,GACvCA,EAAQR,KAASW,EAAAA,KACnBF,EAAYT,GAAOQ,EAAQR,IAG/B,OAAOS,CACR,CAEM,SAASG,EAAcC,EAAiBC,GAC7C,MAAQ,KAAID,EAAQE,SAAS,IAAIC,SAASF,QAAAA,EAAsB,EAAG,MACpE,CAEM,SAASG,EAAaJ,GAC3B,IAAKA,EACH,OAAO,EAGT,IACE,OAAOK,SAASL,EAAS,KAAO,CAGjC,CAFC,MAAOM,GACP,OAAO,CACR,CACF,CAEM,SAASC,EAAcC,GAI5B,MAAMC,EAAeL,EAAaI,aAAD,EAACA,EAAOE,YAMzC,MAAO,CAACD,EAFWA,IAAgBD,aAAA,EAAAA,EAAOG,aAAc,GAGzD,CAEM,SAASC,EAAcC,GAC5B,IAAIC,EACAC,EACAC,EACAC,EAEJ,MAAMC,EAASL,EAAWA,EAASM,MAAM,KAAO,GAShD,OAPsB,IAAlBD,EAAO1C,SACTsC,EAAOI,EAAO,GACdH,EAAUG,EAAO,GAAGC,MAAM,YAAY,GACtCH,EAAUE,EAAO,GAAGC,MAAM,YAAY,GACtCF,EAAiBC,EAAO,GAAGC,MAAM,mBAAmB,IAG/C,CAACL,OAAMC,UAASC,UAASC,iBACjC,CAEM,SAASG,EAAuBC,EAAwBC,GAC7D,MAAMC,EAAiBC,IACrBC,IAAQH,EAAOI,KAAIC,IAAK,aAAIC,EAAAA,EAAAA,GAAgB,UAACD,EAAME,gBAAP,QAAmB,GAAvC,MAG1B,GAA8B,IAA1BN,EAAe/C,OAAc,CAC/B,MAAMsD,GAAcC,EAAAA,EAAAA,GAAwBR,EAAe,IAE3D,OAAOO,QAAAA,EAAeT,CACvB,CAED,OAAOA,CACR,CAEM,SAASW,IACd,MAAMC,EAAOC,EAAAA,EAAAA,IAAgB,QAG7B,IAAKD,EACH,OAAO,EAGT,OAAQA,EAAKE,QAAQC,iBACnB,KAAK,EAKL,QACE,OAAO,EAJT,KAAK,EACH,OAAO,EAKZ,C,6XCpMD,SAASC,EAAT,GAA8D,IAA5B,KAACvB,KAASwB,GAAkB,EAC5D,MAAMC,UAAsBC,EAAAA,UAA4B,uDAG9C,CACNC,MAAOC,EAAAA,EAAAA,IAAc5B,GAAMY,KAAIiB,GAAMA,EAAGL,QAJY,0BAoBxCI,EAAAA,EAAAA,QACZ,CAACE,EAAoBH,IAA2BI,KAAKC,YAAYF,EAAUH,SAC3EM,GAtBoD,CAOtDC,uBACEH,KAAKI,aACN,CAEDH,YAAYF,EAAoBH,GAE1BG,IAAa9B,GAIjB+B,KAAKK,SAAS,CAACT,MAAOA,EAAMf,KAAIiB,GAAMA,EAAGL,MAC1C,CAODa,SACE,MAAM,SAACC,GAAYd,EAEnB,OAAKO,KAAKQ,MAAMZ,OAAUI,KAAKQ,MAAMZ,MAAMjE,OAInB,mBAAb4E,EACFA,EAAS,CAACX,MAAOI,KAAKQ,MAAMZ,QAG9BI,KAAKQ,MAAMZ,MAPT,IAQV,EAGH,OAxCMF,EADsD,oCACtDA,EADsD,cAEpC,QAAOzB,OAuCxB,QAACyB,EAAD,GACR,CA1CQF,EAAAA,YAAAA,OA4CT,S,w4BC1De,SAASiB,EAAT,GAA8D,IAAtC,IAACnE,EAAD,WAAMoE,EAAN,SAAkBC,GAAoB,EAC3E,MAAM,gBAACC,EAAD,iBAAkBC,GAAoBF,EAEtCG,EAA8B,GACpC,IAAIvE,EAAQmE,EAGZ,OAAa,CACX,MAAMK,EAAYxE,EAAMxB,QAAQ6F,GAC1BI,EAAeD,EAAYH,EAAgBjF,OACjD,IAAmB,IAAfoF,IAAyD,IAArCxE,EAAMxB,QAAQ8F,GACpC,MAEFtE,EAAQA,EAAM0E,MAAM,EAAGF,GAAaxE,EAAM0E,MAAMD,GAEhD,MAAME,EAAa3E,EAAMxB,QAAQ8F,GAC3BM,EAAgBD,EAAaL,EAAiBlF,OACpDY,EAAQA,EAAM0E,MAAM,EAAGC,GAAc3E,EAAM0E,MAAME,GAEjDL,EAAQpE,KAAK,CAACqE,EAAWG,EAAa,GACvC,CAED,MAAO,CAAC5E,MAAKC,QAAOuE,UACrB,C,6CCLD,MAAMM,EAAY,CAChBR,gBAAiB,SACjBC,iBAAkB,WAGpB,MAAMQ,UAAmB1B,EAAAA,UAAwB,uDAChC,CACb2B,SAAS,EACTC,QAAS,MAHoC,qBAkBtC,IAAIC,EAAAA,mBAAmB,CAAC,OAAQ,cAAe,UAAW,WAlBpB,uBAgCpCC,IAASzB,KAAK0B,gBAAiB,KAhCK,CAM/CC,yBAC2BzB,IAArBF,KAAKP,MAAMtD,OACb6D,KAAK4B,SAAS5B,KAAKP,MAAMtD,MAE5B,CAED0F,mBAAmBC,GACbA,EAAU3F,QAAU6D,KAAKP,MAAMtD,OACjC6D,KAAK4B,SAASE,EAAU3F,MAE3B,CAIoB,sBAACA,GACpB6D,KAAKK,SAAS,CAACiB,SAAS,IACxB,MAAM,UAACS,EAAY,IAAM/B,KAAKP,MAKxB8B,EAeV,SAA0BA,GACxB,MAAMS,EAAkB,GAiDxB,OA/CAT,EAAQU,SAAQC,IACd,MAAMC,EAAeD,EAAQE,KAAKvD,KAAIwD,IAAO,UAC3C,MAAMC,EAAQ7B,EAAe,CAC3BnE,IAAK,QACLoE,WAAU,UAAE2B,EAAIC,aAAN,QAAe,GACzB3B,SAAUS,IAENmB,EAAc9B,EAAe,CACjCnE,IAAK,cACLoE,WAAU,UAAE2B,EAAIG,YAAN,QAAc,GACxB7B,SAAUS,IAaZ,MAAO,CAACqB,KAViB,IACpBJ,EACHK,WAAY,OACZC,WAAa,QAAON,EAAIO,OACxBN,MAAOO,IAAAA,SAAA,UAAmBR,EAAIC,aAAvB,QAAgC,IACvCQ,MAAOT,EAAIU,QAAQC,SACnBT,YAAaF,EAAIG,KAAOK,IAAAA,SAAmBR,EAAIG,WAAQtC,EACvD+C,GAAIZ,EAAInG,KAGIgH,QAAS,CAACZ,EAAOC,GAAcY,MAAO,EAAGC,SAAU,EAAjE,IAIF,GAAIjB,EAAaxG,OAAS,EAKxB,OAJAwG,EAAa,GAAGM,KAAKY,eAAiBnB,EAAQjE,KAC9CkE,EAAa,GAAGM,KAAKa,aAAenB,EAAaxG,YAEjDqG,EAAMtF,QAAQyF,GAKhB,MAAMoB,EAA8B,CAClCb,WAAY,OACZC,WAAa,QAAOT,EAAQU,OAC5BN,MAAQ,iBAAgBJ,EAAQjE,OAChCoF,eAAgBnB,EAAQjE,KACxBuF,OAAO,GAGTxB,EAAMtF,KAAK,CAAC+F,KAAMc,EAAiBJ,MAAO,EAAGC,SAAU,GAAvD,IAGKpB,CACR,CAlEmByB,OAHYzD,KAAK0D,OAAOvH,MAAMA,EAAO,CACnD4F,UAAWA,EAAUlD,KAAIL,IAAQ,wBAAImF,EAAAA,EAAAA,iBAAgBnF,UAApB,aAAI,EAA2BoF,IAA/B,OAInC5D,KAAKK,SAAS,CAACiB,SAAS,EAAOC,WAChC,CAIDjB,SACE,OAAON,KAAKP,MAAMc,SAAS,CACzBsD,UAAW7D,KAAKQ,MAAMc,QACtBC,QAASvB,KAAKQ,MAAMe,SAEvB,EAvCGF,EAAAA,YAAAA,aAgGN,SAAeyC,EAAAA,EAAAA,IAAkBC,EAAAA,EAAAA,YAAW1C,I,uLC/H5C,MAAM2C,EAA6B,IAA6C,UAA5C,KAACvB,EAAD,QAAOS,EAAP,UAAgBe,EAAhB,YAA2BC,GAAiB,EAC9E,MAAMb,OACoBnD,IAAxBuC,EAAKY,gBACH,QAACc,EAAD,YACE,QAAC,KAAD,KACCC,EAAAA,EAAAA,GAAE,UAAW3B,EAAKY,iBACnB,QAACgB,EAAD,WAAQC,EAAAA,EAAAA,IAAG,YAAa,aAAd,UAA4B7B,EAAKa,oBAAjC,QAAiD,QAE3D,KAEN,OAAIb,EAAKe,OAEL,QAAC,EAAAe,SAAD,WACGlB,GACD,QAACmB,EAAD,WAAQJ,EAAAA,EAAAA,GAAE,qBAAsB3B,EAAKY,sBAMzC,QAAC,EAAAkB,SAAD,WACGlB,GACD,QAAC,IAAD,IAAyBY,EAAWC,YAAaA,EAAjD,UACE,QAAC,IAAD,CAAcA,YAAaA,EAAazB,KAAMA,EAAMS,QAASA,QAJnE,EAnBIc,EAAAA,YAAAA,eAmCN,MAAMS,EAAchF,IAClB,QAAC,IAAD,IACMA,EACJiF,QAAS,CAACrD,GACVsD,UAAW,EACXC,eAAe,EACfC,WAAYb,IANVS,EAAAA,YAAAA,aAUN,MAAMN,GAAiB,OAAO,MAAP,sBAAH,uEAGXW,EAAAA,EAAAA,GAAM,GAHK,mCAKJC,GAAKA,EAAEC,MAAMC,qBALT,aAMPH,EAAAA,EAAAA,GAAM,GANC,KAMKA,EAAAA,EAAAA,GAAM,GANX,gDASQC,GAAKA,EAAEC,MAAME,aATrB,MAadb,GAAQ,OAAO,MAAP,sBAAH,cACIU,GAAKA,EAAEC,MAAMG,eADjB,WAEAJ,GAAKA,EAAEC,MAAMI,SAFb,KAKLZ,GAAQ,OAAO,MAAP,sBAAH,4CAGEM,EAAAA,EAAAA,GAAM,GAHR,WAIAC,GAAKA,EAAEC,MAAMK,SAJb,eAKIN,GAAKA,EAAEC,MAAMM,gBALjB,0BAMeP,GAAKA,EAAEC,MAAME,aAN5B,KASX,I,6ECrEA,SAASK,EAAT,GAMU,IANe,KACvBC,EADuB,WAEvBC,EAFuB,aAGvBC,EAHuB,YAIvBC,GAAcvB,EAAAA,EAAAA,GAAE,oDACb3E,GACK,EACR,MAAMuF,GAAQY,EAAAA,EAAAA,KAEd,OACE,QAACJ,EAAD,WACE,QAAC,KAAD,UACG,QAAEK,IAAKC,GAAP,SACC,QAAC,EAAD,IACMrG,EACJsG,WAAW,eACXC,kBAAmBF,CAAY;;;;;;;wCAOHd,EAAMiB;gBAElCC,YAAa,QAAC,cAACC,GAAF,SACX,QAACC,EAAD,WACE,QAACC,EAAD,CAAOC,WAAS,KAAKH,EAAc,CAACI,KAAM,OAAQZ,mBAFzC,EAKba,cACE,QAAC,IAAD,CAAMvI,KAAK,oBAAyByH,eAAcD,gBAnBvD,KA0BR,CAtCQF,EAAAA,YAAAA,kBAwCT,MAAMa,GAAe,OAAO,MAAP,qBAAH,YACLtB,EAAAA,EAAAA,GAAM,KADD,KAIZuB,GAAQ,OAAO,QAAP,qBAAH,uBAEEvB,EAAAA,EAAAA,GAAM,GAFR,sEAYE2B,EAAW,CAAH,uDAMrB,GAAeC,EAAAA,EAAAA,GAAiBnB,E,qYCjEzB,SAASoB,IAQd,MAAO,CACLC,SAAU,GACVC,aAAc,GACdC,SAVe,CACfC,MAAO,KACPC,IAAK,KACLC,OAAQC,EAAAA,GACRC,IAAK,MAQR,CAOM,SAASC,EAA2BjL,GACzC,OAAOkL,IAAOC,IAAKnL,EAAOV,OAAO8L,OAAOC,EAAAA,KAAaC,IACtD,CAiBM,SAASC,EAAiBC,EAAwBC,GAA6B,YACpF,SACGC,IAAQF,EAAUf,SAAUgB,EAAMhB,YAClCiB,IAAQF,EAAUd,aAAce,EAAMf,gBAOvCc,EAAUb,SAASG,SAAWW,EAAMd,SAASG,SAC7C,UAAAU,EAAUb,SAASC,aAAnB,eAA0B1J,eAA1B,UAAyCuK,EAAMd,SAASC,aAAxD,aAAyC,EAAsB1J,cAC/D,UAAAsK,EAAUb,SAASE,WAAnB,eAAwB3J,eAAxB,UAAuCuK,EAAMd,SAASE,WAAtD,aAAuC,EAAoB3J,WAM9D,C,wGCnEM,MAAMyK,EAAQ,4BAqBrB,EAnBqC,CACnC,CAEExF,MAAO,uBACPyF,OAAQ,CACN,CACE9J,KAAM,QACNsI,KAAM,SAGNyB,MAAO,mBACPrC,YAAa,6BACbsC,KAAM,kDACNC,kBAAkB,K,63BCc1B,MAAMC,EAA6C,IAC9CC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,KACAC,EAAAA,GASL,GAFoCC,EAAAA,EAAAA,GAAuCd,E,0DCnDpE,SAASe,EAAeC,GAA8B,2BAAlBC,EAAkB,iCAAlBA,EAAkB,kBAC3D,MAAqB,mBAAPD,GAAqBA,KAAMC,EAC1C,C,6XCQD,SAASC,EAAYC,GACnB,OAAQA,EAAMC,eAAe,OAC9B,CAKM,SAASC,EACdC,GAEA,GAAIJ,EAAYI,GACd,OAAOA,EAAMC,SAAW,GAG1B,MAAM,SAACC,EAAD,KAAWpD,EAAX,QAAiBmD,GAAWD,EAElC,OAAQlD,GACN,KAAKqD,EAAAA,GAAAA,MACL,KAAKA,EAAAA,GAAAA,YACH,OAAOD,EAASpN,MAClB,KAAKqN,EAAAA,GAAAA,IACH,OAAOD,EAASE,QAClB,KAAKD,EAAAA,GAAAA,SACL,KAAKA,EAAAA,GAAAA,aACL,KAAKA,EAAAA,GAAAA,KACH,MAAO,GACT,QACE,OAAOF,GAAW,GAEvB,CAKM,SAASI,EAAYL,GAC1B,IAAIJ,EAAYI,GAIhB,OAAIA,EAAMlD,OAASqD,EAAAA,GAAAA,QAA0BG,EAAAA,EAAAA,GAAiBN,EAAMjL,WAC3DiL,EAAME,SAAS3K,eADxB,CAKD,CAEM,SAASgL,EAAwBC,GAItC,GAAoB,iBAATA,EACT,OAAOA,EAGT,MAAMjC,GAAQiC,aAAA,EAAAA,EAAMC,YAAYD,aAAlB,EAAkBA,EAAME,WAAWF,aAAnC,EAAmCA,EAAMG,YAAYH,aAArD,EAAqDA,EAAM1D,MACnE8D,EAAYJ,aAAH,EAAGA,EAAMI,UAExB,OAAIA,EACKrC,EAAS,GAAEqC,KAAarC,IAAUqC,EAGpCrC,GAAS,WACjB,CAED,SAASsC,EAA0BX,GACjC,MAAM,KAACpD,EAAD,mBAAOgE,EAAP,kBAA2BC,GAAqBb,EAEhDc,EAAYF,GAAsBC,EAElCE,EAAqBD,EACvBA,EAAU5L,KAAI8L,GAAaX,EAAwBW,KAAYC,KAAK,YACpE1K,EAEJ,OAAKqG,EAOAmE,EAIE,CACLpI,MAAQ,GAAEiE,OAAUmE,IACpBD,UAAW,CAAC,CAAClE,WAAWkE,QAAAA,EAAa,KAL9B,CAACnI,MAAOiE,EAAMkE,eAAWvK,GAPzB,CACLoC,MAAOoI,GAAsBf,EAASO,UAAY,YAClDO,YAYL,CAEM,SAASI,EACdpB,GAGA,gBAFAqB,EAEA,uDAFqB,GACrBC,EACA,wDACA,MAAM,SAACpB,EAAD,KAAWpD,EAAX,QAAiBmD,EAAjB,MAA0BpH,GAASmH,EAEnCuB,EACJF,EAASG,SAAS,uBAAlBH,MAA2CnB,GAAAA,EAAUrH,MACjDqH,EAASrH,WACTpC,EAEN,OAAQqG,GACN,KAAKqD,EAAAA,GAAAA,MACH,OAAIoB,EACK,CACL1I,MAAO0I,EACPE,SAAUxB,EACVe,eAAWvK,GAKb4K,EAASG,SAAS,uBACjBF,IACChB,EAAAA,EAAAA,GAAiBN,EAAMjL,YACvB2M,EAAAA,EAAAA,GAAiB1B,EAAMjL,WAGlB,CACL0M,SAAUxB,KACPY,EAA0BX,IAI1B,CACLuB,SAAUxB,EACVpH,MAAOqH,EAASpD,MAAQoD,EAASO,UAAY,YAC7CO,eAAWvK,GAGf,KAAK0J,EAAAA,GAAAA,IACH,MAAO,CACLtH,MAAK,UAAE0I,QAAAA,EAAerB,EAASyB,iBAA1B,QAAuC,GAC5CF,SAAQ,UAAEvB,EAAS0B,WAAX,QAAkB,GAC1BZ,eAAWvK,GAEf,KAAK0J,EAAAA,GAAAA,SACL,KAAKA,EAAAA,GAAAA,aACL,KAAKA,EAAAA,GAAAA,KAIH,MAAO,CACLtH,MAAO0I,QAAAA,EAAgBrB,EAASE,SAAWvH,EAC3C4I,SAAQ,UAAEvB,EAAS2B,cAAX,QAAqB,GAC7Bb,eAAWvK,GAEf,KAAK0J,EAAAA,GAAAA,QACH,MAAO,CACLtH,MAAK,UAAE0I,QAAAA,EAAerB,EAASrH,aAA1B,QAAmC,GACxC4I,SAAU,GACVT,eAAWvK,GAEf,KAAK0J,EAAAA,GAAAA,YACH,MAAM2B,EAAc9B,EAAM+B,gBAAkBC,EAAAA,GAAAA,YAC5C,MAAO,CACLnJ,MAAOiJ,EAAc5B,EAASrH,MAAQ0I,QAAAA,EAAe1I,EACrD4I,SAAUK,EAAc7B,EAAU,GAClCe,eAAWvK,GAEf,QACE,MAAO,CACLoC,MAAO0I,QAAAA,EAAe1I,EACtB4I,SAAU,GACVT,eAAWvK,GAGlB,CAKM,SAASwL,EAAgBC,GAC9B,OAAOA,EAAQC,UAAU,EAAG,EAC7B,C,yPCxLM,SAAS7B,EAAiBvL,GAC/B,OAAQA,GACN,IAAK,QACL,IAAK,OACL,IAAK,SACL,IAAK,QACL,IAAK,IACH,OAAO,EACT,QACE,OAAO,EAEZ,CAEM,SAAS2M,EAAiB3M,GAC/B,QAAKA,GAIG,IAAIqN,EAAAA,IAAqBZ,SAASzM,EAC3C,C","sources":["webpack:///./app/components/events/interfaces/utils.tsx","webpack:///./app/components/hook.tsx","webpack:///./app/utils/parseHtmlMarks.tsx","webpack:///./app/components/search/sources/helpSource.tsx","webpack:///./app/components/helpSearch.tsx","webpack:///./app/components/modals/helpSearchModal.tsx","webpack:///./app/components/organizations/pageFilters/utils.tsx","webpack:///./app/data/forms/accountEmails.tsx","webpack:///./app/utils/analytics/trackAdvancedAnalyticsEvent.tsx","webpack:///./app/utils/callIfFunction.tsx","webpack:///./app/utils/events.tsx","webpack:///./app/utils/platform.tsx"],"sourcesContent":["import * as Sentry from '@sentry/react';\nimport compact from 'lodash/compact';\nimport isString from 'lodash/isString';\nimport uniq from 'lodash/uniq';\nimport * as qs from 'query-string';\n\nimport {FILTER_MASK} from 'sentry/constants';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Frame, PlatformType} from 'sentry/types';\nimport {Image} from 'sentry/types/debugImage';\nimport {EntryRequest} from 'sentry/types/event';\nimport {defined} from 'sentry/utils';\nimport {fileExtensionToPlatform, getFileExtension} from 'sentry/utils/fileExtension';\n\nexport function escapeQuotes(v: string) {\n  return v.replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"');\n}\n\n// TODO(dcramer): support cookies\nexport function getCurlCommand(data: EntryRequest['data']) {\n  let result = 'curl';\n\n  if (defined(data.method) && data.method !== 'GET') {\n    result += ' \\\\\\n -X ' + data.method;\n  }\n\n  // TODO(benvinegar): just gzip? what about deflate?\n  const compressed = data.headers?.find(\n    h => h[0] === 'Accept-Encoding' && h[1].indexOf('gzip') !== -1\n  );\n  if (compressed) {\n    result += ' \\\\\\n --compressed';\n  }\n\n  // sort headers\n  const headers =\n    data.headers?.sort(function (a, b) {\n      return a[0] === b[0] ? 0 : a[0] < b[0] ? -1 : 1;\n    }) ?? [];\n\n  for (const header of headers) {\n    result += ' \\\\\\n -H \"' + header[0] + ': ' + escapeQuotes(header[1] + '') + '\"';\n  }\n\n  if (defined(data.data)) {\n    switch (data.inferredContentType) {\n      case 'application/json':\n        result += ' \\\\\\n --data \"' + escapeQuotes(JSON.stringify(data.data)) + '\"';\n        break;\n      case 'application/x-www-form-urlencoded':\n        result +=\n          ' \\\\\\n --data \"' +\n          escapeQuotes(qs.stringify(data.data as {[key: string]: any})) +\n          '\"';\n        break;\n\n      default:\n        if (isString(data.data)) {\n          result += ' \\\\\\n --data \"' + escapeQuotes(data.data) + '\"';\n        } else if (Object.keys(data.data).length === 0) {\n          // Do nothing with empty object data.\n        } else {\n          Sentry.withScope(scope => {\n            scope.setExtra('data', data);\n            Sentry.captureException(new Error('Unknown event data'));\n          });\n        }\n    }\n  }\n\n  result += ' \\\\\\n \"' + getFullUrl(data) + '\"';\n  return result;\n}\n\nexport function stringifyQueryList(query: string | [key: string, value: string][]) {\n  if (isString(query)) {\n    return query;\n  }\n\n  const queryObj: Record<string, string[]> = {};\n  for (const kv of query) {\n    if (kv !== null && kv.length === 2) {\n      const [key, value] = kv;\n      if (value !== null) {\n        if (Array.isArray(queryObj[key])) {\n          queryObj[key].push(value);\n        } else {\n          queryObj[key] = [value];\n        }\n      }\n    }\n  }\n  return qs.stringify(queryObj);\n}\n\nexport function getFullUrl(data: EntryRequest['data']): string | undefined {\n  let fullUrl = data?.url;\n  if (!fullUrl) {\n    return fullUrl;\n  }\n\n  if (data?.query?.length) {\n    fullUrl += '?' + stringifyQueryList(data.query);\n  }\n\n  if (data.fragment) {\n    fullUrl += '#' + data.fragment;\n  }\n\n  return fullUrl;\n}\n\n/**\n * Converts an object of body/querystring key/value pairs\n * into a tuple of [key, value] pairs, and sorts them.\n *\n * This handles the case for query strings that were decoded like so:\n *\n *   ?foo=bar&foo=baz => { foo: ['bar', 'baz'] }\n *\n * By converting them to [['foo', 'bar'], ['foo', 'baz']]\n */\nexport function objectToSortedTupleArray(obj: Record<string, string | string[]>) {\n  return Object.keys(obj)\n    .reduce<[string, string][]>((out, k) => {\n      const val = obj[k];\n      return out.concat(\n        Array.isArray(val)\n          ? val.map(v => [k, v]) // key has multiple values (array)\n          : ([[k, val]] as [string, string][]) // key has single value\n      );\n    }, [])\n    .sort(function ([keyA, valA], [keyB, valB]) {\n      // if keys are identical, sort on value\n      if (keyA === keyB) {\n        return valA < valB ? -1 : 1;\n      }\n\n      return keyA < keyB ? -1 : 1;\n    });\n}\n\n// for context summaries and avatars\nexport function removeFilterMaskedEntries<T extends Record<string, any>>(rawData: T): T {\n  const cleanedData: Record<string, any> = {};\n  for (const key of Object.getOwnPropertyNames(rawData)) {\n    if (rawData[key] !== FILTER_MASK) {\n      cleanedData[key] = rawData[key];\n    }\n  }\n  return cleanedData as T;\n}\n\nexport function formatAddress(address: number, imageAddressLength: number | undefined) {\n  return `0x${address.toString(16).padStart(imageAddressLength ?? 0, '0')}`;\n}\n\nexport function parseAddress(address?: string | null) {\n  if (!address) {\n    return 0;\n  }\n\n  try {\n    return parseInt(address, 16) || 0;\n  } catch (_e) {\n    return 0;\n  }\n}\n\nexport function getImageRange(image: Image) {\n  // The start address is normalized to a `0x` prefixed hex string. The event\n  // schema also allows ingesting plain numbers, but this is converted during\n  // ingestion.\n  const startAddress = parseAddress(image?.image_addr);\n\n  // The image size is normalized to a regular number. However, it can also be\n  // `null`, in which case we assume that it counts up to the next image.\n  const endAddress = startAddress + (image?.image_size || 0);\n\n  return [startAddress, endAddress];\n}\n\nexport function parseAssembly(assembly: string | null) {\n  let name: string | undefined;\n  let version: string | undefined;\n  let culture: string | undefined;\n  let publicKeyToken: string | undefined;\n\n  const pieces = assembly ? assembly.split(',') : [];\n\n  if (pieces.length === 4) {\n    name = pieces[0];\n    version = pieces[1].split('Version=')[1];\n    culture = pieces[2].split('Culture=')[1];\n    publicKeyToken = pieces[3].split('PublicKeyToken=')[1];\n  }\n\n  return {name, version, culture, publicKeyToken};\n}\n\nexport function stackTracePlatformIcon(platform: PlatformType, frames: Frame[]) {\n  const fileExtensions = uniq(\n    compact(frames.map(frame => getFileExtension(frame.filename ?? '')))\n  );\n\n  if (fileExtensions.length === 1) {\n    const newPlatform = fileExtensionToPlatform(fileExtensions[0]);\n\n    return newPlatform ?? platform;\n  }\n\n  return platform;\n}\n\nexport function isStacktraceNewestFirst() {\n  const user = ConfigStore.get('user');\n  // user may not be authenticated\n\n  if (!user) {\n    return true;\n  }\n\n  switch (user.options.stacktraceOrder) {\n    case 2:\n      return true;\n    case 1:\n      return false;\n    case -1:\n    default:\n      return true;\n  }\n}\n","import {Component} from 'react';\n\nimport HookStore from 'sentry/stores/hookStore';\nimport {HookName, Hooks} from 'sentry/types/hooks';\n\ntype Props<H extends HookName> = {\n  /**\n   * The name of the hook as listed in hookstore.add(hookName, callback)\n   */\n  name: H;\n  /**\n   * If children are provided as a function to the Hook, the hooks will be\n   * passed down as a render prop.\n   */\n  children?: (opts: {hooks: Array<Hooks[H]>}) => React.ReactNode;\n} & Omit<Parameters<Hooks[H]>[0], 'name'>;\n\ntype HookState<H extends HookName> = {\n  hooks: Array<Hooks[H]>;\n};\n\n/**\n * Instead of accessing the HookStore directly, use this.\n *\n * If the hook slot needs to perform anything w/ the hooks, you can pass a\n * function as a child and you will receive an object with a `hooks` key\n *\n * Example:\n *\n *   <Hook name=\"my-hook\">\n *     {({hooks}) => hooks.map(hook => (\n *       <Wrapper>{hook}</Wrapper>\n *     ))}\n *   </Hook>\n */\nfunction Hook<H extends HookName>({name, ...props}: Props<H>) {\n  class HookComponent extends Component<{}, HookState<H>> {\n    static displayName = `Hook(${name})`;\n\n    state = {\n      hooks: HookStore.get(name).map(cb => cb(props)),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    handleHooks(hookName: HookName, hooks: Array<Hooks[H]>) {\n      // Make sure that the incoming hook update matches this component's hook name\n      if (hookName !== name) {\n        return;\n      }\n\n      this.setState({hooks: hooks.map(cb => cb(props))});\n    }\n\n    unsubscribe = HookStore.listen(\n      (hookName: HookName, hooks: Array<Hooks[H]>) => this.handleHooks(hookName, hooks),\n      undefined\n    );\n\n    render() {\n      const {children} = props;\n\n      if (!this.state.hooks || !this.state.hooks.length) {\n        return null;\n      }\n\n      if (typeof children === 'function') {\n        return children({hooks: this.state.hooks});\n      }\n\n      return this.state.hooks;\n    }\n  }\n\n  return <HookComponent />;\n}\n\nexport default Hook;\n","import type {Fuse} from 'sentry/utils/fuzzySearch';\n\ntype Options = {\n  htmlString: string;\n  key: string;\n  markTags: {\n    highlightPostTag: string;\n    highlightPreTag: string;\n  };\n};\n\n/**\n * Parses the \"marked\" html strings into a {key, value, indices} (mimincing the\n * FuseResultMatch type) object, where the indices are a set of zero indexed\n * [start, end] indices for what should be highlighted.\n *\n * @param key The key of the field, this mimics the Fuse match object\n * @param htmlString The html string to parse\n * @param markTags.highlightPreTag The left tag\n * @param markTags.highlightPostTag The right tag\n */\nexport default function parseHtmlMarks({key, htmlString, markTags}: Options) {\n  const {highlightPreTag, highlightPostTag} = markTags;\n\n  const indices: [number, number][] = [];\n  let value = htmlString;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    const openIndex = value.indexOf(highlightPreTag);\n    const openIndexEnd = openIndex + highlightPreTag.length;\n    if (openIndex === -1 || value.indexOf(highlightPostTag) === -1) {\n      break;\n    }\n    value = value.slice(0, openIndex) + value.slice(openIndexEnd);\n\n    const closeIndex = value.indexOf(highlightPostTag);\n    const closeIndexEnd = closeIndex + highlightPostTag.length;\n    value = value.slice(0, closeIndex) + value.slice(closeIndexEnd);\n\n    indices.push([openIndex, closeIndex - 1]);\n  }\n\n  return {key, value, indices} as Fuse.FuseResultMatch;\n}\n","import {Component} from 'react';\n// eslint-disable-next-line no-restricted-imports\nimport {withRouter, WithRouterProps} from 'react-router';\nimport {\n  Result as SearchResult,\n  SentryGlobalSearch,\n  standardSDKSlug,\n} from '@sentry-internal/global-search';\nimport dompurify from 'dompurify';\nimport debounce from 'lodash/debounce';\n\nimport {Organization, Project} from 'sentry/types';\nimport parseHtmlMarks from 'sentry/utils/parseHtmlMarks';\nimport withLatestContext from 'sentry/utils/withLatestContext';\n\nimport {ChildProps, Result, ResultItem} from './types';\n\ntype Props = WithRouterProps & {\n  /**\n   * Render function that renders the global search result\n   */\n  children: (props: ChildProps) => React.ReactNode;\n  organization: Organization;\n  /**\n   * Specific platforms to filter results to\n   */\n  platforms: string[];\n  project: Project;\n  /**\n   * The string to search the navigation routes for\n   */\n  query: string;\n};\n\ntype State = {\n  loading: boolean;\n  results: Result[];\n};\n\nconst MARK_TAGS = {\n  highlightPreTag: '<mark>',\n  highlightPostTag: '</mark>',\n};\n\nclass HelpSource extends Component<Props, State> {\n  state: State = {\n    loading: false,\n    results: [],\n  };\n\n  componentDidMount() {\n    if (this.props.query !== undefined) {\n      this.doSearch(this.props.query);\n    }\n  }\n\n  componentDidUpdate(nextProps: Props) {\n    if (nextProps.query !== this.props.query) {\n      this.doSearch(nextProps.query);\n    }\n  }\n\n  search = new SentryGlobalSearch(['docs', 'help-center', 'develop', 'blog']);\n\n  async unbouncedSearch(query: string) {\n    this.setState({loading: true});\n    const {platforms = []} = this.props;\n\n    const searchResults = await this.search.query(query, {\n      platforms: platforms.map(platform => standardSDKSlug(platform)?.slug!),\n    });\n    const results = mapSearchResults(searchResults);\n\n    this.setState({loading: false, results});\n  }\n\n  doSearch = debounce(this.unbouncedSearch, 300);\n\n  render() {\n    return this.props.children({\n      isLoading: this.state.loading,\n      results: this.state.results,\n    });\n  }\n}\n\nfunction mapSearchResults(results: SearchResult[]) {\n  const items: Result[] = [];\n\n  results.forEach(section => {\n    const sectionItems = section.hits.map(hit => {\n      const title = parseHtmlMarks({\n        key: 'title',\n        htmlString: hit.title ?? '',\n        markTags: MARK_TAGS,\n      });\n      const description = parseHtmlMarks({\n        key: 'description',\n        htmlString: hit.text ?? '',\n        markTags: MARK_TAGS,\n      });\n\n      const item: ResultItem = {\n        ...hit,\n        sourceType: 'help',\n        resultType: `help-${hit.site}` as ResultItem['resultType'],\n        title: dompurify.sanitize(hit.title ?? ''),\n        extra: hit.context.context1,\n        description: hit.text ? dompurify.sanitize(hit.text) : undefined,\n        to: hit.url,\n      };\n\n      return {item, matches: [title, description], score: 1, refIndex: 0};\n    });\n\n    // The first element should indicate the section.\n    if (sectionItems.length > 0) {\n      sectionItems[0].item.sectionHeading = section.name;\n      sectionItems[0].item.sectionCount = sectionItems.length;\n\n      items.push(...sectionItems);\n      return;\n    }\n\n    // If we didn't have any results for this section mark it as empty\n    const emptyHeaderItem: ResultItem = {\n      sourceType: 'help',\n      resultType: `help-${section.site}` as ResultItem['resultType'],\n      title: `No results in ${section.name}`,\n      sectionHeading: section.name,\n      empty: true,\n    };\n\n    items.push({item: emptyHeaderItem, score: 1, refIndex: 0});\n  });\n\n  return items;\n}\n\nexport {HelpSource};\nexport default withLatestContext(withRouter(HelpSource));\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Search} from 'sentry/components/search';\nimport SearchResult from 'sentry/components/search/searchResult';\nimport SearchResultWrapper from 'sentry/components/search/searchResultWrapper';\nimport HelpSource from 'sentry/components/search/sources/helpSource';\nimport {IconWindow} from 'sentry/icons';\nimport {t, tn} from 'sentry/locale';\nimport space from 'sentry/styles/space';\n\ntype ItemRenderer = React.ComponentProps<typeof Search>['renderItem'];\n\nconst renderResult: ItemRenderer = ({item, matches, itemProps, highlighted}) => {\n  const sectionHeading =\n    item.sectionHeading !== undefined ? (\n      <SectionHeading>\n        <IconWindow />\n        {t('From %s', item.sectionHeading)}\n        <Count>{tn('%s result', '%s results', item.sectionCount ?? 0)}</Count>\n      </SectionHeading>\n    ) : null;\n\n  if (item.empty) {\n    return (\n      <Fragment>\n        {sectionHeading}\n        <Empty>{t('No results from %s', item.sectionHeading)}</Empty>\n      </Fragment>\n    );\n  }\n\n  return (\n    <Fragment>\n      {sectionHeading}\n      <SearchResultWrapper {...itemProps} highlighted={highlighted}>\n        <SearchResult highlighted={highlighted} item={item} matches={matches} />\n      </SearchResultWrapper>\n    </Fragment>\n  );\n};\n\ntype Props = Omit<\n  React.ComponentProps<typeof Search>,\n  'sources' | 'minSearch' | 'closeOnSelect' | 'renderItem'\n>;\n\n// TODO(ts): Type based on Search props once that has types\nconst HelpSearch = (props: Props) => (\n  <Search\n    {...props}\n    sources={[HelpSource]}\n    minSearch={3}\n    closeOnSelect={false}\n    renderItem={renderResult}\n  />\n);\n\nconst SectionHeading = styled('div')`\n  display: grid;\n  grid-template-columns: max-content 1fr max-content;\n  gap: ${space(1)};\n  align-items: center;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${space(1)} ${space(2)};\n\n  &:not(:first-of-type) {\n    border-top: 1px solid ${p => p.theme.innerBorder};\n  }\n`;\n\nconst Count = styled('div')`\n  font-size: ${p => p.theme.fontSizeSmall};\n  color: ${p => p.theme.gray300};\n`;\n\nconst Empty = styled('div')`\n  display: flex;\n  align-items: center;\n  padding: ${space(2)};\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeMedium};\n  border-top: 1px solid ${p => p.theme.innerBorder};\n`;\n\nexport default HelpSearch;\n","import {ClassNames, css, useTheme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {ModalRenderProps} from 'sentry/actionCreators/modal';\nimport HelpSearch from 'sentry/components/helpSearch';\nimport Hook from 'sentry/components/hook';\nimport {t} from 'sentry/locale';\nimport space from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = ModalRenderProps & {\n  organization: Organization;\n  placeholder?: string;\n};\n\nfunction HelpSearchModal({\n  Body,\n  closeModal,\n  organization,\n  placeholder = t('Search for documentation, FAQs, blog posts...'),\n  ...props\n}: Props) {\n  const theme = useTheme();\n\n  return (\n    <Body>\n      <ClassNames>\n        {({css: injectedCss}) => (\n          <HelpSearch\n            {...props}\n            entryPoint=\"sidebar_help\"\n            dropdownClassName={injectedCss`\n                width: 100%;\n                border: transparent;\n                border-top-left-radius: 0;\n                border-top-right-radius: 0;\n                position: initial;\n                box-shadow: none;\n                border-top: 1px solid ${theme.border};\n              `}\n            renderInput={({getInputProps}) => (\n              <InputWrapper>\n                <Input autoFocus {...getInputProps({type: 'text', placeholder})} />\n              </InputWrapper>\n            )}\n            resultFooter={\n              <Hook name=\"help-modal:footer\" {...{organization, closeModal}} />\n            }\n          />\n        )}\n      </ClassNames>\n    </Body>\n  );\n}\n\nconst InputWrapper = styled('div')`\n  padding: ${space(0.25)};\n`;\n\nconst Input = styled('input')`\n  width: 100%;\n  padding: ${space(1)};\n  border: none;\n  border-radius: 8px;\n  outline: none;\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const modalCss = css`\n  [role='document'] {\n    padding: 0;\n  }\n`;\n\nexport default withOrganization(HelpSearchModal);\n","import {Location} from 'history';\nimport identity from 'lodash/identity';\nimport isEqual from 'lodash/isEqual';\nimport pick from 'lodash/pick';\nimport pickBy from 'lodash/pickBy';\n\nimport {DEFAULT_STATS_PERIOD} from 'sentry/constants';\nimport {DATE_TIME_KEYS, URL_PARAM} from 'sentry/constants/pageFilters';\nimport {PageFilters} from 'sentry/types';\n\n/**\n * Make a default page filters object\n */\nexport function getDefaultSelection(): PageFilters {\n  const datetime = {\n    start: null,\n    end: null,\n    period: DEFAULT_STATS_PERIOD,\n    utc: null,\n  };\n\n  return {\n    projects: [],\n    environments: [],\n    datetime,\n  };\n}\n\n/**\n * Extract the page filter parameters from an object\n * Useful for extracting page filter properties from the current URL\n * when building another URL.\n */\nexport function extractSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(URL_PARAM)), identity);\n}\n\n/**\n * Extract the page filter datetime parameters from an object.\n */\nexport function extractDatetimeSelectionParameters(query: Location['query']) {\n  return pickBy(pick(query, Object.values(DATE_TIME_KEYS)), identity);\n}\n\n/**\n * Compare the non-utc values of two selections.\n * Useful when re-fetching data based on page filters changing.\n *\n * utc is not compared as there is a problem somewhere in the selection\n * data flow that results in it being undefined | null | boolean instead of null | boolean.\n * The additional undefined state makes this function just as unreliable as isEqual(selection, other)\n */\nexport function isSelectionEqual(selection: PageFilters, other: PageFilters): boolean {\n  if (\n    !isEqual(selection.projects, other.projects) ||\n    !isEqual(selection.environments, other.environments)\n  ) {\n    return false;\n  }\n\n  // Use string comparison as we aren't interested in the identity of the datetimes.\n  if (\n    selection.datetime.period !== other.datetime.period ||\n    selection.datetime.start?.toString() !== other.datetime.start?.toString() ||\n    selection.datetime.end?.toString() !== other.datetime.end?.toString()\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","import {JsonFormObject} from 'sentry/components/forms/type';\n\n// Export route to make these forms searchable by label/help\nexport const route = '/settings/account/emails/';\n\nconst formGroups: JsonFormObject[] = [\n  {\n    // Form \"section\"/\"panel\"\n    title: 'Add Secondary Emails',\n    fields: [\n      {\n        name: 'email',\n        type: 'string',\n\n        // additional data/props that is related to rendering of form field rather than data\n        label: 'Additional Email',\n        placeholder: 'e.g. secondary@example.com',\n        help: 'Designate an alternative email for this account',\n        showReturnButton: true,\n      },\n    ],\n  },\n];\n\nexport default formGroups;\n","import {coreUIEventMap, CoreUIEventParameters} from './coreuiAnalyticsEvents';\nimport {dashboardsEventMap, DashboardsEventParameters} from './dashboardsAnalyticsEvents';\nimport {discoverEventMap, DiscoverEventParameters} from './discoverAnalyticsEvents';\nimport {growthEventMap, GrowthEventParameters} from './growthAnalyticsEvents';\nimport {issueEventMap, IssueEventParameters} from './issueAnalyticsEvents';\nimport makeAnalyticsFunction from './makeAnalyticsFunction';\nimport {\n  performanceEventMap,\n  PerformanceEventParameters,\n} from './performanceAnalyticsEvents';\nimport {profilingEventMap, ProfilingEventParameters} from './profilingAnalyticsEvents';\nimport {releasesEventMap, ReleasesEventParameters} from './releasesAnalyticsEvents';\nimport {replayEventMap, ReplayEventParameters} from './replayAnalyticsEvents';\nimport {samplingEventMap, SamplingEventParameters} from './samplingAnalyticsEvents';\nimport {searchEventMap, SearchEventParameters} from './searchAnalyticsEvents';\nimport {settingsEventMap, SettingsEventParameters} from './settingsAnalyticsEvents';\nimport {TeamInsightsEventParameters, workflowEventMap} from './workflowAnalyticsEvents';\n\ntype EventParameters = GrowthEventParameters &\n  CoreUIEventParameters &\n  DashboardsEventParameters &\n  DiscoverEventParameters &\n  IssueEventParameters &\n  PerformanceEventParameters &\n  ProfilingEventParameters &\n  ReleasesEventParameters &\n  ReplayEventParameters &\n  SamplingEventParameters &\n  SearchEventParameters &\n  SettingsEventParameters &\n  TeamInsightsEventParameters;\n\nconst allEventMap: Record<string, string | null> = {\n  ...coreUIEventMap,\n  ...dashboardsEventMap,\n  ...discoverEventMap,\n  ...growthEventMap,\n  ...issueEventMap,\n  ...performanceEventMap,\n  ...profilingEventMap,\n  ...releasesEventMap,\n  ...replayEventMap,\n  ...samplingEventMap,\n  ...searchEventMap,\n  ...settingsEventMap,\n  ...workflowEventMap,\n};\n\n/**\n * Generic typed analytics function for growth, issue, and performance events.\n * Can split up analytics functions to a smaller set of events like we do for trackIntegrationAnalytics\n */\nconst trackAdvancedAnalyticsEvent = makeAnalyticsFunction<EventParameters>(allEventMap);\n\nexport default trackAdvancedAnalyticsEvent;\n","// Checks if `fn` is a function and calls it with `args`\nexport function callIfFunction(fn: any, ...args: any[]): any {\n  return typeof fn === 'function' && fn(...args);\n}\n","import {\n  BaseGroup,\n  EventMetadata,\n  EventOrGroupType,\n  GroupTombstone,\n  IssueCategory,\n  TreeLabelPart,\n} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\nimport {isMobilePlatform, isNativePlatform} from 'sentry/utils/platform';\n\nfunction isTombstone(maybe: BaseGroup | Event | GroupTombstone): maybe is GroupTombstone {\n  return !maybe.hasOwnProperty('type');\n}\n\n/**\n * Extract the display message from an event.\n */\nexport function getMessage(\n  event: Event | BaseGroup | GroupTombstone\n): string | undefined {\n  if (isTombstone(event)) {\n    return event.culprit || '';\n  }\n\n  const {metadata, type, culprit} = event;\n\n  switch (type) {\n    case EventOrGroupType.ERROR:\n    case EventOrGroupType.TRANSACTION:\n      return metadata.value;\n    case EventOrGroupType.CSP:\n      return metadata.message;\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      return '';\n    default:\n      return culprit || '';\n  }\n}\n\n/**\n * Get the location from an event.\n */\nexport function getLocation(event: Event | BaseGroup | GroupTombstone) {\n  if (isTombstone(event)) {\n    return undefined;\n  }\n\n  if (event.type === EventOrGroupType.ERROR && isNativePlatform(event.platform)) {\n    return event.metadata.filename || undefined;\n  }\n\n  return undefined;\n}\n\nexport function getTreeLabelPartDetails(part: TreeLabelPart) {\n  // Note: This function also exists in Python in eventtypes/base.py, to make\n  // porting efforts simpler it's recommended to keep both variants\n  // structurally similar.\n  if (typeof part === 'string') {\n    return part;\n  }\n\n  const label = part?.function || part?.package || part?.filebase || part?.type;\n  const classbase = part?.classbase;\n\n  if (classbase) {\n    return label ? `${classbase}.${label}` : classbase;\n  }\n\n  return label || '<unknown>';\n}\n\nfunction computeTitleWithTreeLabel(metadata: EventMetadata) {\n  const {type, current_tree_label, finest_tree_label} = metadata;\n\n  const treeLabel = current_tree_label || finest_tree_label;\n\n  const formattedTreeLabel = treeLabel\n    ? treeLabel.map(labelPart => getTreeLabelPartDetails(labelPart)).join(' | ')\n    : undefined;\n\n  if (!type) {\n    return {\n      title: formattedTreeLabel || metadata.function || '<unknown>',\n      treeLabel,\n    };\n  }\n\n  if (!formattedTreeLabel) {\n    return {title: type, treeLabel: undefined};\n  }\n\n  return {\n    title: `${type} | ${formattedTreeLabel}`,\n    treeLabel: [{type}, ...(treeLabel ?? [])],\n  };\n}\n\nexport function getTitle(\n  event: Event | BaseGroup,\n  features: string[] = [],\n  grouping = false\n) {\n  const {metadata, type, culprit, title} = event;\n\n  const customTitle =\n    features.includes('custom-event-title') && metadata?.title\n      ? metadata.title\n      : undefined;\n\n  switch (type) {\n    case EventOrGroupType.ERROR: {\n      if (customTitle) {\n        return {\n          title: customTitle,\n          subtitle: culprit,\n          treeLabel: undefined,\n        };\n      }\n\n      const displayTitleWithTreeLabel =\n        features.includes('grouping-title-ui') &&\n        (grouping ||\n          isNativePlatform(event.platform) ||\n          isMobilePlatform(event.platform));\n\n      if (displayTitleWithTreeLabel) {\n        return {\n          subtitle: culprit,\n          ...computeTitleWithTreeLabel(metadata),\n        };\n      }\n\n      return {\n        subtitle: culprit,\n        title: metadata.type || metadata.function || '<unknown>',\n        treeLabel: undefined,\n      };\n    }\n    case EventOrGroupType.CSP:\n      return {\n        title: customTitle ?? metadata.directive ?? '',\n        subtitle: metadata.uri ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.EXPECTCT:\n    case EventOrGroupType.EXPECTSTAPLE:\n    case EventOrGroupType.HPKP:\n      // Due to a regression some reports did not have message persisted\n      // (https://github.com/getsentry/sentry/pull/19794) so we need to fall\n      // back to the computed title for these.\n      return {\n        title: customTitle ?? (metadata.message || title),\n        subtitle: metadata.origin ?? '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.DEFAULT:\n      return {\n        title: customTitle ?? metadata.title ?? '',\n        subtitle: '',\n        treeLabel: undefined,\n      };\n    case EventOrGroupType.TRANSACTION:\n      const isPerfIssue = event.issueCategory === IssueCategory.PERFORMANCE;\n      return {\n        title: isPerfIssue ? metadata.title : customTitle ?? title,\n        subtitle: isPerfIssue ? culprit : '',\n        treeLabel: undefined,\n      };\n    default:\n      return {\n        title: customTitle ?? title,\n        subtitle: '',\n        treeLabel: undefined,\n      };\n  }\n}\n\n/**\n * Returns a short eventId with only 8 characters\n */\nexport function getShortEventId(eventId: string) {\n  return eventId.substring(0, 8);\n}\n","import {mobile} from 'sentry/data/platformCategories';\n\nexport function isNativePlatform(platform: string | undefined) {\n  switch (platform) {\n    case 'cocoa':\n    case 'objc':\n    case 'native':\n    case 'swift':\n    case 'c':\n      return true;\n    default:\n      return false;\n  }\n}\n\nexport function isMobilePlatform(platform: string | undefined) {\n  if (!platform) {\n    return false;\n  }\n\n  return ([...mobile] as string[]).includes(platform);\n}\n"],"names":["escapeQuotes","v","replace","getCurlCommand","data","result","defined","method","headers","find","h","indexOf","sort","a","b","header","inferredContentType","JSON","stringify","qs","isString","Object","keys","length","Sentry","scope","setExtra","Error","getFullUrl","fullUrl","url","query","queryObj","kv","key","value","Array","isArray","push","stringifyQueryList","fragment","removeFilterMaskedEntries","rawData","cleanedData","getOwnPropertyNames","FILTER_MASK","formatAddress","address","imageAddressLength","toString","padStart","parseAddress","parseInt","_e","getImageRange","image","startAddress","image_addr","image_size","parseAssembly","assembly","name","version","culture","publicKeyToken","pieces","split","stackTracePlatformIcon","platform","frames","fileExtensions","uniq","compact","map","frame","getFileExtension","filename","newPlatform","fileExtensionToPlatform","isStacktraceNewestFirst","user","ConfigStore","options","stacktraceOrder","Hook","props","HookComponent","Component","hooks","HookStore","cb","hookName","this","handleHooks","undefined","componentWillUnmount","unsubscribe","setState","render","children","state","parseHtmlMarks","htmlString","markTags","highlightPreTag","highlightPostTag","indices","openIndex","openIndexEnd","slice","closeIndex","closeIndexEnd","MARK_TAGS","HelpSource","loading","results","SentryGlobalSearch","debounce","unbouncedSearch","componentDidMount","doSearch","componentDidUpdate","nextProps","platforms","items","forEach","section","sectionItems","hits","hit","title","description","text","item","sourceType","resultType","site","dompurify","extra","context","context1","to","matches","score","refIndex","sectionHeading","sectionCount","emptyHeaderItem","empty","mapSearchResults","search","standardSDKSlug","slug","isLoading","withLatestContext","withRouter","renderResult","itemProps","highlighted","SectionHeading","t","Count","tn","Fragment","Empty","HelpSearch","sources","minSearch","closeOnSelect","renderItem","space","p","theme","backgroundSecondary","innerBorder","fontSizeSmall","gray300","subText","fontSizeMedium","HelpSearchModal","Body","closeModal","organization","placeholder","useTheme","css","injectedCss","entryPoint","dropdownClassName","border","renderInput","getInputProps","InputWrapper","Input","autoFocus","type","resultFooter","modalCss","withOrganization","getDefaultSelection","projects","environments","datetime","start","end","period","DEFAULT_STATS_PERIOD","utc","extractSelectionParameters","pickBy","pick","values","URL_PARAM","identity","isSelectionEqual","selection","other","isEqual","route","fields","label","help","showReturnButton","allEventMap","coreUIEventMap","dashboardsEventMap","discoverEventMap","growthEventMap","issueEventMap","performanceEventMap","profilingEventMap","releasesEventMap","replayEventMap","samplingEventMap","searchEventMap","settingsEventMap","workflowEventMap","makeAnalyticsFunction","callIfFunction","fn","args","isTombstone","maybe","hasOwnProperty","getMessage","event","culprit","metadata","EventOrGroupType","message","getLocation","isNativePlatform","getTreeLabelPartDetails","part","function","package","filebase","classbase","computeTitleWithTreeLabel","current_tree_label","finest_tree_label","treeLabel","formattedTreeLabel","labelPart","join","getTitle","features","grouping","customTitle","includes","subtitle","isMobilePlatform","directive","uri","origin","isPerfIssue","issueCategory","IssueCategory","getShortEventId","eventId","substring","mobile"],"sourceRoot":""}