{"version":3,"file":"chunks/app_components_events_interfaces_spans_constants_tsx-app_components_performance_waterfall_tre-0416f3.xxxxxxxxxxxxxxxxxxxx.js","mappings":"8TAAO,MAAMA,EAAiB,IAEjBC,EAA0B,EAE1BC,EAA+BF,EAAiBC,EAEhDE,EAAmB,GAInBC,EACXJ,EAAiBG,EAHa,GAGgC,EAEnDE,EAAqB,GAErBC,EAAiC,E,sZCR9C,MACaC,EAA0B,GAC1BC,EAAoBD,EAFE,GAKtBE,EAAe,mBAAO,MAAP,sBAAH,gCAGJC,GAAMA,EAAEC,aAAe,SAAW,SAH9B,KAG0CD,GAAKA,EAAEE,MAAMC,QAHvD,6BAAlB,KAaMC,GAAgB,OAAO,MAAP,sBAAH,WACdJ,GAAMA,EAAEK,OAASC,EAAAA,EAAa,EAAI,EAAIA,EAAAA,GADxB,8BAGTN,GAAM,OAAMA,EAAEC,aAAe,SAAW,WAAWD,EAAEE,MAAMC,WAHlD,6BAOtBH,GACAA,EAAEK,OACG,8BACkBL,EAAEC,aAAe,SAAW,WAAWD,EAAEE,MAAMC,6CACvCH,EAAEE,MAAMK,gBAClC,mHAKoBP,EAAEC,aAAe,SAAW,WAAWD,EAAEE,MAAMC,qHAjBlD,yCAyBFH,GAAKA,EAAEE,MAAMC,QAzBX,yEA+BfG,EAAAA,EAAa,EAAI,EA/BF,QA0CbE,GAAa,OAAO,MAAP,sBAAH,wIAQNC,EAAAA,EAAAA,GAAM,IARA,wFAaPT,GAAKA,EAAEE,MAAMQ,oBAbN,KAenBV,IAAKW,EAAAA,EAAAA,IAAeX,IAfD,KAkBVY,GAAsB,OAAO,MAAP,sBAAH,4BAEpBN,EAAAA,EAFoB,YA3EI,GA2EJ,gBA3EI,GA2EJ,oBAKdG,EAAAA,EAAAA,GAAM,GALQ,aAMnBT,GAAKA,EAAEE,MAAMW,OAAOC,UAAUC,iBANX,8DAYnBC,GAAiB,OAAOC,EAAAA,GAAP,sBAAH,0BAEVR,EAAAA,EAAAA,GAAM,KAFI,I,qMC5FpB,MAAMS,EAA6C,CACxD,CAACC,EAAAA,GAAAA,IAAc,CACbC,KAAM,KACNC,MAAMC,EAAAA,EAAAA,GAAE,eACRC,QAAS,KACTC,aAAaF,EAAAA,EAAAA,GACX,iFAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,KAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNC,MAAMC,EAAAA,EAAAA,GAAE,0BACRC,QAAS,MACTC,aAAaF,EAAAA,EAAAA,GACX,2EAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNC,MAAMC,EAAAA,EAAAA,GAAE,4BACRC,QAAS,MACTC,aAAaF,EAAAA,EAAAA,GACX,6EAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNC,MAAMC,EAAAA,EAAAA,GAAE,qBACRC,QAAS,MACTC,aAAaF,EAAAA,EAAAA,GACX,gFAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,KAAe,CACdC,KAAM,MACNC,MAAMC,EAAAA,EAAAA,GAAE,2BACRC,QAAS,MACTC,aAAaF,EAAAA,EAAAA,GACX,6EAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,MAExB,CAACA,EAAAA,GAAAA,MAAgB,CACfC,KAAM,OACNC,MAAMC,EAAAA,EAAAA,GAAE,sBACRC,QAAS,OACTC,aAAaF,EAAAA,EAAAA,GACX,0FAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,OAExB,CAACA,EAAAA,GAAAA,aAAuB,CACtBC,KAAM,mBACNC,MAAMC,EAAAA,EAAAA,GAAE,gBACRC,QAAS,KACTC,aAAaF,EAAAA,EAAAA,GACX,4FAEFG,cAAe,IACfC,MAAMC,EAAAA,EAAAA,IAAgBR,EAAAA,GAAAA,eAIbS,EAAmD,CAC9D,CAACC,EAAAA,GAAAA,cAA2B,CAC1BT,KAAM,iBACNC,MAAMC,EAAAA,EAAAA,GAAE,kBACRE,aAAaF,EAAAA,EAAAA,GACX,0EAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,cAA2B,CAC1BT,KAAM,iBACNC,MAAMC,EAAAA,EAAAA,GAAE,kBACRE,aAAaF,EAAAA,EAAAA,GACX,mFAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,aAA0B,CACzBT,KAAM,eACNC,MAAMC,EAAAA,EAAAA,GAAE,gBACRE,aAAaF,EAAAA,EAAAA,GACX,kFAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,cAExB,CAACA,EAAAA,GAAAA,YAAyB,CACxBT,KAAM,cACNC,MAAMC,EAAAA,EAAAA,GAAE,eACRE,aAAaF,EAAAA,EAAAA,GACX,sFAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,aAExB,CAACA,EAAAA,GAAAA,cAA2B,CAC1BT,KAAM,gBACNC,MAAMC,EAAAA,EAAAA,GAAE,iBACRE,aAAaF,EAAAA,EAAAA,GACX,0FAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,eAExB,CAACA,EAAAA,GAAAA,gBAA6B,CAC5BT,KAAM,mBACNC,MAAMC,EAAAA,EAAAA,GAAE,oBACRE,aAAaF,EAAAA,EAAAA,GACX,uGAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,iBAExB,CAACA,EAAAA,GAAAA,kBAA+B,CAC9BT,KAAM,qBACNC,MAAMC,EAAAA,EAAAA,GAAE,sBACRE,aAAaF,EAAAA,EAAAA,GACX,2GAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,mBAExB,CAACA,EAAAA,GAAAA,YAAyB,CACxBT,KAAM,cACNC,MAAMC,EAAAA,EAAAA,GAAE,UACRE,aAAaF,EAAAA,EAAAA,GACX,+EAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,aAExB,CAACA,EAAAA,GAAAA,gBAA6B,CAC5BT,KAAM,mBACNC,MAAMC,EAAAA,EAAAA,GAAE,oBACRE,aAAaF,EAAAA,EAAAA,GACX,iGAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,iBAExB,CAACA,EAAAA,GAAAA,kBAA+B,CAC9BT,KAAM,qBACNC,MAAMC,EAAAA,EAAAA,GAAE,sBACRE,aAAaF,EAAAA,EAAAA,GACX,qGAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,mBAExB,CAACA,EAAAA,GAAAA,iBAA8B,CAC7BT,KAAM,mBACNC,MAAMC,EAAAA,EAAAA,GAAE,oBACRE,aAAaF,EAAAA,EAAAA,GACX,+FAEFI,MAAMC,EAAAA,EAAAA,IAAgBE,EAAAA,GAAAA,mBAInB,IAAKC,G,SAAAA,GAAAA,EAAAA,OAAAA,SAAAA,EAAAA,KAAAA,OAAAA,EAAAA,MAAAA,QAAAA,EAAAA,QAAAA,UAAAA,EAAAA,OAAAA,SAAAA,EAAAA,GAAAA,I,EAAAA,IAAAA,EAAAA,CAAAA,G","sources":["webpack:///./app/components/events/interfaces/spans/constants.tsx","webpack:///./app/components/performance/waterfall/treeConnector.tsx","webpack:///./app/utils/performance/vitals/constants.tsx"],"sourcesContent":["export const MINIMAP_HEIGHT = 120;\n\nexport const MINIMAP_SPAN_BAR_HEIGHT = 4;\n\nexport const NUM_OF_SPANS_FIT_IN_MINI_MAP = MINIMAP_HEIGHT / MINIMAP_SPAN_BAR_HEIGHT;\n\nexport const TIME_AXIS_HEIGHT = 20;\n\nconst SECONDARY_HEADER_HEIGHT = 20;\n\nexport const MINIMAP_CONTAINER_HEIGHT =\n  MINIMAP_HEIGHT + TIME_AXIS_HEIGHT + SECONDARY_HEADER_HEIGHT + 1;\n\nexport const VIEW_HANDLE_HEIGHT = 18;\n\nexport const MERGE_LABELS_THRESHOLD_PERCENT = 10;\n","import styled from '@emotion/styled';\n\nimport {ROW_HEIGHT} from 'sentry/components/performance/waterfall/constants';\nimport {getToggleTheme} from 'sentry/components/performance/waterfall/utils';\nimport {IconChevron} from 'sentry/icons';\nimport space from 'sentry/styles/space';\n\nconst TOGGLE_BUTTON_MARGIN_RIGHT = 16;\nexport const TOGGLE_BUTTON_MAX_WIDTH = 30;\nexport const TOGGLE_BORDER_BOX = TOGGLE_BUTTON_MAX_WIDTH + TOGGLE_BUTTON_MARGIN_RIGHT;\nconst TREE_TOGGLE_CONTAINER_WIDTH = 40;\n\nexport const ConnectorBar = styled('div')<{orphanBranch: boolean}>`\n  height: 250%;\n\n  border-left: 2px ${p => (p.orphanBranch ? 'dashed' : 'solid')} ${p => p.theme.border};\n  position: absolute;\n  top: 0;\n`;\n\ntype TogglerTypes = {\n  hasToggler?: boolean;\n  isLast?: boolean;\n};\n\nexport const TreeConnector = styled('div')<TogglerTypes & {orphanBranch: boolean}>`\n  height: ${p => (p.isLast ? ROW_HEIGHT / 2 + 1 : ROW_HEIGHT)}px;\n  width: 100%;\n  border-left: ${p => `2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};`};\n  position: absolute;\n  top: 0;\n\n  ${p =>\n    p.isLast\n      ? `\n      border-bottom: 2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};\n      border-bottom-left-radius: ${p.theme.borderRadius};`\n      : `\n      &:before {\n        content: '';\n        height: 2px;\n        left: -2px;\n        border-bottom: 2px ${p.orphanBranch ? 'dashed' : 'solid'} ${p.theme.border};\n        width: calc(100% - 2px);\n        position: absolute;\n        bottom: calc(50% - 1px);\n      }`}\n\n  &:after {\n    content: '';\n    background-color: ${p => p.theme.border};\n    border-radius: 50%;\n    height: 6px;\n    width: 6px;\n    position: absolute;\n    right: 0;\n    top: ${ROW_HEIGHT / 2 - 3}px;\n  }\n`;\n\ntype SpanTreeTogglerAndDivProps = {\n  disabled: boolean;\n  errored: boolean;\n  isExpanded: boolean;\n  isSpanGroupToggler?: boolean;\n};\n\nexport const TreeToggle = styled('div')<SpanTreeTogglerAndDivProps>`\n  height: 16px;\n  white-space: nowrap;\n  min-width: 30px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 99px;\n  padding: 0px ${space(0.5)};\n  transition: all 0.15s ease-in-out;\n  font-size: 10px;\n  line-height: 0;\n  z-index: 1;\n  box-shadow: ${p => p.theme.dropShadowLightest};\n\n  ${p => getToggleTheme(p)}\n`;\n\nexport const TreeToggleContainer = styled('div')<TogglerTypes>`\n  position: relative;\n  height: ${ROW_HEIGHT}px;\n  width: ${TREE_TOGGLE_CONTAINER_WIDTH}px;\n  min-width: ${TREE_TOGGLE_CONTAINER_WIDTH}px;\n  margin-right: ${space(1)};\n  z-index: ${p => p.theme.zIndex.traceView.spanTreeToggler};\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n`;\n\nexport const TreeToggleIcon = styled(IconChevron)`\n  width: 7px;\n  margin-left: ${space(0.25)};\n`;\n","import {t} from 'sentry/locale';\nimport {measurementType} from 'sentry/utils/discover/fields';\nimport {MobileVital, WebVital} from 'sentry/utils/fields';\nimport {Vital} from 'sentry/utils/performance/vitals/types';\n\nexport const WEB_VITAL_DETAILS: Record<WebVital, Vital> = {\n  [WebVital.FP]: {\n    slug: 'fp',\n    name: t('First Paint'),\n    acronym: 'FP',\n    description: t(\n      'Render time of the first pixel loaded in the viewport (may overlap with FCP).'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FP),\n  },\n  [WebVital.FCP]: {\n    slug: 'fcp',\n    name: t('First Contentful Paint'),\n    acronym: 'FCP',\n    description: t(\n      'Render time of the first image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 3000,\n    type: measurementType(WebVital.FCP),\n  },\n  [WebVital.LCP]: {\n    slug: 'lcp',\n    name: t('Largest Contentful Paint'),\n    acronym: 'LCP',\n    description: t(\n      'Render time of the largest image, text or other DOM node in the viewport.'\n    ),\n    poorThreshold: 4000,\n    type: measurementType(WebVital.LCP),\n  },\n  [WebVital.FID]: {\n    slug: 'fid',\n    name: t('First Input Delay'),\n    acronym: 'FID',\n    description: t(\n      'Response time of the browser to a user interaction (clicking, tapping, etc).'\n    ),\n    poorThreshold: 300,\n    type: measurementType(WebVital.FID),\n  },\n  [WebVital.CLS]: {\n    slug: 'cls',\n    name: t('Cumulative Layout Shift'),\n    acronym: 'CLS',\n    description: t(\n      'Sum of layout shift scores that measure the visual stability of the page.'\n    ),\n    poorThreshold: 0.25,\n    type: measurementType(WebVital.CLS),\n  },\n  [WebVital.TTFB]: {\n    slug: 'ttfb',\n    name: t('Time to First Byte'),\n    acronym: 'TTFB',\n    description: t(\n      \"The time that it takes for a user's browser to receive the first byte of page content.\"\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.TTFB),\n  },\n  [WebVital.RequestTime]: {\n    slug: 'ttfb.requesttime',\n    name: t('Request Time'),\n    acronym: 'RT',\n    description: t(\n      'Captures the time spent making the request and receiving the first byte of the response.'\n    ),\n    poorThreshold: 600,\n    type: measurementType(WebVital.RequestTime),\n  },\n};\n\nexport const MOBILE_VITAL_DETAILS: Record<MobileVital, Vital> = {\n  [MobileVital.AppStartCold]: {\n    slug: 'app_start_cold',\n    name: t('App Start Cold'),\n    description: t(\n      'Cold start is a measure of the application start up time from scratch.'\n    ),\n    type: measurementType(MobileVital.AppStartCold),\n  },\n  [MobileVital.AppStartWarm]: {\n    slug: 'app_start_warm',\n    name: t('App Start Warm'),\n    description: t(\n      'Warm start is a measure of the application start up time while still in memory.'\n    ),\n    type: measurementType(MobileVital.AppStartWarm),\n  },\n  [MobileVital.FramesTotal]: {\n    slug: 'frames_total',\n    name: t('Total Frames'),\n    description: t(\n      'Total frames is a count of the number of frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesTotal),\n  },\n  [MobileVital.FramesSlow]: {\n    slug: 'frames_slow',\n    name: t('Slow Frames'),\n    description: t(\n      'Slow frames is a count of the number of slow frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesSlow),\n  },\n  [MobileVital.FramesFrozen]: {\n    slug: 'frames_frozen',\n    name: t('Frozen Frames'),\n    description: t(\n      'Frozen frames is a count of the number of frozen frames recorded within a transaction.'\n    ),\n    type: measurementType(MobileVital.FramesFrozen),\n  },\n  [MobileVital.FramesSlowRate]: {\n    slug: 'frames_slow_rate',\n    name: t('Slow Frames Rate'),\n    description: t(\n      'Slow Frames Rate is the percentage of frames recorded within a transaction that is considered slow.'\n    ),\n    type: measurementType(MobileVital.FramesSlowRate),\n  },\n  [MobileVital.FramesFrozenRate]: {\n    slug: 'frames_frozen_rate',\n    name: t('Frozen Frames Rate'),\n    description: t(\n      'Frozen Frames Rate is the percentage of frames recorded within a transaction that is considered frozen.'\n    ),\n    type: measurementType(MobileVital.FramesFrozenRate),\n  },\n  [MobileVital.StallCount]: {\n    slug: 'stall_count',\n    name: t('Stalls'),\n    description: t(\n      'Stalls is the number of times the application stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallCount),\n  },\n  [MobileVital.StallTotalTime]: {\n    slug: 'stall_total_time',\n    name: t('Total Stall Time'),\n    description: t(\n      'Stall Total Time is the total amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallTotalTime),\n  },\n  [MobileVital.StallLongestTime]: {\n    slug: 'stall_longest_time',\n    name: t('Longest Stall Time'),\n    description: t(\n      'Stall Longest Time is the longest amount of time the application is stalled within a transaction.'\n    ),\n    type: measurementType(MobileVital.StallLongestTime),\n  },\n  [MobileVital.StallPercentage]: {\n    slug: 'stall_percentage',\n    name: t('Stall Percentage'),\n    description: t(\n      'Stall Percentage is the percentage of the transaction duration the application was stalled.'\n    ),\n    type: measurementType(MobileVital.StallPercentage),\n  },\n};\n\nexport enum Browser {\n  CHROME = 'Chrome',\n  EDGE = 'Edge',\n  OPERA = 'Opera',\n  FIREFOX = 'Firefox',\n  SAFARI = 'Safari',\n  IE = 'IE',\n}\n"],"names":["MINIMAP_HEIGHT","MINIMAP_SPAN_BAR_HEIGHT","NUM_OF_SPANS_FIT_IN_MINI_MAP","TIME_AXIS_HEIGHT","MINIMAP_CONTAINER_HEIGHT","VIEW_HANDLE_HEIGHT","MERGE_LABELS_THRESHOLD_PERCENT","TOGGLE_BUTTON_MAX_WIDTH","TOGGLE_BORDER_BOX","ConnectorBar","p","orphanBranch","theme","border","TreeConnector","isLast","ROW_HEIGHT","borderRadius","TreeToggle","space","dropShadowLightest","getToggleTheme","TreeToggleContainer","zIndex","traceView","spanTreeToggler","TreeToggleIcon","IconChevron","WEB_VITAL_DETAILS","WebVital","slug","name","t","acronym","description","poorThreshold","type","measurementType","MOBILE_VITAL_DETAILS","MobileVital","Browser"],"sourceRoot":""}