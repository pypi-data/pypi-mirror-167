{"version":3,"file":"chunks/app_components_issues_compactIssue_tsx-app_views_asyncView_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/events/errorLevel.tsx","webpack:///./app/components/issues/compactIssue.tsx","webpack:///./app/views/asyncView.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nimport {Level} from 'sentry/types';\n\nconst DEFAULT_SIZE = '13px';\n\ntype Props = {\n  level?: Level;\n  size?: string;\n};\n\nconst ErrorLevel = styled('span')<Props>`\n  padding: 0;\n  position: relative;\n  width: ${p => p.size || DEFAULT_SIZE};\n  height: ${p => p.size || DEFAULT_SIZE};\n  text-indent: -9999em;\n  display: inline-block;\n  border-radius: 50%;\n  flex-shrink: 0;\n  background-color: ${p => (p.level ? p.theme.level[p.level] : p.theme.level.error)};\n`;\n\nexport default ErrorLevel;\n","import {Component, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {bulkUpdate} from 'sentry/actionCreators/group';\nimport {addLoadingMessage, clearIndicators} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport EventOrGroupTitle from 'sentry/components/eventOrGroupTitle';\nimport ErrorLevel from 'sentry/components/events/errorLevel';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconChat, IconMute, IconStar} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport GroupStore from 'sentry/stores/groupStore';\nimport space from 'sentry/styles/space';\nimport {BaseGroup, Organization} from 'sentry/types';\nimport {getMessage} from 'sentry/utils/events';\nimport {Aliases} from 'sentry/utils/theme';\nimport withApi from 'sentry/utils/withApi';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype HeaderProps = {\n  data: BaseGroup;\n  organization: Organization;\n  projectId: string;\n  eventId?: string;\n};\n\nfunction CompactIssueHeader({data, organization, projectId, eventId}: HeaderProps) {\n  const basePath = `/organizations/${organization.slug}/issues/`;\n\n  const issueLink = eventId\n    ? `/organizations/${organization.slug}/projects/${projectId}/events/${eventId}/`\n    : `${basePath}${data.id}/`;\n\n  const commentColor: keyof Aliases =\n    data.subscriptionDetails && data.subscriptionDetails.reason === 'mentioned'\n      ? 'success'\n      : 'textColor';\n\n  return (\n    <Fragment>\n      <IssueHeaderMetaWrapper>\n        <StyledErrorLevel size=\"12px\" level={data.level} title={data.level} />\n        <h3 className=\"truncate\">\n          <IconLink to={issueLink || ''}>\n            {data.status === 'ignored' && <IconMute size=\"xs\" />}\n            {data.isBookmarked && <IconStar isSolid size=\"xs\" />}\n            <EventOrGroupTitle data={data} />\n          </IconLink>\n        </h3>\n      </IssueHeaderMetaWrapper>\n      <div className=\"event-extra\">\n        <span className=\"project-name\">\n          <strong>{data.project.slug}</strong>\n        </span>\n        {data.numComments !== 0 && (\n          <span>\n            <IconLink to={`${basePath}${data.id}/activity/`} className=\"comments\">\n              <IconChat size=\"xs\" color={commentColor} />\n              <span className=\"tag-count\">{data.numComments}</span>\n            </IconLink>\n          </span>\n        )}\n        <span className=\"culprit\">{getMessage(data)}</span>\n      </div>\n    </Fragment>\n  );\n}\n\ntype GroupTypes = ReturnType<typeof GroupStore.get>;\n\n/**\n * Type assertion to disambiguate GroupTypes\n *\n * The GroupCollapseRelease type isn't compatible with BaseGroup\n */\nfunction isGroup(maybe: GroupTypes): maybe is BaseGroup {\n  return (maybe as BaseGroup).status !== undefined;\n}\n\ntype Props = {\n  api: Client;\n  id: string;\n  organization: Organization;\n  data?: BaseGroup;\n  eventId?: string;\n};\n\ntype State = {\n  issue?: GroupTypes;\n};\n\nclass CompactIssue extends Component<Props, State> {\n  state: State = {\n    issue: this.props.data || GroupStore.get(this.props.id),\n  };\n\n  componentWillReceiveProps(nextProps: Props) {\n    if (nextProps.id !== this.props.id) {\n      this.setState({\n        issue: GroupStore.get(this.props.id),\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this.listener();\n  }\n\n  listener = GroupStore.listen(\n    (itemIds: Set<string>) => this.onGroupChange(itemIds),\n    undefined\n  );\n\n  onGroupChange(itemIds: Set<string>) {\n    if (!itemIds.has(this.props.id)) {\n      return;\n    }\n    const id = this.props.id;\n    const issue = GroupStore.get(id);\n    this.setState({\n      issue,\n    });\n  }\n\n  onUpdate(data: Record<string, string>) {\n    const issue = this.state.issue;\n    if (!issue) {\n      return;\n    }\n    addLoadingMessage(t('Saving changes\\u2026'));\n\n    bulkUpdate(\n      this.props.api,\n      {\n        orgId: this.props.organization.slug,\n        projectId: issue.project.slug,\n        itemIds: [issue.id],\n        data,\n      },\n      {\n        complete: () => {\n          clearIndicators();\n        },\n      }\n    );\n  }\n\n  render() {\n    const issue = this.state.issue;\n    const {organization} = this.props;\n    if (!isGroup(issue)) {\n      return null;\n    }\n\n    let className = 'issue';\n    if (issue.isBookmarked) {\n      className += ' isBookmarked';\n    }\n    if (issue.hasSeen) {\n      className += ' hasSeen';\n    }\n    if (issue.status === 'resolved') {\n      className += ' isResolved';\n    }\n    if (issue.status === 'ignored') {\n      className += ' isIgnored';\n    }\n\n    return (\n      <IssueRow className={className}>\n        <CompactIssueHeader\n          data={issue}\n          organization={organization}\n          projectId={issue.project.slug}\n          eventId={this.props.eventId}\n        />\n        {this.props.children}\n      </IssueRow>\n    );\n  }\n}\n\nexport default withApi(withOrganization(CompactIssue));\n\nconst IssueHeaderMetaWrapper = styled('div')`\n  display: flex;\n  align-items: center;\n`;\n\nconst StyledErrorLevel = styled(ErrorLevel)`\n  display: block;\n  margin-right: ${space(1)};\n`;\n\nconst IconLink = styled(Link)`\n  & > svg {\n    margin-right: ${space(0.5)};\n  }\n`;\n\nconst IssueRow = styled(PanelItem)`\n  padding-top: ${space(1.5)};\n  padding-bottom: ${space(0.75)};\n  flex-direction: column;\n`;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\ntype AsyncViewState = AsyncComponent['state'];\ntype AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n"],"names":["DEFAULT_SIZE","p","size","level","theme","error","CompactIssueHeader","data","organization","projectId","eventId","basePath","slug","issueLink","id","commentColor","subscriptionDetails","reason","Fragment","IssueHeaderMetaWrapper","StyledErrorLevel","title","className","IconLink","to","status","isBookmarked","isSolid","project","numComments","color","getMessage","CompactIssue","Component","issue","this","props","GroupStore","itemIds","onGroupChange","undefined","componentWillReceiveProps","nextProps","setState","componentWillUnmount","listener","has","onUpdate","state","addLoadingMessage","t","bulkUpdate","api","orgId","complete","clearIndicators","render","hasSeen","IssueRow","children","withApi","withOrganization","ErrorLevel","space","Link","PanelItem","AsyncView","AsyncComponent","getTitle","renderComponent"],"sourceRoot":""}