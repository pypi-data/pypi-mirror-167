# coding: utf-8

"""
    UBIKA WAAP Gateway and Cloud API

    The UBIKA's WAAP management API provides a REST/JSON programming interface. It allows automation and scripting of WAAP administration tasks, such as management of reverse proxies and tunnels. The API documentation is shipped with the product itself. Once the product installed, you can access the documentation on the following URL https://ManagementWAAP:3001/api/v1/doc/  # noqa: E501

    The version of the OpenAPI document: 1.0.9
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from ubika_waap_api_client.configuration import Configuration


class UpdateSecurityExceptionProfileMatchingPartsSuccessArray(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'part': 'str',
        'key_operator': 'str',
        'key': 'str',
        'value_type': 'str',
        'value_operator': 'str',
        'value': 'str'
    }

    attribute_map = {
        'part': 'part',
        'key_operator': 'keyOperator',
        'key': 'key',
        'value_type': 'valueType',
        'value_operator': 'valueOperator',
        'value': 'value'
    }

    def __init__(self, part=None, key_operator=None, key=None, value_type=None, value_operator=None, value=None, local_vars_configuration=None):  # noqa: E501
        """UpdateSecurityExceptionProfileMatchingPartsSuccessArray - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._part = None
        self._key_operator = None
        self._key = None
        self._value_type = None
        self._value_operator = None
        self._value = None
        self.discriminator = None

        if part is not None:
            self.part = part
        if key_operator is not None:
            self.key_operator = key_operator
        if key is not None:
            self.key = key
        if value_type is not None:
            self.value_type = value_type
        if value_operator is not None:
            self.value_operator = value_operator
        if value is not None:
            self.value = value

    @property
    def part(self):
        """Gets the part of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The part of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._part

    @part.setter
    def part(self, part):
        """Sets the part of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param part: The part of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._part = part

    @property
    def key_operator(self):
        """Gets the key_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The key_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._key_operator

    @key_operator.setter
    def key_operator(self, key_operator):
        """Sets the key_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param key_operator: The key_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._key_operator = key_operator

    @property
    def key(self):
        """Gets the key of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The key of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param key: The key of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._key = key

    @property
    def value_type(self):
        """Gets the value_type of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The value_type of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._value_type

    @value_type.setter
    def value_type(self, value_type):
        """Sets the value_type of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param value_type: The value_type of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._value_type = value_type

    @property
    def value_operator(self):
        """Gets the value_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The value_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._value_operator

    @value_operator.setter
    def value_operator(self, value_operator):
        """Sets the value_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param value_operator: The value_operator of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._value_operator = value_operator

    @property
    def value(self):
        """Gets the value of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501


        :return: The value of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.


        :param value: The value of this UpdateSecurityExceptionProfileMatchingPartsSuccessArray.  # noqa: E501
        :type: str
        """

        self._value = value

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateSecurityExceptionProfileMatchingPartsSuccessArray):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, UpdateSecurityExceptionProfileMatchingPartsSuccessArray):
            return True

        return self.to_dict() != other.to_dict()
