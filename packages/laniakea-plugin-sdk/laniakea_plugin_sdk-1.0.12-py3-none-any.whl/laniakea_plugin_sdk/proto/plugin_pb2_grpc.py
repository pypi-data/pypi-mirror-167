# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import laniakea_plugin_sdk.proto.plugin_pb2 as plugin__pb2


class DatasourceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.StartRecord = channel.unary_stream(
                '/proto.Datasource/StartRecord',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.Frame.FromString,
                )
        self.StopRecord = channel.unary_unary(
                '/proto.Datasource/StopRecord',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.Empty.FromString,
                )
        self.Stop = channel.unary_unary(
                '/proto.Datasource/Stop',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.Empty.FromString,
                )
        self.PushVersion = channel.unary_unary(
                '/proto.Datasource/PushVersion',
                request_serializer=plugin__pb2.VersionNumber.SerializeToString,
                response_deserializer=plugin__pb2.Empty.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/proto.Datasource/GetVersion',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.VersionNumber.FromString,
                )


class DatasourceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def StartRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def StopRecord(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DatasourceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'StartRecord': grpc.unary_stream_rpc_method_handler(
                    servicer.StartRecord,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.Frame.SerializeToString,
            ),
            'StopRecord': grpc.unary_unary_rpc_method_handler(
                    servicer.StopRecord,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.Empty.SerializeToString,
            ),
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.Empty.SerializeToString,
            ),
            'PushVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.PushVersion,
                    request_deserializer=plugin__pb2.VersionNumber.FromString,
                    response_serializer=plugin__pb2.Empty.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.VersionNumber.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Datasource', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Datasource(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def StartRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto.Datasource/StartRecord',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.Frame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def StopRecord(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Datasource/StopRecord',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Datasource/Stop',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Datasource/PushVersion',
            plugin__pb2.VersionNumber.SerializeToString,
            plugin__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Datasource/GetVersion',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.VersionNumber.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Stop = channel.unary_unary(
                '/proto.Controller/Stop',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.Empty.FromString,
                )
        self.Command = channel.unary_stream(
                '/proto.Controller/Command',
                request_serializer=plugin__pb2.Frame.SerializeToString,
                response_deserializer=plugin__pb2.Frame.FromString,
                )
        self.PushVersion = channel.unary_unary(
                '/proto.Controller/PushVersion',
                request_serializer=plugin__pb2.VersionNumber.SerializeToString,
                response_deserializer=plugin__pb2.Empty.FromString,
                )
        self.GetVersion = channel.unary_unary(
                '/proto.Controller/GetVersion',
                request_serializer=plugin__pb2.Empty.SerializeToString,
                response_deserializer=plugin__pb2.VersionNumber.FromString,
                )


class ControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Stop(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Command(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PushVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Stop': grpc.unary_unary_rpc_method_handler(
                    servicer.Stop,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.Empty.SerializeToString,
            ),
            'Command': grpc.unary_stream_rpc_method_handler(
                    servicer.Command,
                    request_deserializer=plugin__pb2.Frame.FromString,
                    response_serializer=plugin__pb2.Frame.SerializeToString,
            ),
            'PushVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.PushVersion,
                    request_deserializer=plugin__pb2.VersionNumber.FromString,
                    response_serializer=plugin__pb2.Empty.SerializeToString,
            ),
            'GetVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetVersion,
                    request_deserializer=plugin__pb2.Empty.FromString,
                    response_serializer=plugin__pb2.VersionNumber.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'proto.Controller', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Controller(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Stop(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Controller/Stop',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Command(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/proto.Controller/Command',
            plugin__pb2.Frame.SerializeToString,
            plugin__pb2.Frame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def PushVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Controller/PushVersion',
            plugin__pb2.VersionNumber.SerializeToString,
            plugin__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/proto.Controller/GetVersion',
            plugin__pb2.Empty.SerializeToString,
            plugin__pb2.VersionNumber.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
