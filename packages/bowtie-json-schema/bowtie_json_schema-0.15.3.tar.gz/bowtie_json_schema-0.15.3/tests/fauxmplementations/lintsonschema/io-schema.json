{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/python-jsonschema/bowtie/1/io-schema.json",
  "title": "Bowtie IO Protocol",
  "description": "Input/output specification for Bowtie, a meta-validator for JSON Schema validator implementations",

  "$defs": {
    "version": { "type": "integer", "const": 1 },

    "command": {
      "type": "object",
      "required": ["cmd"],
      "unevaluatedProperties": false,
      "oneOf": [
        { "$ref": "#/$defs/command/$defs/start" },
        { "$ref": "#/$defs/command/$defs/stop" },
        { "$ref": "#/$defs/command/$defs/run" }
      ],

      "$defs": {
        "start": {
          "description": "Sent once at program start to the implementation to indicate Bowtie is starting to send test cases.",

          "required": ["version"],
          "properties": {
            "cmd": { "const": "start" },
            "version": {
              "description": "The version of the Bowtie protocol which is intended.",
              "$ref": "#/$defs/version"
            }
          },
          "$defs": {
            "response": {
              "type": "object",
              "required": ["ready", "version", "implementation"],
              "properties": {
                "ready": {
                  "description": "Confirmation that the implementation is ready.",
                  "const": true
                },
                "version": {
                  "description": "Confirmation of the Bowtie version",
                  "$ref": "#/$defs/version"
                },
                "implementation": {
                  "description": "Metadata about the implementation. The below properties are encouraged, but additional metadata can also be passed",
                  "type": "object",
                  "properties": {
                    "language": {
                      "description": "The implementation language (e.g. C++, Python, etc.)",
                      "type": "string"
                    },
                    "name": {
                      "description": "The name of the implementation itself",
                      "type": "string"
                    },
                    "version": {
                      "description": "The implementation version",
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },

        "run": {
          "description": "Sent to implementations for each test case.",

          "required": ["seq", "case"],
          "properties": {
            "cmd": { "const": "run" },
            "seq": {
              "description": "A sequence identifier for the test case. It must be passed along as-is in the response."
            },
            "case": { "$ref": "#/$defs/case" }
          },
          "$defs": {
            "response": {
              "type": "object",
              "required": ["seq"],
              "unevaluatedProperties": false,
              "properties": {
                "seq": {
                  "description": "The unchanged sequence identifier originally provided in the request."
                }
              },
              "oneOf": [
                {
                  "$ref": "#/$defs/command/$defs/run/$defs/response/$defs/result"
                },
                {
                  "$ref": "#/$defs/command/$defs/run/$defs/response/$defs/skipped"
                },
                {
                  "$ref": "#/$defs/command/$defs/run/$defs/response/$defs/errored"
                }
              ],
              "$defs": {
                "result": {
                  "description": "Signal that the implementation ran the test case (though may have skipped tests within it) and got the provided result.",

                  "required": ["results"],
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "oneOf": [
                          {
                            "properties": {
                              "valid": { "type": "boolean" }
                            },
                            "required": ["valid"],
                            "additionalProperties": false
                          },
                          {
                            "$ref": "#/$defs/command/$defs/run/$defs/response/$defs/skipped"
                          },
                          {
                            "$ref": "#/$defs/command/$defs/run/$defs/response/$defs/errored"
                          }
                        ]
                      }
                    }
                  }
                },
                "skipped": {
                  "description": "Signal that the implementation skipped the test case or test (typically because it is a known bug). Either an issue URL or a human-readable message is encouraged to explain the skip.",

                  "required": ["skipped"],
                  "properties": {
                    "skipped": { "const": true },
                    "message": {
                      "description": "A human-readable message passed back from the implementation explaining why the skip occurred.",
                      "type": "string"
                    },
                    "issue_url": {
                      "description": "An optional link to a relevant issue on the implementation's bug tracker.",
                      "type": "string",
                      "format": "url"
                    }
                  },
                  "additionalProperties": false
                },
                "errored": {
                  "description": "Signal that the implementation encountered an internal error (which it caught). Additional context can be passed along (e.g. a traceback or exception detail).",

                  "required": ["errored"],
                  "properties": {
                    "errored": { "const": true },
                    "context": {
                      "description": "Additional implementation-specific or language-specific context available when the error was caught."
                    }
                  },
                  "additionalProperties": false
                }
              }
            }
          }
        },

        "stop": {
          "description": "Sent once at program end to the implementation to indicate it should shut down.",

          "properties": {
            "cmd": { "const": "stop" }
          },
          "$defs": {
            "response": {
              "additionalProperties": false
            }
          }
        }
      }
    },

    "case": {
      "description": "An individual test case, consisting of a single schema and one or more instances to validate under it",

      "type": "object",
      "required": ["description", "schema", "tests"],
      "properties": {
        "description": {
          "description": "A (human-readable) short description of this test case",
          "type": "string"
        },
        "comment": {
          "description": "Any additional comments about the test case",
          "type": "string"
        },
        "schema": {
          "description": "A valid JSON Schema.",
          "$ref": "https://json-schema.org/draft/2020-12/schema"
        },
        "tests": {
          "description": "A set of related tests all using the same schema",
          "type": "array",
          "items": { "$ref": "#/$defs/test" },
          "minItems": 1
        }
      },
      "additionalProperties": false
    },
    "test": {
      "description": "A single test",

      "type": "object",
      "required": ["description", "instance"],
      "properties": {
        "description": {
          "description": "The test description, briefly explaining which behavior it exercises",
          "type": "string"
        },
        "comment": {
          "description": "Any additional comments about the test",
          "type": "string"
        },
        "instance": {
          "description": "The instance which should be validated against the schema in \"schema\"."
        },
        "valid": {
          "description": "Optionally, whether validation of this instance is expected to be valid or not. If unprovided, implementation results will be reported without comparing against an expected value.",
          "type": "boolean"
        }
      },
      "additionalProperties": false
    }
  }
}
