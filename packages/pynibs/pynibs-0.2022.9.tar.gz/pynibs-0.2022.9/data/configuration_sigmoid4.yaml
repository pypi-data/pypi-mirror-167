########################################################################################################################
# This configuration file can be used to set values in pynibs.Element() that influence the regression.                 #
# The values in this version are optimized for MEP data.                                                     #
########################################################################################################################
#
#
############################################## General regression concept ##############################################
# While trying to find the best fit, many possible regression functions are calculated and the best one is picked.
# Usually, that is the one that explains the most noise, meaning that the data points have a minimal distance to the
# regression function. The function sigmoid4 always looks like the following term, with varying coefficients:
##     y = y_0 + \frac{amp - y_0}{1+e^{-r(x-x_0)}}
##     (x0 : Horizontal shift along the abscissa)
##     (r : Slope parameter (steepness))
##     (amp : Maximum value the sigmoid converges to)
##     (y0 : Offset value of the sigmoid)
# Note: The fourth parameter y0 is the only difference between sigmoid and sigmoid4. It presents the possibility to
# factor in an offset in y-direction. Also, it is the only parameter that can be changed through the configfile at the
# moment (rest will be added).

# The usual approach is to start with a function described by some initial values (init_vals) and try out
# many other values within the value limits (limits), minimizing the distance between regression function and real data.
# During refitting, different initial vales (calculated within the random_vals_init_range) are used to see whether a
# better result can be achieved.

############################################### Picking suitable values ################################################
# Initial values transforming the data-based y0 estimate:
init_vals: # y0 = y0*m + t
  m: 1
  t: 0
# Strategy: Pick the values you may expect the result to have, or that are not far-fetched. Picking reasonable initial
# values can speed up the fitting procedure.

# Values that limit all possible y0 manifestations:
limits: # y0 \in [c, m+t]
  c: 1.0e-12
  m: 1
  t: 0
# Strategy: Rather wide range recommended, since a few points could have very extreme values and therefore be
# approximated by a function very different from the expected values. E.g. a multiple of the presented data range.
# (Note: This should not be used to factor out outliers, since an approximation will still be calculated, but with too
# narrow limits it will just be a very bad one.)

# Value range for the calculation of new initial values for y0 during refitting:
random_vals_init_range: # y \in [c, m+t]
  c: 1.0e-12
  m: 3
  t: 0
# Strategy: During refitting, new initial values are calculated by picking a random number between these lower and upper
# bounds, so the range should be a lot smaller than 'limits' and somewhat symmetrical around the 'init_vals'.


# Example usage:
##
##        configfile = configuration_sigmoid4.yaml
##        with open(configfile, "r") as yamlfile:
##            config = yaml.load(yamlfile, Loader=yaml.FullLoader)
##
##        pynibs.regress_data(...,
##                           **configfile)