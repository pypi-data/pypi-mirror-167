# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2022, PaddleTS
# This file is distributed under the same license as the PaddleTS package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PaddleTS \n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-07-20 16:10+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../source/modules/pipeline/overview.rst:3
#: 05867f6355ff4735baab0ad8ff8aa202
msgid "Pipeline"
msgstr ""

#: ../../source/modules/pipeline/overview.rst:5
#: 3e2170c8a5e24cd4995394d542c15244
msgid ""
"The pipeline is designed to build a workflow for time series modeling "
"which may be comprised of a set of `transformers "
"<../transform/overview.html>`_ and a model."
msgstr ""
"`Pipeline` 可用于创建包含多个 `特征工程 <../transform/overview.html>`_ "
"方法与一个学习器的时序建模机器学习工作流。"

#: ../../source/modules/pipeline/overview.rst:9
#: 4dff3cea5e42423ab40593f6b0d3a060
msgid "1. Pipeline: Chain transformers"
msgstr "1. 组装特征工程工作流"

#: ../../source/modules/pipeline/overview.rst:11
#: 23074b36d53b4adb8f177fea663a8f29
msgid ""
"There is often a sequence of steps in processing the time series data. "
"Pipeline can be used for chaining multiple `transformers "
"<../transform/overview.html>`_ into one."
msgstr "时序数据预处理通常包含多个步骤。我们可将多个特征工程方法组装为一个Pipeline。"

#: ../../source/modules/pipeline/overview.rst:15
#: 4e7004704ce7470faca6c0cd42bc964f
msgid "1.1. Prepare data"
msgstr "1.1. 准备数据"

#: ../../source/modules/pipeline/overview.rst:79
#: 4e712c490e2942438c06c02ee413675e
msgid ""
"For this data, we might want to do anomaly detection on both observed co-"
"variates and known co-variates using `KSigma` then generate the time "
"feature using `TimeFeatureGenerator`."
msgstr ""
"对于上述数据的处理，我们可能希望利用 `KSigma` 对观察协变量与已知协变量做异常检测，然后利用 `TimeFeatureGenerator`"
" 生成时间特征。"

#: ../../source/modules/pipeline/overview.rst:83
#: 2b5ddbb732354feba461ccbb29602157
msgid "1.2. Construct"
msgstr "1.2. 构建"

#: ../../source/modules/pipeline/overview.rst:85
#: 30be059e15414436af7a5a6116b719bd
msgid ""
"The pipeline is built using a list of (key, value) pairs, where the key "
"is the class name of `transformers <../transform/overview.html>`_ and "
"value is the init parameter of `transformers "
"<../transform/overview.html>`_."
msgstr "`Pipeline` 使用包含 (key, value) 对的列表进行初始化。 key 是特征工程方法的类名，value 是此方法的初始化参数。"

#: ../../source/modules/pipeline/overview.rst:88
#: ../../source/modules/pipeline/overview.rst:135
#: 3701324de0fa4e94bb0646aecb3f957f 423180365248476789fd7a222bfdde95
msgid "This pipeline is comprised of the following:"
msgstr "该 `Pipeline` 由以下部分组成："

#: ../../source/modules/pipeline/overview.rst:90
#: ../../source/modules/pipeline/overview.rst:137
#: 5c905da836e64b2a9a0ef0797124ab3e 853e1e5bde1d41f599c04c12881a200b
msgid ""
"A `KSigma <../../api/paddlets.transform.ksigma.html>`_ transformer to "
"detect outliers."
msgstr "用于异常值检测的 `Ksigma <../../api/paddlets.transform.ksigma.html>`_ 特征工程方法。"

#: ../../source/modules/pipeline/overview.rst:91
#: ../../source/modules/pipeline/overview.rst:138
#: 1a2399c8c7a74069ab1fd04ce791ecb4 41eb2e2d051e4939b188cb2f81559858
msgid ""
"A `TimeFeatureGenerator "
"<../../api/paddlets.transform.time_feature.html>`_ transformer to "
"generate time features."
msgstr ""
"用于生成时间特征的 `TimeFeatureGenerator "
"<../../api/paddlets.transform.time_feature.html>`_ 特征工程方法。"

#: ../../source/modules/pipeline/overview.rst:100
#: 93ecdc5cede14beeb98cd85726ae2cac
msgid "1.3. Transform"
msgstr "1.3. 执行特征工程"

#: ../../source/modules/pipeline/overview.rst:102
#: 3efa8c0c42a740d4ab34b54d56d5b137
msgid "Fit pipeline and perform the transformation."
msgstr "拟合 `Pipeline` 并执行特征工程。"

#: ../../source/modules/pipeline/overview.rst:127
#: 263f31a9e88c455b97e5688710380ee7
msgid "2. Pipeline: Chain model"
msgstr "2. 组装含有学习器的工作流"

#: ../../source/modules/pipeline/overview.rst:129
#: 3f7fa19f8dea4c9bae9b36299e561209
msgid ""
"The last object of a pipeline may be a model, then you can only call "
"`fit` once on your data to `fit` whole steps in your pipeline."
msgstr ""
"`Pipeline` 的最后一个步骤可以是一个学习器，你仅需调用一次 `fit` 即可实现 `Pipeline` "
"中的各个特征工程方法与学习器对数据的拟合。"

#: ../../source/modules/pipeline/overview.rst:133
#: 81755e8a90994f8bbed2260499618542
msgid "2.1. Construct"
msgstr "2.1. 构建"

#: ../../source/modules/pipeline/overview.rst:139
#: 4196cf652f404998aea62e932771a3dd
msgid ""
"A `MLPRegressor <../../api/paddlets.models.dl.paddlepaddle.mlp.html>`_ to"
" build a model on given time series data."
msgstr ""
"用于对时序数据建立时序模型的 `MLPRegressor "
"<../../api/paddlets.models.dl.paddlepaddle.mlp.html>`_ 学习器。"

#: ../../source/modules/pipeline/overview.rst:153
#: 0bfec9f9836f4a4899ef888265482e2b
msgid "2.2. Fit pipeline and make predictions"
msgstr "2.2. 拟合 `Pipeline` 并执行预测"

#: ../../source/modules/pipeline/overview.rst:155
#: 5e390889f66a47e39b8965b90fbbc39f
msgid ""
"You can use `pipeline.predict` for time series forecasting or use "
"`recursive_predict` for recursive multi-step time series forecasting "
"after fitting the pipeline:"
msgstr ""
"对于拟合后的 `Pipeline`，你可以使用 `pipeline.predict` 进行时序预测或使用 `recursive_predict` "
"进行多步时序预测。"

#: ../../source/modules/pipeline/overview.rst:168
#: 56a77520221c42739991349c7084cff3
msgid "2.3. Recursive predict"
msgstr "2.3. 递归多步预测"

#: ../../source/modules/pipeline/overview.rst:170
#: a354318ae5494b9f82a572c307df384b
msgid ""
"The recursive strategy involves applying `pipeline.predict` method "
"iteratively for multi-step time series forecasting. The predicted results"
" from the current call will be appended to the given `TSDataset` object "
"and will appear in the loopback window for the next call."
msgstr ""
"递归多步预测的策略是：一步步利用 `pipeline.predict` 方法实现多步时序预测。当前时刻的预测结果会被添加至 `TSDataset` 时序数据集"
" 的目标列中，并在模型预测时，被添加至历史目标值的滑动窗口中用于下一时刻预测。"

#: ../../source/modules/pipeline/overview.rst:174
#: 1a4a5f635b844376a7c6092d24ca2cde
msgid ""
"Note that each call of `pipeline.predict` will return a result of length "
"`out_chunk_len`, so `pipeline.recursive_predict` will be called "
"ceiling(`predict_length`/`out_chunk_len`) times to meet the required "
"length. For example, the `out_chunk_length` of the pipeline mentioned "
"before is 2, but `recursive_predict` allows you to set `predict_length` "
"as 5 or more:"
msgstr ""
"注意：每次调用 `pipeline.predict` 的输出长度为 `out_chunk_len`， 所以 `pipeline.predict` "
"会被调用 ceiling(`predict_length`/`out_chunk_len`) 次，以满足多步时序的输出长度需求。例如，上述例子中的"
" `Pipeline` 的 `out_chunk_length` 是2，而 `recursive_predict` 允许你将 "
"`predict_length` 设置为5或者更多："

#: ../../source/modules/pipeline/overview.rst:187
#: d2e858d6d97e43f0bd66147330040322
msgid ""
"Note that `pipeline.recursive_predict` is not supported when "
"`pipeline.skip_chunk` != 0."
msgstr "注意： `pipeline.recursive_predict` 函数在 `pipeline.skip_chunk` != 0 时，无法使用。"

#: ../../source/modules/pipeline/overview.rst:189
#: 65f740ea724343aaac58d11947976714
msgid ""
"**Note**: The prediction errors are accumulated such that the performance"
" of prediction will degrade as the prediction time horizon increases."
msgstr "**注意**： 在递归预测中，预测误差会被累计，因此预测性能会随着预测长度的增加而下降。"

#: ../../source/modules/pipeline/overview.rst:192
#: b7ddb2d304b24296af55b5d79ee95516
msgid ""
"For detailed usage, please refer to `API: pipeline.recursive_predict "
"<../../api/paddlets.pipeline.pipeline.html#paddlets.pipeline.pipeline.Pipeline.recursive_predict>`_"
msgstr ""
"更多使用细节，请参考：`API: pipeline.recursive_predict "
"<../../api/paddlets.pipeline.pipeline.html#paddlets.pipeline.pipeline.Pipeline.recursive_predict>`_"

