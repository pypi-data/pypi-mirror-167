{
  "version": 3,
  "sources": ["../../../utils/utils.ts"],
  "sourcesContent": ["// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt GNU-AGPL-3.0-or-later\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n\"use strict\";\nconst elById = (id: string) => document.getElementById(id);\n\nlet lastLocation = String(window.location);\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction getLastLocation(): string {\n    return lastLocation;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setLastLocation(url: string): void {\n    lastLocation = url;\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction post(\n    url: string,\n    params = {},\n    ondata = console.log,\n    onerror = console.error,\n): void {\n    fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(params),\n        headers: {\n            // deno-fmt-ignore\n            \"Accept\": \"application/json\",\n            \"Content-Type\": \"application/json\",\n        },\n    })\n        .then((response) => response.json())\n        .catch(onerror)\n        .then(ondata)\n        .catch(onerror);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction get(\n    url: string,\n    params = {},\n    ondata = console.log,\n    onerror = console.error,\n): void {\n    if (params) {\n        url += \"?\" + (new URLSearchParams(params)).toString();\n    }\n    fetch(url, { method: \"GET\", headers: { Accept: \"application/json\" } })\n        .then(\n            (response) => response.json(),\n        )\n        .catch(onerror)\n        .then(ondata)\n        .catch(onerror);\n}\n\nconst PopStateHandlers = {\n    replaceURL: (state: object) => {\n        // reload if the last location was not the one that got replaced\n        lastLocation === state[\"origin\"] || window.location.reload();\n    },\n    // always reload the location if URLParamChange\n    URLParamChange: () => window.location.reload(),\n};\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction setURLParam(\n    param: string,\n    value: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    state: any,\n    stateType = \"URLParamChange\",\n    push = true,\n) {\n    // log(\"setURLParam\", param, value, state, onpopstate);\n    const urlParams = new URLSearchParams(window.location.search);\n    urlParams.set(param, value);\n    const newUrl =\n        `${window.location.origin}${window.location.pathname}?${urlParams.toString()}`;\n    // log(\"newUrl\", newUrl);\n    state[\"stateType\"] = stateType;\n    if (push && newUrl !== window.location.href) {\n        history.pushState(state, newUrl, newUrl);\n    } else {\n        history.replaceState(state, newUrl, newUrl);\n    }\n    lastLocation = window.location.href;\n    return newUrl;\n}\n\nfunction scrollToId() {\n    if (window.location.hash === \"\") {\n        return;\n    }\n    const header = elById(\"header\");\n    if (!header) {\n        return;\n    }\n    const el = document.querySelector(window.location.hash);\n    if (!el) {\n        return;\n    }\n\n    window.scrollBy(\n        0,\n        el.getBoundingClientRect().top - Math.floor(\n            parseFloat(getComputedStyle(header).height),\n        ),\n    );\n}\n// scroll after few ms so the scroll is right on page load\nsetTimeout(scrollToId, 4);\nwindow.onhashchange = scrollToId;\n\nwindow.onpopstate = (event: PopStateEvent) => {\n    if (lastLocation.split(\"#\")[0] === window.location.href.split(\"#\")[0]) {\n        // Only hash changed\n        lastLocation = window.location.href;\n        scrollToId();\n        return;\n    }\n    if (\n        event.state &&\n        event.state[\"stateType\"] &&\n        PopStateHandlers[event.state[\"stateType\"]]\n    ) {\n        PopStateHandlers[event.state[\"stateType\"]](event);\n        lastLocation = window.location.href;\n        event.preventDefault();\n        scrollToId();\n        return;\n    }\n    console.error(\"Couldn't handle state. \", event.state);\n    lastLocation = window.location.href;\n    window.location.reload();\n};\n// @license-end\n"],
  "mappings": "aAAA;AAIA,MAAM,OAAUA,GAAe,SAAS,eAAeA,CAAE,EAEzD,IAAI,aAAe,OAAO,OAAO,QAAQ,EAGzC,SAAS,iBAA0B,CAC/B,OAAO,YACX,CAGA,SAAS,gBAAgBC,EAAmB,CACxC,aAAeA,CACnB,CAGA,SAAS,KACLA,EACAC,EAAS,CAAC,EACVC,EAAS,QAAQ,IACjBC,EAAU,QAAQ,MACd,CACJ,MAAMH,EAAK,CACP,OAAQ,OACR,KAAM,KAAK,UAAUC,CAAM,EAC3B,QAAS,CAEL,OAAU,mBACV,eAAgB,kBACpB,CACJ,CAAC,EACI,KAAMG,GAAaA,EAAS,KAAK,CAAC,EAClC,MAAMD,CAAO,EACb,KAAKD,CAAM,EACX,MAAMC,CAAO,CACtB,CAGA,SAAS,IACLH,EACAC,EAAS,CAAC,EACVC,EAAS,QAAQ,IACjBC,EAAU,QAAQ,MACd,CACAF,IACAD,GAAO,IAAO,IAAI,gBAAgBC,CAAM,EAAG,SAAS,GAExD,MAAMD,EAAK,CAAE,OAAQ,MAAO,QAAS,CAAE,OAAQ,kBAAmB,CAAE,CAAC,EAChE,KACII,GAAaA,EAAS,KAAK,CAChC,EACC,MAAMD,CAAO,EACb,KAAKD,CAAM,EACX,MAAMC,CAAO,CACtB,CAEA,MAAM,iBAAmB,CACrB,WAAaE,GAAkB,CAE3B,eAAiBA,EAAM,QAAa,OAAO,SAAS,OAAO,CAC/D,EAEA,eAAgB,IAAM,OAAO,SAAS,OAAO,CACjD,EAGA,SAAS,YACLC,EACAC,EAEAF,EACAG,EAAY,iBACZC,EAAO,GACT,CAEE,MAAMC,EAAY,IAAI,gBAAgB,OAAO,SAAS,MAAM,EAC5DA,EAAU,IAAIJ,EAAOC,CAAK,EAC1B,MAAMI,EACF,GAAG,OAAO,SAAS,SAAS,OAAO,SAAS,YAAYD,EAAU,SAAS,IAE/E,OAAAL,EAAM,UAAeG,EACjBC,GAAQE,IAAW,OAAO,SAAS,KACnC,QAAQ,UAAUN,EAAOM,EAAQA,CAAM,EAEvC,QAAQ,aAAaN,EAAOM,EAAQA,CAAM,EAE9C,aAAe,OAAO,SAAS,KACxBA,CACX,CAEA,SAAS,YAAa,CAClB,GAAI,OAAO,SAAS,OAAS,GACzB,OAEJ,MAAMC,EAAS,OAAO,QAAQ,EAC9B,GAAI,CAACA,EACD,OAEJ,MAAMC,EAAK,SAAS,cAAc,OAAO,SAAS,IAAI,EAClD,CAACA,GAIL,OAAO,SACH,EACAA,EAAG,sBAAsB,EAAE,IAAM,KAAK,MAClC,WAAW,iBAAiBD,CAAM,EAAE,MAAM,CAC9C,CACJ,CACJ,CAEA,WAAW,WAAY,CAAC,EACxB,OAAO,aAAe,WAEtB,OAAO,WAAcE,GAAyB,CAC1C,GAAI,aAAa,MAAM,GAAG,EAAE,KAAO,OAAO,SAAS,KAAK,MAAM,GAAG,EAAE,GAAI,CAEnE,aAAe,OAAO,SAAS,KAC/B,WAAW,EACX,MACJ,CACA,GACIA,EAAM,OACNA,EAAM,MAAM,WACZ,iBAAiBA,EAAM,MAAM,WAC/B,CACE,iBAAiBA,EAAM,MAAM,WAAcA,CAAK,EAChD,aAAe,OAAO,SAAS,KAC/BA,EAAM,eAAe,EACrB,WAAW,EACX,MACJ,CACA,QAAQ,MAAM,0BAA2BA,EAAM,KAAK,EACpD,aAAe,OAAO,SAAS,KAC/B,OAAO,SAAS,OAAO,CAC3B,EACA;",
  "names": ["id", "url", "params", "ondata", "onerror", "response", "state", "param", "value", "stateType", "push", "urlParams", "newUrl", "header", "el", "event"]
}
