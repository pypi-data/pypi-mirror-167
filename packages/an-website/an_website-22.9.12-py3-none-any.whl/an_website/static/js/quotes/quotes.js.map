{
  "version": 3,
  "sources": ["../../../quotes/quotes.ts"],
  "sourcesContent": ["// @license magnet:?xt=urn:btih:0b31508aeb0634b347b8270c7bee4d411b5d4109&dn=agpl-3.0.txt GNU-AGPL-3.0-or-later\n/* eslint-disable @typescript-eslint/no-unsafe-argument */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\n/* eslint-disable @typescript-eslint/no-unsafe-call */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-return */\n/* eslint-disable @typescript-eslint/restrict-template-expressions */\n\"use strict\";\nfunction startQuotes() {\n    const nextButton = elById(\"next\") as HTMLAnchorElement;\n    const upvoteButton = elById(\"upvote\") as HTMLButtonElement;\n    const downvoteButton = elById(\"downvote\") as HTMLButtonElement;\n    const reportButton = elById(\"report\") as HTMLAnchorElement | null;\n\n    const thisQuoteId = [elById(\"top\").getAttribute(\"quote-id\") as string];\n    const nextQuoteId = [nextButton.getAttribute(\"quote-id\") as string];\n    const params = window.location.search;\n\n    const keys = (() => {\n        const k = new URLSearchParams(params).get(\"keys\");\n        if (!(k && k.length)) {\n            return \"WASD\";\n        }\n        // for vim-like set keys to khjl\n        if (k.length === 4) {\n            return k.toUpperCase();\n        } else {\n            alert(\"Invalid keys given, using default.\");\n            return \"WASD\";\n        }\n    })(); // currently only letter keys are supported\n    elById(\"wasd\").innerText =\n        `${keys[0]} (Witzig), ${keys[2]} (Nicht Witzig), ` +\n        `${keys[1]} (Vorheriges) und ${keys[3]} (Nächstes)`;\n\n    document.onkeydown = (event) => {\n        switch (event.code) {\n            case `Key${keys[0]}`:\n                upvoteButton.click();\n                break;\n            case `Key${keys[1]}`:\n                window.history.back();\n                break;\n            case `Key${keys[2]}`:\n                downvoteButton.click();\n                break;\n            case `Key${keys[3]}`:\n                nextButton.click();\n        }\n    };\n\n    const shareButton = elById(\"share\") as HTMLAnchorElement;\n    const downloadButton = elById(\"download\") as HTMLAnchorElement;\n\n    const author = elById(\"author\") as HTMLAnchorElement;\n    const quote = elById(\"quote\") as HTMLAnchorElement;\n    const realAuthor = elById(\"real-author-name\") as HTMLAnchorElement;\n\n    const ratingText = elById(\"rating-text\") as HTMLDivElement;\n    const ratingImageContainer = elById(\n        \"rating-img-container\",\n    ) as HTMLDivElement;\n\n    nextButton.removeAttribute(\"href\");\n\n    function updateQuoteId(quoteId: string): void {\n        shareButton.href = `/zitate/share/${quoteId}${params}`;\n        downloadButton.href = `/zitate/${quoteId}.gif${params}`;\n        const [q_id, a_id] = quoteId.split(\"-\", 2);\n        quote.href = `/zitate/info/z/${q_id}${params}`;\n        author.href = `/zitate/info/a/${a_id}${params}`;\n        thisQuoteId[0] = quoteId;\n    }\n\n    function updateRating(rating) {\n        rating = rating.toString();\n        ratingText.innerText = rating;\n        if ([\"---\", \"???\", \"0\"].includes(rating)) {\n            ratingImageContainer.innerHTML = \"\";\n            return;\n        }\n        const ratingNum = Number.parseInt(rating);\n        const ratingImg = document.createElement(\"div\");\n        ratingImg.className = \"rating-img\" + (\n            ratingNum > 0 ? \" witzig\" : \" nicht-witzig\"\n        );\n        ratingImageContainer.innerHTML = (ratingImg.outerHTML + \" \")\n            .repeat(\n                Math.min(4, Math.abs(ratingNum)),\n            )\n            .trim();\n    }\n\n    function updateVote(vote) {\n        function update(btn, btn_vote, btn_vote_str) {\n            btn.disabled = false;\n            if (vote === btn_vote) {\n                // the vote of the button is active\n                btn.setAttribute(\"voted\", btn_vote_str);\n                btn.value = \"0\"; // if pressed again reset the vote\n            } else {\n                // the vote of the button isn't active\n                btn.removeAttribute(\"voted\");\n                btn.value = btn_vote_str; // if pressed, vote with the button\n            }\n        }\n        // update the upvote button\n        update(upvoteButton, 1, \"1\");\n        // update the downvote button\n        update(downvoteButton, -1, \"-1\");\n    }\n\n    function handleData(data) {\n        if (data[\"status\"]) {\n            console.error(data);\n            if (data[\"status\"] in [429, 420]) {\n                // ratelimited\n                alert(data[\"reason\"]);\n            }\n        } else if (data && data[\"id\"]) {\n            updateQuoteId(data[\"id\"]);\n            nextQuoteId[0] = data[\"next\"];\n            quote.innerText = `»${data[\"quote\"]}«`;\n            author.innerText = `- ${data[\"author\"]}`;\n            realAuthor.innerText = data[\"real_author\"];\n            realAuthor.href = `/zitate/info/a/${\n                data[\"real_author_id\"]\n            }${params}`;\n            if (reportButton) {\n                const reportHrefParams = new URLSearchParams(params);\n                reportHrefParams.set(\n                    \"subject\",\n                    `Das falsche Zitat ${data[\"id\"]} hat ein Problem`,\n                );\n                reportHrefParams.set(\n                    \"message\",\n                    `${quote.innerText} ${realAuthor.innerText}`,\n                );\n                reportButton.href = `/kontakt?${reportHrefParams}`;\n            }\n            updateRating(data[\"rating\"]);\n            updateVote(Number.parseInt(data[\"vote\"]));\n            return true;\n        }\n    }\n\n    PopStateHandlers[\"quotes\"] = (event: PopStateEvent) => (\n        event.state && handleData(event.state)\n    );\n\n    nextButton.onclick = () =>\n        get(`/api/zitate/${nextQuoteId[0]}`, params, (data) => {\n            if (!handleData(data)) {\n                return;\n            }\n\n            data[\"stateType\"] = \"quotes\";\n            data[\"url\"] = `/zitate/${data[\"id\"]}${params}`;\n            window.history.pushState(data, \"Falsche Zitate\", data[\"url\"]);\n            setLastLocation(data[\"url\"]);\n        });\n\n    const vote = (vote: string) =>\n        post(\n            `/api/zitate/${thisQuoteId[0]}`,\n            { vote: vote },\n            (data) => handleData(data),\n        );\n\n    for (const voteButton of [upvoteButton, downvoteButton]) {\n        voteButton.type = \"button\";\n        voteButton.onclick = () => {\n            upvoteButton.disabled = true;\n            downvoteButton.disabled = true;\n            vote(voteButton.value);\n            upvoteButton.disabled = false;\n            downvoteButton.disabled = false;\n        };\n    }\n}\n\nfor (\n    const autoSubmitEl of (document.getElementsByClassName(\n        \"auto-submit-element\",\n    ) as HTMLCollectionOf<HTMLInputElement>)\n) {\n    autoSubmitEl.onchange = () => autoSubmitEl.form.submit();\n}\n\nstartQuotes();\n// @license-end\n"],
  "mappings": "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",
  "names": ["nextButton", "upvoteButton", "downvoteButton", "reportButton", "thisQuoteId", "nextQuoteId", "params", "keys", "k", "event", "shareButton", "downloadButton", "author", "quote", "realAuthor", "ratingText", "ratingImageContainer", "updateQuoteId", "quoteId", "q_id", "a_id", "updateRating", "rating", "ratingNum", "ratingImg", "updateVote", "vote", "update", "btn", "btn_vote", "btn_vote_str", "handleData", "data", "reportHrefParams", "voteButton", "autoSubmitEl"]
}
