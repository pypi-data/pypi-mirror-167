# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: tetra_hub/public_api.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import timestamp_pb2 as google_dot_protobuf_dot_timestamp__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1atetra_hub/public_api.proto\x12\rtetra_hub.api\x1a\x1fgoogle/protobuf/timestamp.proto\"e\n\x14\x43reateUpdateResponse\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0e\n\x06status\x18\x02 \x01(\t\x12\x31\n\rcreation_time\x18\x03 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\"0\n\x0f\x46ileDownloadURL\x12\x0b\n\x03url\x18\x01 \x01(\t\x12\x10\n\x08\x66ilename\x18\x02 \x01(\t\"f\n\x04User\x12\n\n\x02id\x18\x01 \x01(\x04\x12\x12\n\nfirst_name\x18\x02 \x01(\t\x12\x11\n\tlast_name\x18\x03 \x01(\t\x12\r\n\x05\x65mail\x18\x04 \x01(\t\x12\x12\n\x05token\x18\x05 \x01(\tH\x00\x88\x01\x01\x42\x08\n\x06_token\"I\n\x08UserList\x12\"\n\x05users\x18\x01 \x03(\x0b\x32\x13.tetra_hub.api.User\x12\x19\n\x11total_query_count\x18\x02 \x01(\x04\"@\n\x12UserChangePassword\x12\x14\n\x0cold_password\x18\x01 \x01(\t\x12\x14\n\x0cnew_password\x18\x02 \x01(\t\"6\n\x06\x44\x65vice\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\n\n\x02os\x18\x02 \x01(\t\x12\x12\n\nattributes\x18\x03 \x03(\t\"O\n\nDeviceList\x12&\n\x07\x64\x65vices\x18\x01 \x03(\x0b\x32\x15.tetra_hub.api.Device\x12\x19\n\x11total_query_count\x18\x02 \x01(\x04\"F\n\nTensorType\x12\r\n\x05shape\x18\x01 \x03(\x04\x12)\n\x05\x64type\x18\x02 \x01(\x0e\x32\x1a.tetra_hub.api.TensorDtype\"O\n\x0fNamedTensorType\x12\x0c\n\x04name\x18\x01 \x01(\t\x12.\n\x0btensor_type\x18\x02 \x01(\x0b\x32\x19.tetra_hub.api.TensorType\"D\n\x13NamedTensorTypeList\x12-\n\x05types\x18\x01 \x03(\x0b\x32\x1e.tetra_hub.api.NamedTensorType\"\xac\x01\n\x05Model\x12\x10\n\x08model_id\x18\x01 \x01(\t\x12\"\n\x05owner\x18\x02 \x01(\x0b\x32\x13.tetra_hub.api.User\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x31\n\rcreation_time\x18\x04 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12,\n\nmodel_type\x18\x05 \x01(\x0e\x32\x18.tetra_hub.api.ModelType\"L\n\tModelList\x12$\n\x06models\x18\x01 \x03(\x0b\x32\x14.tetra_hub.api.Model\x12\x19\n\x11total_query_count\x18\x02 \x01(\x04\"\xe2\x04\n\nProfileJob\x12\x16\n\x0eprofile_job_id\x18\x01 \x01(\t\x12!\n\x04user\x18\x02 \x01(\x0b\x32\x13.tetra_hub.api.User\x12\x0f\n\x07user_id\x18\x03 \x01(\x04\x12#\n\x05model\x18\x04 \x01(\x0b\x32\x14.tetra_hub.api.Model\x12\x31\n\tjob_state\x18\x05 \x01(\x0e\x32\x1e.tetra_hub.api.ProfileJobState\x12%\n\x06\x64\x65vice\x18\x06 \x01(\x0b\x32\x15.tetra_hub.api.Device\x12<\n\x10tensor_type_list\x18\x07 \x01(\x0b\x32\".tetra_hub.api.NamedTensorTypeList\x12\x31\n\rcreation_time\x18\x08 \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12.\n\nstart_time\x18\t \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x33\n\x0f\x63ompletion_time\x18\n \x01(\x0b\x32\x1a.google.protobuf.Timestamp\x12\x1b\n\x0e\x65xecution_time\x18\x0b \x01(\x04H\x00\x88\x01\x01\x12\x1b\n\x0e\x66\x61ilure_reason\x18\x0c \x01(\tH\x01\x88\x01\x01\x12\x1e\n\x11peak_memory_usage\x18\r \x01(\x04H\x02\x88\x01\x01\x12\x0c\n\x04name\x18\x0e \x01(\t\x12\x0f\n\x07options\x18\x0f \x01(\tB\x11\n\x0f_execution_timeB\x11\n\x0f_failure_reasonB\x14\n\x12_peak_memory_usage\"T\n\x0eProfileJobList\x12\'\n\x04jobs\x18\x01 \x03(\x0b\x32\x19.tetra_hub.api.ProfileJob\x12\x19\n\x11total_query_count\x18\x02 \x01(\x04\"j\n\x10ProfileJobResult\x12\x16\n\x0eprofile_job_id\x18\x01 \x01(\t\x12\x32\n\x07profile\x18\x02 \x01(\x0b\x32\x1c.tetra_hub.api.ProfileDetailH\x00\x88\x01\x01\x42\n\n\x08_profile\"f\n\x0bLayerDetail\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x30\n\x0c\x63ompute_unit\x18\x02 \x01(\x0e\x32\x1a.tetra_hub.api.ComputeUnit\x12\x17\n\x0flayer_type_name\x18\x03 \x01(\t\"\xd9\x05\n\rProfileDetail\x12\x16\n\x0e\x65xecution_time\x18\x01 \x01(\x04\x12\x19\n\x11peak_memory_usage\x18\x02 \x01(\x04\x12\x16\n\tload_time\x18\x03 \x01(\x04H\x00\x88\x01\x01\x12\x31\n\rlayer_details\x18\x04 \x03(\x0b\x32\x1a.tetra_hub.api.LayerDetail\x12\x15\n\rmajor_version\x18\x05 \x01(\x04\x12\x15\n\rminor_version\x18\x06 \x01(\x04\x12#\n\x1b\x61\x66ter_cold_load_peak_memory\x18\x07 \x01(\x04\x12!\n\x19\x61\x66ter_compile_peak_memory\x18\x08 \x01(\x04\x12#\n\x1b\x61\x66ter_execution_peak_memory\x18\t \x01(\x04\x12#\n\x1b\x61\x66ter_warm_load_peak_memory\x18\n \x01(\x04\x12\'\n\x1f\x62\x65\x66ore_cold_load_current_memory\x18\x0b \x01(\x04\x12$\n\x1c\x62\x65\x66ore_cold_load_peak_memory\x18\x0c \x01(\x04\x12%\n\x1d\x62\x65\x66ore_compile_current_memory\x18\r \x01(\x04\x12\"\n\x1a\x62\x65\x66ore_compile_peak_memory\x18\x0e \x01(\x04\x12\'\n\x1f\x62\x65\x66ore_execution_current_memory\x18\x0f \x01(\x04\x12$\n\x1c\x62\x65\x66ore_execution_peak_memory\x18\x10 \x01(\x04\x12\'\n\x1f\x62\x65\x66ore_warm_load_current_memory\x18\x11 \x01(\x04\x12$\n\x1c\x62\x65\x66ore_warm_load_peak_memory\x18\x12 \x01(\x04\x12\x16\n\x0e\x63old_load_time\x18\x13 \x01(\x04\x12\x14\n\x0c\x63ompile_time\x18\x14 \x01(\x04\x12\x16\n\x0ewarm_load_time\x18\x15 \x01(\x04\x42\x0c\n\n_load_time*\x7f\n\x0fProfileJobState\x12\r\n\tUNDEFINED\x10\x00\x12\x08\n\x04\x44ONE\x10\n\x12\n\n\x06\x46\x41ILED\x10\x1e\x12\x14\n\x10OPTIMIZING_MODEL\x10\x32\x12\x16\n\x12WAITING_FOR_DEVICE\x10<\x12\x19\n\x15MEASURING_PERFORMANCE\x10\x46*/\n\x0bTensorDtype\x12\x13\n\x0fUNDEFINED_DTYPE\x10\x00\x12\x0b\n\x07\x46LOAT32\x10\x01*C\n\tModelType\x12\x18\n\x14UNDEFINED_MODEL_TYPE\x10\x00\x12\x0f\n\x0bTORCHSCRIPT\x10\x01\x12\x0b\n\x07MLMODEL\x10\x02*D\n\x0b\x43omputeUnit\x12\x1a\n\x16UNDEFINED_COMPUTE_UNIT\x10\x00\x12\x07\n\x03\x43PU\x10\x01\x12\x07\n\x03GPU\x10\x02\x12\x07\n\x03NPU\x10\x03\x62\x06proto3')

_PROFILEJOBSTATE = DESCRIPTOR.enum_types_by_name['ProfileJobState']
ProfileJobState = enum_type_wrapper.EnumTypeWrapper(_PROFILEJOBSTATE)
_TENSORDTYPE = DESCRIPTOR.enum_types_by_name['TensorDtype']
TensorDtype = enum_type_wrapper.EnumTypeWrapper(_TENSORDTYPE)
_MODELTYPE = DESCRIPTOR.enum_types_by_name['ModelType']
ModelType = enum_type_wrapper.EnumTypeWrapper(_MODELTYPE)
_COMPUTEUNIT = DESCRIPTOR.enum_types_by_name['ComputeUnit']
ComputeUnit = enum_type_wrapper.EnumTypeWrapper(_COMPUTEUNIT)
UNDEFINED = 0
DONE = 10
FAILED = 30
OPTIMIZING_MODEL = 50
WAITING_FOR_DEVICE = 60
MEASURING_PERFORMANCE = 70
UNDEFINED_DTYPE = 0
FLOAT32 = 1
UNDEFINED_MODEL_TYPE = 0
TORCHSCRIPT = 1
MLMODEL = 2
UNDEFINED_COMPUTE_UNIT = 0
CPU = 1
GPU = 2
NPU = 3


_CREATEUPDATERESPONSE = DESCRIPTOR.message_types_by_name['CreateUpdateResponse']
_FILEDOWNLOADURL = DESCRIPTOR.message_types_by_name['FileDownloadURL']
_USER = DESCRIPTOR.message_types_by_name['User']
_USERLIST = DESCRIPTOR.message_types_by_name['UserList']
_USERCHANGEPASSWORD = DESCRIPTOR.message_types_by_name['UserChangePassword']
_DEVICE = DESCRIPTOR.message_types_by_name['Device']
_DEVICELIST = DESCRIPTOR.message_types_by_name['DeviceList']
_TENSORTYPE = DESCRIPTOR.message_types_by_name['TensorType']
_NAMEDTENSORTYPE = DESCRIPTOR.message_types_by_name['NamedTensorType']
_NAMEDTENSORTYPELIST = DESCRIPTOR.message_types_by_name['NamedTensorTypeList']
_MODEL = DESCRIPTOR.message_types_by_name['Model']
_MODELLIST = DESCRIPTOR.message_types_by_name['ModelList']
_PROFILEJOB = DESCRIPTOR.message_types_by_name['ProfileJob']
_PROFILEJOBLIST = DESCRIPTOR.message_types_by_name['ProfileJobList']
_PROFILEJOBRESULT = DESCRIPTOR.message_types_by_name['ProfileJobResult']
_LAYERDETAIL = DESCRIPTOR.message_types_by_name['LayerDetail']
_PROFILEDETAIL = DESCRIPTOR.message_types_by_name['ProfileDetail']
CreateUpdateResponse = _reflection.GeneratedProtocolMessageType('CreateUpdateResponse', (_message.Message,), {
  'DESCRIPTOR' : _CREATEUPDATERESPONSE,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.CreateUpdateResponse)
  })
_sym_db.RegisterMessage(CreateUpdateResponse)

FileDownloadURL = _reflection.GeneratedProtocolMessageType('FileDownloadURL', (_message.Message,), {
  'DESCRIPTOR' : _FILEDOWNLOADURL,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.FileDownloadURL)
  })
_sym_db.RegisterMessage(FileDownloadURL)

User = _reflection.GeneratedProtocolMessageType('User', (_message.Message,), {
  'DESCRIPTOR' : _USER,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.User)
  })
_sym_db.RegisterMessage(User)

UserList = _reflection.GeneratedProtocolMessageType('UserList', (_message.Message,), {
  'DESCRIPTOR' : _USERLIST,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.UserList)
  })
_sym_db.RegisterMessage(UserList)

UserChangePassword = _reflection.GeneratedProtocolMessageType('UserChangePassword', (_message.Message,), {
  'DESCRIPTOR' : _USERCHANGEPASSWORD,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.UserChangePassword)
  })
_sym_db.RegisterMessage(UserChangePassword)

Device = _reflection.GeneratedProtocolMessageType('Device', (_message.Message,), {
  'DESCRIPTOR' : _DEVICE,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.Device)
  })
_sym_db.RegisterMessage(Device)

DeviceList = _reflection.GeneratedProtocolMessageType('DeviceList', (_message.Message,), {
  'DESCRIPTOR' : _DEVICELIST,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.DeviceList)
  })
_sym_db.RegisterMessage(DeviceList)

TensorType = _reflection.GeneratedProtocolMessageType('TensorType', (_message.Message,), {
  'DESCRIPTOR' : _TENSORTYPE,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.TensorType)
  })
_sym_db.RegisterMessage(TensorType)

NamedTensorType = _reflection.GeneratedProtocolMessageType('NamedTensorType', (_message.Message,), {
  'DESCRIPTOR' : _NAMEDTENSORTYPE,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.NamedTensorType)
  })
_sym_db.RegisterMessage(NamedTensorType)

NamedTensorTypeList = _reflection.GeneratedProtocolMessageType('NamedTensorTypeList', (_message.Message,), {
  'DESCRIPTOR' : _NAMEDTENSORTYPELIST,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.NamedTensorTypeList)
  })
_sym_db.RegisterMessage(NamedTensorTypeList)

Model = _reflection.GeneratedProtocolMessageType('Model', (_message.Message,), {
  'DESCRIPTOR' : _MODEL,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.Model)
  })
_sym_db.RegisterMessage(Model)

ModelList = _reflection.GeneratedProtocolMessageType('ModelList', (_message.Message,), {
  'DESCRIPTOR' : _MODELLIST,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.ModelList)
  })
_sym_db.RegisterMessage(ModelList)

ProfileJob = _reflection.GeneratedProtocolMessageType('ProfileJob', (_message.Message,), {
  'DESCRIPTOR' : _PROFILEJOB,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.ProfileJob)
  })
_sym_db.RegisterMessage(ProfileJob)

ProfileJobList = _reflection.GeneratedProtocolMessageType('ProfileJobList', (_message.Message,), {
  'DESCRIPTOR' : _PROFILEJOBLIST,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.ProfileJobList)
  })
_sym_db.RegisterMessage(ProfileJobList)

ProfileJobResult = _reflection.GeneratedProtocolMessageType('ProfileJobResult', (_message.Message,), {
  'DESCRIPTOR' : _PROFILEJOBRESULT,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.ProfileJobResult)
  })
_sym_db.RegisterMessage(ProfileJobResult)

LayerDetail = _reflection.GeneratedProtocolMessageType('LayerDetail', (_message.Message,), {
  'DESCRIPTOR' : _LAYERDETAIL,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.LayerDetail)
  })
_sym_db.RegisterMessage(LayerDetail)

ProfileDetail = _reflection.GeneratedProtocolMessageType('ProfileDetail', (_message.Message,), {
  'DESCRIPTOR' : _PROFILEDETAIL,
  '__module__' : 'tetra_hub.public_api_pb2'
  # @@protoc_insertion_point(class_scope:tetra_hub.api.ProfileDetail)
  })
_sym_db.RegisterMessage(ProfileDetail)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PROFILEJOBSTATE._serialized_start=2732
  _PROFILEJOBSTATE._serialized_end=2859
  _TENSORDTYPE._serialized_start=2861
  _TENSORDTYPE._serialized_end=2908
  _MODELTYPE._serialized_start=2910
  _MODELTYPE._serialized_end=2977
  _COMPUTEUNIT._serialized_start=2979
  _COMPUTEUNIT._serialized_end=3047
  _CREATEUPDATERESPONSE._serialized_start=78
  _CREATEUPDATERESPONSE._serialized_end=179
  _FILEDOWNLOADURL._serialized_start=181
  _FILEDOWNLOADURL._serialized_end=229
  _USER._serialized_start=231
  _USER._serialized_end=333
  _USERLIST._serialized_start=335
  _USERLIST._serialized_end=408
  _USERCHANGEPASSWORD._serialized_start=410
  _USERCHANGEPASSWORD._serialized_end=474
  _DEVICE._serialized_start=476
  _DEVICE._serialized_end=530
  _DEVICELIST._serialized_start=532
  _DEVICELIST._serialized_end=611
  _TENSORTYPE._serialized_start=613
  _TENSORTYPE._serialized_end=683
  _NAMEDTENSORTYPE._serialized_start=685
  _NAMEDTENSORTYPE._serialized_end=764
  _NAMEDTENSORTYPELIST._serialized_start=766
  _NAMEDTENSORTYPELIST._serialized_end=834
  _MODEL._serialized_start=837
  _MODEL._serialized_end=1009
  _MODELLIST._serialized_start=1011
  _MODELLIST._serialized_end=1087
  _PROFILEJOB._serialized_start=1090
  _PROFILEJOB._serialized_end=1700
  _PROFILEJOBLIST._serialized_start=1702
  _PROFILEJOBLIST._serialized_end=1786
  _PROFILEJOBRESULT._serialized_start=1788
  _PROFILEJOBRESULT._serialized_end=1894
  _LAYERDETAIL._serialized_start=1896
  _LAYERDETAIL._serialized_end=1998
  _PROFILEDETAIL._serialized_start=2001
  _PROFILEDETAIL._serialized_end=2730
# @@protoc_insertion_point(module_scope)
