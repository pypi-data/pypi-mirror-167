// This file is auto-generated by generate_parser_listener.py
// DO NOT EDIT

#ifndef SURELOG_VOBJECTTYPES_H
#define SURELOG_VOBJECTTYPES_H
#pragma once

#include <cstdint>
#include <set>
#include <unordered_set>

enum /* class */ VObjectType : uint16_t {  // TODO: convert to enum class
  sl0 = 1,
  sl1 = 2,
  slACCEPT_ON = 3,
  slALWAYS = 4,
  slAND = 5,
  slAccelerate_directive = 6,
  slAction_block = 7,
  slActual_arg_expr = 8,
  slActual_arg_list = 9,
  slAlwaysKeywd_Always = 10,
  slAlwaysKeywd_Comb = 11,
  slAlwaysKeywd_FF = 12,
  slAlwaysKeywd_Latch = 13,
  slAlways_construct = 14,
  slAlways_keyword = 15,
  slAnd_call = 16,
  slAnonymous_program = 17,
  slAnonymous_program_item = 18,
  slAnsi_port_declaration = 19,
  slArgument = 20,
  slArray_manipulation_call = 21,
  slArray_member_label = 22,
  slArray_method_name = 23,
  slArray_pattern_key = 24,
  slArray_range_expression = 25,
  slAssert_property_statement = 26,
  slAssertion_item = 27,
  slAssertion_item_declaration = 28,
  slAssertion_variable_declaration = 29,
  slAssign = 30,
  slAssignOp_Add = 31,
  slAssignOp_ArithShiftLeft = 32,
  slAssignOp_ArithShiftRight = 33,
  slAssignOp_Assign = 34,
  slAssignOp_BitwAnd = 35,
  slAssignOp_BitwLeftShift = 36,
  slAssignOp_BitwOr = 37,
  slAssignOp_BitwRightShift = 38,
  slAssignOp_BitwXor = 39,
  slAssignOp_Div = 40,
  slAssignOp_Modulo = 41,
  slAssignOp_Mult = 42,
  slAssignOp_Sub = 43,
  slAssignment_operator = 44,
  slAssignment_pattern = 45,
  slAssignment_pattern_expression = 46,
  slAssignment_pattern_expression_type = 47,
  slAssignment_pattern_key = 48,
  slAssignment_pattern_net_lvalue = 49,
  slAssignment_pattern_variable_lvalue = 50,
  slAssociative_dimension = 51,
  slAssume_property_statement = 52,
  slAttr_name = 53,
  slAttr_spec = 54,
  slAttribute_instance = 55,
  slAutoexpand_vectornets_directive = 56,
  slBegin_keywords_directive = 57,
  slBinModOp_BitwAnd = 58,
  slBinModOp_BitwOr = 59,
  slBinModOp_BitwXor = 60,
  slBinModOp_Equiv = 61,
  slBinModOp_LogicAnd = 62,
  slBinModOp_LogicOr = 63,
  slBinModOp_NotEqual = 64,
  slBinModOp_ReductXnor1 = 65,
  slBinModOp_ReductXnor2 = 66,
  slBinOp_ArithShiftLeft = 67,
  slBinOp_ArithShiftRight = 68,
  slBinOp_BitwAnd = 69,
  slBinOp_BitwOr = 70,
  slBinOp_BitwXor = 71,
  slBinOp_Div = 72,
  slBinOp_Equiv = 73,
  slBinOp_Equivalence = 74,
  slBinOp_FourStateLogicEqual = 75,
  slBinOp_FourStateLogicNotEqual = 76,
  slBinOp_Great = 77,
  slBinOp_GreatEqual = 78,
  slBinOp_Imply = 79,
  slBinOp_Less = 80,
  slBinOp_LessEqual = 81,
  slBinOp_LogicAnd = 82,
  slBinOp_LogicOr = 83,
  slBinOp_Minus = 84,
  slBinOp_Mult = 85,
  slBinOp_MultMult = 86,
  slBinOp_Not = 87,
  slBinOp_Percent = 88,
  slBinOp_Plus = 89,
  slBinOp_ReductNand = 90,
  slBinOp_ReductNor = 91,
  slBinOp_ReductXnor1 = 92,
  slBinOp_ReductXnor2 = 93,
  slBinOp_ShiftLeft = 94,
  slBinOp_ShiftRight = 95,
  slBinOp_WildEqual = 96,
  slBinOp_WildNotEqual = 97,
  slBinOp_WildcardEqual = 98,
  slBinOp_WildcardNotEqual = 99,
  slBind_directive = 100,
  slBind_instantiation = 101,
  slBins_Bins = 102,
  slBins_Ignore = 103,
  slBins_Illegal = 104,
  slBins_expression = 105,
  slBins_or_empty = 106,
  slBins_or_options = 107,
  slBins_selection = 108,
  slBins_selection_or_option = 109,
  slBit_select = 110,
  slBlock_event_expression = 111,
  slBlock_item_declaration = 112,
  slBlocking_assignment = 113,
  slBoolean_abbrev = 114,
  slBreakStmt = 115,
  slBuilt_in_method_call = 116,
  slCR = 117,
  slCase = 118,
  slCaseX = 119,
  slCaseZ = 120,
  slCase_generate_construct = 121,
  slCase_generate_item = 122,
  slCase_inside_item = 123,
  slCase_item = 124,
  slCase_keyword = 125,
  slCase_pattern_item = 126,
  slCase_statement = 127,
  slCast = 128,
  slCasting_type = 129,
  slCell_clause = 130,
  slCelldefine_directive = 131,
  slChandle_type = 132,
  slCharge_strength = 133,
  slChecker = 134,
  slChecker_declaration = 135,
  slChecker_generate_item = 136,
  slChecker_instantiation = 137,
  slChecker_or_generate_item = 138,
  slChecker_or_generate_item_declaration = 139,
  slChecker_port_item = 140,
  slChecker_port_list = 141,
  slClass = 142,
  slClassItemQualifier_Local = 143,
  slClassItemQualifier_Protected = 144,
  slClassItemQualifier_Static = 145,
  slClass_constraint = 146,
  slClass_constructor_declaration = 147,
  slClass_constructor_prototype = 148,
  slClass_declaration = 149,
  slClass_item = 150,
  slClass_keyword = 151,
  slClass_method = 152,
  slClass_new = 153,
  slClass_property = 154,
  slClass_scope = 155,
  slClass_type = 156,
  slClockingDir_Inout = 157,
  slClockingDir_Input = 158,
  slClockingDir_InputOutput = 159,
  slClockingDir_Output = 160,
  slClocking_decl_assign = 161,
  slClocking_declaration = 162,
  slClocking_drive = 163,
  slClocking_event = 164,
  slClocking_item = 165,
  slClocking_skew = 166,
  slClockvar = 167,
  slClockvar_expression = 168,
  slCloseParens = 169,
  slCmosSwitchType_Cmos = 170,
  slCmosSwitchType_RCmos = 171,
  slCmos_switch_instance = 172,
  slColumnPartSelectOp = 173,
  slCombinational_body = 174,
  slCombinational_entry = 175,
  slComma_operator = 176,
  slComments = 177,
  slComplex_func_call = 178,
  slConcatenation = 179,
  slConcurrent_assertion_item = 180,
  slConcurrent_assertion_item_declaration = 181,
  slConcurrent_assertion_statement = 182,
  slCond_predicate = 183,
  slConditional_generate_construct = 184,
  slConditional_operator = 185,
  slConditional_statement = 186,
  slConfig = 187,
  slConfig_declaration = 188,
  slConfig_rule_statement = 189,
  slConsecutive_repetition = 190,
  slConstSelect = 191,
  slConst_or_range_expression = 192,
  slConst_type = 193,
  slConstantSelect = 194,
  slConstant_assignment_pattern_expression = 195,
  slConstant_bit_select = 196,
  slConstant_cast = 197,
  slConstant_concatenation = 198,
  slConstant_expression = 199,
  slConstant_indexed_range = 200,
  slConstant_mintypmax_expression = 201,
  slConstant_multiple_concatenation = 202,
  slConstant_param_expression = 203,
  slConstant_part_select_range = 204,
  slConstant_primary = 205,
  slConstant_range = 206,
  slConstant_range_expression = 207,
  slConstant_select = 208,
  slConstraint_block = 209,
  slConstraint_block_item = 210,
  slConstraint_declaration = 211,
  slConstraint_expression = 212,
  slConstraint_primary = 213,
  slConstraint_prototype = 214,
  slConstraint_set = 215,
  slContext_keyword = 216,
  slContinueStmt = 217,
  slContinuous_assign = 218,
  slControlled_timing_check_event = 219,
  slCover_cross = 220,
  slCover_point = 221,
  slCover_property_statement = 222,
  slCover_sequence_statement = 223,
  slCoverage_event = 224,
  slCoverage_option = 225,
  slCoverage_spec = 226,
  slCoverage_spec_or_option = 227,
  slCovergroup_declaration = 228,
  slCross_body = 229,
  slCross_body_item = 230,
  slCross_item = 231,
  slCycle_delay = 232,
  slCycle_delay_const_range_expression = 233,
  slCycle_delay_range = 234,
  slData_declaration = 235,
  slData_type = 236,
  slData_type_or_implicit = 237,
  slData_type_or_void = 238,
  slDeassign = 239,
  slDecPartSelectOp = 240,
  slDefault = 241,
  slDefaultSkew_Intput = 242,
  slDefaultSkew_IntputOutput = 243,
  slDefaultSkew_Output = 244,
  slDefault_clause = 245,
  slDefault_decay_time_directive = 246,
  slDefault_nettype_directive = 247,
  slDefault_trireg_strenght_directive = 248,
  slDefault_value = 249,
  slDeferred_immediate_assert_statement = 250,
  slDeferred_immediate_assertion_item = 251,
  slDeferred_immediate_assertion_statement = 252,
  slDeferred_immediate_assume_statement = 253,
  slDeferred_immediate_cover_statement = 254,
  slDefine_directive = 255,
  slDefparam_assignment = 256,
  slDelay2 = 257,
  slDelay3 = 258,
  slDelay_control = 259,
  slDelay_mode_distributed_directive = 260,
  slDelay_mode_path_directive = 261,
  slDelay_mode_unit_directive = 262,
  slDelay_mode_zero_directive = 263,
  slDelay_or_event_control = 264,
  slDelay_value = 265,
  slDelayed_data = 266,
  slDelayed_reference = 267,
  slDescription = 268,
  slDesign_statement = 269,
  slDirective_in_macro = 270,
  slDisable_portfaults_directive = 271,
  slDisable_statement = 272,
  slDistWeight_AssignRange = 273,
  slDistWeight_AssignValue = 274,
  slDist_item = 275,
  slDist_list = 276,
  slDo = 277,
  slDollar_fullskew_timing_check = 278,
  slDollar_hold_timing_check = 279,
  slDollar_keyword = 280,
  slDollar_nochange_timing_check = 281,
  slDollar_period_timing_check = 282,
  slDollar_recovery_timing_check = 283,
  slDollar_recrem_timing_check = 284,
  slDollar_removal_timing_check = 285,
  slDollar_root_keyword = 286,
  slDollar_setup_timing_check = 287,
  slDollar_setuphold_timing_check = 288,
  slDollar_skew_timing_check = 289,
  slDollar_timeskew_timing_check = 290,
  slDollar_width_timing_check = 291,
  slDot = 292,
  slDotStar = 293,
  slDpi_import_export = 294,
  slDrive_strength = 295,
  slDynamic_array_new = 296,
  slEVENTUALLY = 297,
  slEdge_Edge = 298,
  slEdge_Negedge = 299,
  slEdge_Posedge = 300,
  slEdge_control_specifier = 301,
  slEdge_descriptor = 302,
  slEdge_identifier = 303,
  slEdge_indicator = 304,
  slEdge_input_list = 305,
  slEdge_sensitive_path_declaration = 306,
  slEdge_symbol = 307,
  slElaboration_system_task = 308,
  slElse = 309,
  slElse_directive = 310,
  slElseif_directive = 311,
  slElseif_directive_in_macro_body = 312,
  slElsif_directive = 313,
  slElsif_directive_in_macro_body = 314,
  slEmpty_queue = 315,
  slEnableGateType_Bufif0 = 316,
  slEnableGateType_Bufif1 = 317,
  slEnableGateType_Notif0 = 318,
  slEnableGateType_Notif1 = 319,
  slEnable_gate_instance = 320,
  slEnable_portfaults_directive = 321,
  slEnd = 322,
  slEnd_edge_offset = 323,
  slEnd_keywords_directive = 324,
  slEndcase = 325,
  slEndcelldefine_directive = 326,
  slEndchecker = 327,
  slEndclass = 328,
  slEndclocking = 329,
  slEndconfig = 330,
  slEndfunction = 331,
  slEndgenerate = 332,
  slEndgroup = 333,
  slEndif_directive = 334,
  slEndinterface = 335,
  slEndmodule = 336,
  slEndpackage = 337,
  slEndprimitive = 338,
  slEndprogram = 339,
  slEndproperty = 340,
  slEndprotect_directive = 341,
  slEndprotected_directive = 342,
  slEndsequence = 343,
  slEndspecify = 344,
  slEndtable = 345,
  slEndtask = 346,
  slEnum_base_type = 347,
  slEnum_keyword = 348,
  slEnum_name_declaration = 349,
  slEscapedCR = 350,
  slEscaped_identifier = 351,
  slEscaped_macro_definition_body = 352,
  slEscaped_macro_definition_body_alt1 = 353,
  slEscaped_macro_definition_body_alt2 = 354,
  slEvent_based_flag = 355,
  slEvent_control = 356,
  slEvent_expression = 357,
  slEvent_trigger = 358,
  slEvent_type = 359,
  slEveryRule = 360,
  slExpand_vectornets_directive = 361,
  slExpect_property_statement = 362,
  slExport = 363,
  slExpression = 364,
  slExpression_or_cond_pattern = 365,
  slExpression_or_dist = 366,
  slExtends = 367,
  slExtern_constraint_declaration = 368,
  slExtern_qualifier = 369,
  slExtern_tf_declaration = 370,
  slFile_path_spec = 371,
  slFinal_construct = 372,
  slFirstMatch = 373,
  slFor = 374,
  slFor_initialization = 375,
  slFor_step = 376,
  slFor_step_assignment = 377,
  slFor_variable_declaration = 378,
  slForce = 379,
  slForeach = 380,
  slForever = 381,
  slFull_edge_sensitive_path_description = 382,
  slFull_path_description = 383,
  slFunction_body_declaration = 384,
  slFunction_data_type = 385,
  slFunction_data_type_or_implicit = 386,
  slFunction_declaration = 387,
  slFunction_name_decl = 388,
  slFunction_prototype = 389,
  slFunction_statement_or_null = 390,
  slGate_instantiation = 391,
  slGenerate_block = 392,
  slGenerate_interface_block = 393,
  slGenerate_interface_case_statement = 394,
  slGenerate_interface_conditional_statement = 395,
  slGenerate_interface_item = 396,
  slGenerate_interface_loop_statement = 397,
  slGenerate_interface_named_block = 398,
  slGenerate_item = 399,
  slGenerate_module_block = 400,
  slGenerate_module_case_statement = 401,
  slGenerate_module_conditional_statement = 402,
  slGenerate_module_item = 403,
  slGenerate_module_loop_statement = 404,
  slGenerate_module_named_block = 405,
  slGenerate_region = 406,
  slGenerated_interface_instantiation = 407,
  slGenerated_module_instantiation = 408,
  slGenericElementType = 409,
  slGenvar_assignment = 410,
  slGenvar_decl_assignment = 411,
  slGenvar_declaration = 412,
  slGenvar_initialization = 413,
  slGenvar_interface_case_item = 414,
  slGenvar_iteration = 415,
  slGenvar_module_case_item = 416,
  slGlobal = 417,
  slGoto_repetition = 418,
  slHierarchical_btf_identifier = 419,
  slHierarchical_identifier = 420,
  slHierarchical_instance = 421,
  slHighZ0 = 422,
  slHighZ1 = 423,
  slIF = 424,
  slIFF = 425,
  slIMPLIES = 426,
  slIdentifier = 427,
  slIdentifier_in_macro_body = 428,
  slIdentifier_list = 429,
  slIf_generate_construct = 430,
  slIfdef_directive = 431,
  slIfdef_directive_in_macro_body = 432,
  slIff = 433,
  slIfndef_directive = 434,
  slIfndef_directive_in_macro_body = 435,
  slImmediate_assertion_statement = 436,
  slImplements = 437,
  slImplicit_class_handle = 438,
  slImplicit_data_type = 439,
  slImport = 440,
  slIncDec_MinusMinus = 441,
  slIncDec_PlusPlus = 442,
  slIncPartSelectOp = 443,
  slInc_or_dec_expression = 444,
  slInc_or_dec_operator = 445,
  slInclude_directive = 446,
  slInclude_statement = 447,
  slIndexed_range = 448,
  slInitVal_1TickB0 = 449,
  slInitVal_1TickB1 = 450,
  slInitVal_1TickBX = 451,
  slInitVal_1TickBx = 452,
  slInitVal_1Tickb0 = 453,
  slInitVal_1Tickb1 = 454,
  slInitVal_1TickbX = 455,
  slInitVal_1Tickbx = 456,
  slInitVal_Integral = 457,
  slInitial_construct = 458,
  slInout_declaration = 459,
  slInput_declaration = 460,
  slInsideOp = 461,
  slInst_clause = 462,
  slInst_name = 463,
  slIntConst = 464,
  slIntVec_TypeBit = 465,
  slIntVec_TypeLogic = 466,
  slIntVec_TypeReg = 467,
  slIntegerAtomType_Byte = 468,
  slIntegerAtomType_Int = 469,
  slIntegerAtomType_Integer = 470,
  slIntegerAtomType_LongInt = 471,
  slIntegerAtomType_Shortint = 472,
  slIntegerAtomType_Time = 473,
  slInteger_atom_type = 474,
  slInteger_type = 475,
  slInteger_vector_type = 476,
  slInterface = 477,
  slInterface_ansi_header = 478,
  slInterface_class_declaration = 479,
  slInterface_class_item = 480,
  slInterface_class_keyword = 481,
  slInterface_class_method = 482,
  slInterface_class_type = 483,
  slInterface_declaration = 484,
  slInterface_identifier = 485,
  slInterface_instantiation = 486,
  slInterface_item = 487,
  slInterface_nonansi_header = 488,
  slInterface_or_generate_item = 489,
  slInterface_port_declaration = 490,
  slInterface_port_header = 491,
  slIntersect = 492,
  slJoin_any_keyword = 493,
  slJoin_keyword = 494,
  slJoin_none_keyword = 495,
  slJump_statement = 496,
  slLarge = 497,
  slLet_declaration = 498,
  slLet_formal_type = 499,
  slLet_port_item = 500,
  slLet_port_list = 501,
  slLevel_input_list = 502,
  slLevel_symbol = 503,
  slLiblist_clause = 504,
  slLibrary_declaration = 505,
  slLibrary_descriptions = 506,
  slLibrary_text = 507,
  slLifetime_Automatic = 508,
  slLifetime_Static = 509,
  slLine_directive = 510,
  slList_of_arguments = 511,
  slList_of_checker_port_connections = 512,
  slList_of_clocking_decl_assign = 513,
  slList_of_cross_items = 514,
  slList_of_defparam_assignments = 515,
  slList_of_interface_identifiers = 516,
  slList_of_net_assignments = 517,
  slList_of_net_decl_assignments = 518,
  slList_of_param_assignments = 519,
  slList_of_parameter_assignments = 520,
  slList_of_path_delay_expressions = 521,
  slList_of_path_inputs = 522,
  slList_of_path_outputs = 523,
  slList_of_port_connections = 524,
  slList_of_port_declarations = 525,
  slList_of_port_identifiers = 526,
  slList_of_ports = 527,
  slList_of_specparam_assignments = 528,
  slList_of_tf_variable_identifiers = 529,
  slList_of_type_assignments = 530,
  slList_of_variable_assignments = 531,
  slList_of_variable_decl_assignments = 532,
  slList_of_variable_identifiers = 533,
  slList_of_variable_port_identifiers = 534,
  slList_of_virtual_interface_decl = 535,
  slLocal_parameter_declaration = 536,
  slLoop_generate_construct = 537,
  slLoop_statement = 538,
  slLoop_variables = 539,
  slMacroInstanceNoArgs = 540,
  slMacroInstanceWithArgs = 541,
  slMacro_actual_args = 542,
  slMacro_arg = 543,
  slMacro_arguments = 544,
  slMacro_definition = 545,
  slMatches = 546,
  slMedium = 547,
  slMethodQualifier_ClassItem = 548,
  slMethodQualifier_Virtual = 549,
  slMethod_call = 550,
  slMethod_call_body = 551,
  slMethod_call_root = 552,
  slMethod_prototype = 553,
  slMintypmax_expression = 554,
  slModport_hierarchical_ports_declaration = 555,
  slModport_item = 556,
  slModport_ports_declaration = 557,
  slModport_simple_port = 558,
  slModport_simple_ports_declaration = 559,
  slModport_tf_port = 560,
  slModport_tf_ports_declaration = 561,
  slModule = 562,
  slModuleInstance = 563,
  slModule_ansi_header = 564,
  slModule_common_item = 565,
  slModule_declaration = 566,
  slModule_instantiation = 567,
  slModule_item = 568,
  slModule_keyword = 569,
  slModule_nonansi_header = 570,
  slModule_or_generate_item = 571,
  slModule_or_generate_item_declaration = 572,
  slModule_path_concatenation = 573,
  slModule_path_expression = 574,
  slModule_path_mintypmax_expression = 575,
  slModule_path_multiple_concatenation = 576,
  slModule_path_primary = 577,
  slMosSwitchType_NMos = 578,
  slMosSwitchType_PMos = 579,
  slMosSwitchType_RNMos = 580,
  slMosSwitchType_RPMos = 581,
  slMos_switch_instance = 582,
  slMultiline_args_macro_definition = 583,
  slMultiline_no_args_macro_definition = 584,
  slMultiple_concatenation = 585,
  slNInpGate_And = 586,
  slNInpGate_Nand = 587,
  slNInpGate_Nor = 588,
  slNInpGate_Or = 589,
  slNInpGate_Xnor = 590,
  slNInpGate_Xor = 591,
  slNONOVERLAPPED = 592,
  slNON_OVERLAP_IMPLY = 593,
  slNOT = 594,
  slNOutGate_Buf = 595,
  slNOutGate_Not = 596,
  slN_input_gate_instance = 597,
  slN_output_gate_instance = 598,
  slName_of_instance = 599,
  slNamed_checker_port_connection = 600,
  slNamed_parameter_assignment = 601,
  slNamed_port_connection = 602,
  slNetType_Supply0 = 603,
  slNetType_Supply1 = 604,
  slNetType_Tri = 605,
  slNetType_Tri0 = 606,
  slNetType_Tri1 = 607,
  slNetType_TriAnd = 608,
  slNetType_TriOr = 609,
  slNetType_TriReg = 610,
  slNetType_Uwire = 611,
  slNetType_Wand = 612,
  slNetType_Wire = 613,
  slNetType_Wor = 614,
  slNet_alias = 615,
  slNet_assignment = 616,
  slNet_decl_assignment = 617,
  slNet_declaration = 618,
  slNet_lvalue = 619,
  slNet_port_header = 620,
  slNet_port_type = 621,
  slNet_type = 622,
  slNet_type_declaration = 623,
  slNext_state = 624,
  slNoType = 625,
  slNoaccelerate_directive = 626,
  slNoexpand_vectornets_directive = 627,
  slNonBlockingTriggerEvent = 628,
  slNonIntType_Real = 629,
  slNonIntType_RealTime = 630,
  slNonIntType_ShortReal = 631,
  slNon_consecutive_repetition = 632,
  slNon_integer_type = 633,
  slNon_port_interface_item = 634,
  slNon_port_module_item = 635,
  slNon_port_program_item = 636,
  slNonblocking_assignment = 637,
  slNonrange_select = 638,
  slNonrange_variable_lvalue = 639,
  slNoremove_gatenames_directive = 640,
  slNoremove_netnames_directive = 641,
  slNosuppress_faults_directive = 642,
  slNotifier = 643,
  slNounconnected_drive_directive = 644,
  slNull = 645,
  slNull_keyword = 646,
  slNull_rule = 647,
  slNumber = 648,
  slNumber_1TickB0 = 649,
  slNumber_1TickB1 = 650,
  slNumber_1TickBX = 651,
  slNumber_1TickBx = 652,
  slNumber_1Tickb0 = 653,
  slNumber_1Tickb1 = 654,
  slNumber_1TickbX = 655,
  slNumber_1Tickbx = 656,
  slNumber_Integral = 657,
  slNumber_Real = 658,
  slNumber_Tick0 = 659,
  slNumber_Tick1 = 660,
  slNumber_TickB0 = 661,
  slNumber_TickB1 = 662,
  slNumber_Tickb0 = 663,
  slNumber_Tickb1 = 664,
  slOR = 665,
  slOVERLAPPED = 666,
  slOVERLAP_IMPLY = 667,
  slOpenParens = 668,
  slOpen_range_list = 669,
  slOperator_assignment = 670,
  slOr_call = 671,
  slOr_operator = 672,
  slOrdered_checker_port_connection = 673,
  slOrdered_parameter_assignment = 674,
  slOrdered_port_connection = 675,
  slOutput_declaration = 676,
  slOutput_symbol = 677,
  slOverloadOp_Div = 678,
  slOverloadOp_Equal = 679,
  slOverloadOp_Equiv = 680,
  slOverloadOp_Greater = 681,
  slOverloadOp_GreaterEqual = 682,
  slOverloadOp_Less = 683,
  slOverloadOp_LessEqual = 684,
  slOverloadOp_Minus = 685,
  slOverloadOp_MinusMinus = 686,
  slOverloadOp_Mult = 687,
  slOverloadOp_NotEqual = 688,
  slOverloadOp_Percent = 689,
  slOverloadOp_Plus = 690,
  slOverloadOp_PlusPlus = 691,
  slOverloadOp_StarStar = 692,
  slOverload_declaration = 693,
  slOverload_proto_formals = 694,
  slPackage = 695,
  slPackage_declaration = 696,
  slPackage_export_declaration = 697,
  slPackage_import_declaration = 698,
  slPackage_import_item = 699,
  slPackage_item = 700,
  slPackage_or_generate_item_declaration = 701,
  slPackage_scope = 702,
  slPacked_dimension = 703,
  slPacked_keyword = 704,
  slPaired_parens = 705,
  slPar_block = 706,
  slParallel_edge_sensitive_path_description = 707,
  slParallel_path_description = 708,
  slParam_assignment = 709,
  slParam_expression = 710,
  slParameter_declaration = 711,
  slParameter_override = 712,
  slParameter_port_declaration = 713,
  slParameter_port_list = 714,
  slParameter_value_assignment = 715,
  slPart_select_op = 716,
  slPart_select_op_column = 717,
  slPart_select_range = 718,
  slPassEnSwitch_RTranif0 = 719,
  slPassEnSwitch_RTranif1 = 720,
  slPassEnSwitch_Tranif0 = 721,
  slPassEnSwitch_Tranif1 = 722,
  slPassSwitch_RTran = 723,
  slPassSwitch_Tran = 724,
  slPass_enable_switch_instance = 725,
  slPass_switch_instance = 726,
  slPath_declaration = 727,
  slPath_delay_expression = 728,
  slPath_delay_value = 729,
  slPattern = 730,
  slPort = 731,
  slPortDir_Inout = 732,
  slPortDir_Inp = 733,
  slPortDir_Out = 734,
  slPortDir_Ref = 735,
  slPortInst = 736,
  slPort_declaration = 737,
  slPort_direction = 738,
  slPort_expression = 739,
  slPort_reference = 740,
  slPound_Pound_delay = 741,
  slPound_delay = 742,
  slPound_delay_value = 743,
  slPound_pound_delay = 744,
  slPragma_directive = 745,
  slPragma_expression = 746,
  slPragma_value = 747,
  slPrimary = 748,
  slPrimary_literal = 749,
  slPrimitive = 750,
  slPrimitiveInstance = 751,
  slPriority = 752,
  slProcedural_assertion_statement = 753,
  slProcedural_continuous_assignment = 754,
  slProcedural_timing_control = 755,
  slProcedural_timing_control_statement = 756,
  slProduction = 757,
  slProduction_item = 758,
  slProgram = 759,
  slProgram_ansi_header = 760,
  slProgram_declaration = 761,
  slProgram_generate_item = 762,
  slProgram_instantiation = 763,
  slProgram_item = 764,
  slProgram_nonansi_header = 765,
  slPropQualifier_ClassItem = 766,
  slPropQualifier_Rand = 767,
  slPropQualifier_Randc = 768,
  slProperty_actual_arg = 769,
  slProperty_case_item = 770,
  slProperty_declaration = 771,
  slProperty_expr = 772,
  slProperty_formal_type = 773,
  slProperty_instance = 774,
  slProperty_lvar_port_direction = 775,
  slProperty_port_item = 776,
  slProperty_port_list = 777,
  slProperty_spec = 778,
  slProtect_directive = 779,
  slProtected_directive = 780,
  slPs_identifier = 781,
  slPs_or_hierarchical_array_identifier = 782,
  slPs_or_hierarchical_identifier = 783,
  slPs_or_hierarchical_sequence_identifier = 784,
  slPs_type_identifier = 785,
  slPull0 = 786,
  slPull1 = 787,
  slPull_gate_instance = 788,
  slPulldown = 789,
  slPulldown_strength = 790,
  slPullup = 791,
  slPullup_strength = 792,
  slPulse_control_specparam = 793,
  slPulsestyle_declaration = 794,
  slPure = 795,
  slPure_keyword = 796,
  slPure_virtual_qualifier = 797,
  slQmark = 798,
  slQueue_dimension = 799,
  slREJECT_ON = 800,
  slRandcase_item = 801,
  slRandcase_statement = 802,
  slRandomQualifier_Rand = 803,
  slRandomQualifier_RandC = 804,
  slRandomize_call = 805,
  slRandsequence_statement = 806,
  slRange_expression = 807,
  slRange_list = 808,
  slRealConst = 809,
  slRef_declaration = 810,
  slReference_event = 811,
  slRelease = 812,
  slRemain_active_flag = 813,
  slRemove_gatename_directive = 814,
  slRemove_netname_directive = 815,
  slRepeat = 816,
  slRepeat_range = 817,
  slResetall_directive = 818,
  slRestrict_property_statement = 819,
  slReturnStmt = 820,
  slRs_case = 821,
  slRs_case_item = 822,
  slRs_code_block = 823,
  slRs_if_else = 824,
  slRs_prod = 825,
  slRs_production_list = 826,
  slRs_repeat = 827,
  slRs_rule = 828,
  slSTRONG = 829,
  slSYNC_ACCEPT_ON = 830,
  slSYNC_REJECT_ON = 831,
  slS_ALWAYS = 832,
  slS_EVENTUALLY = 833,
  slS_NEXTTIME = 834,
  slS_UNTIL = 835,
  slS_UNTIL_WITH = 836,
  slScalar_1TickB0 = 837,
  slScalar_1TickB1 = 838,
  slScalar_1Tickb0 = 839,
  slScalar_1Tickb1 = 840,
  slScalar_Integral = 841,
  slScalar_TickB0 = 842,
  slScalar_TickB1 = 843,
  slScalar_Tickb0 = 844,
  slScalar_Tickb1 = 845,
  slScalar_timing_check_condition = 846,
  slSelect = 847,
  slSelect_condition = 848,
  slSelect_expression = 849,
  slSeqFormatType_Data = 850,
  slSeqFormatType_Sequence = 851,
  slSeqFormatType_Untyped = 852,
  slSeqLvarPortDir_Inout = 853,
  slSeqLvarPortDir_Input = 854,
  slSeqLvarPortDir_Output = 855,
  slSeq_block = 856,
  slSeq_input_list = 857,
  slSequence_actual_arg = 858,
  slSequence_arg = 859,
  slSequence_declaration = 860,
  slSequence_expr = 861,
  slSequence_instance = 862,
  slSequence_list_of_arguments = 863,
  slSequence_match_item = 864,
  slSequence_method_call = 865,
  slSequence_port_item = 866,
  slSequence_port_list = 867,
  slSequential_body = 868,
  slSequential_entry = 869,
  slShowcancelled_declaration = 870,
  slSigned_directive = 871,
  slSigning = 872,
  slSigning_Signed = 873,
  slSigning_Unsigned = 874,
  slSimple_args_macro_definition = 875,
  slSimple_args_macro_definition_in_macro_body = 876,
  slSimple_immediate_assert_statement = 877,
  slSimple_immediate_assertion_statement = 878,
  slSimple_immediate_assume_statement = 879,
  slSimple_immediate_cover_statement = 880,
  slSimple_macro_definition_body = 881,
  slSimple_macro_definition_body_in_macro_body = 882,
  slSimple_no_args_macro_definition = 883,
  slSimple_no_args_macro_definition_in_macro_body = 884,
  slSimple_path_declaration = 885,
  slSimple_type = 886,
  slSlice_size = 887,
  slSlline = 888,
  slSmall = 889,
  slSolve_before_list = 890,
  slSource_text = 891,
  slSpaces = 892,
  slSpecify_block = 893,
  slSpecify_input_terminal_descriptor = 894,
  slSpecify_item = 895,
  slSpecify_output_terminal_descriptor = 896,
  slSpecify_terminal_descriptor = 897,
  slSpecparam_assignment = 898,
  slSpecparam_declaration = 899,
  slStamptime_condition = 900,
  slStart_edge_offset = 901,
  slState_dependent_path_declaration = 902,
  slStatement = 903,
  slStatement_item = 904,
  slStatement_or_null = 905,
  slStream_concatenation = 906,
  slStream_expression = 907,
  slStream_operator = 908,
  slStreaming_concatenation = 909,
  slStrength0 = 910,
  slStrength1 = 911,
  slString = 912,
  slStringConst = 913,
  slStringLiteral = 914,
  slString_blob = 915,
  slString_type = 916,
  slString_value = 917,
  slStrong0 = 918,
  slStrong1 = 919,
  slStruct_keyword = 920,
  slStruct_union = 921,
  slStruct_union_member = 922,
  slStructure_pattern_key = 923,
  slSubroutine_call = 924,
  slSubroutine_call_statement = 925,
  slSuper_dot_new = 926,
  slSuper_keyword = 927,
  slSupply0 = 928,
  slSupply1 = 929,
  slSuppress_faults_directive = 930,
  slSurelog_macro_not_defined = 931,
  slSv_file_directive = 932,
  slSv_interface = 933,
  slSv_line_directive = 934,
  slSv_package = 935,
  slSystem_task = 936,
  slSystem_task_names = 937,
  slSystem_timing_check = 938,
  slT01_path_delay_expression = 939,
  slT0x_path_delay_expression = 940,
  slT0z_path_delay_expression = 941,
  slT10_path_delay_expression = 942,
  slT1x_path_delay_expression = 943,
  slT1z_path_delay_expression = 944,
  slT_path_delay_expression = 945,
  slTagged = 946,
  slTagged_keyword = 947,
  slTask_body_declaration = 948,
  slTask_declaration = 949,
  slTask_name_decl = 950,
  slTask_prototype = 951,
  slText_blob = 952,
  slTfPortDir_ConstRef = 953,
  slTfPortDir_Inout = 954,
  slTfPortDir_Inp = 955,
  slTfPortDir_Out = 956,
  slTfPortDir_Ref = 957,
  slTf_item_declaration = 958,
  slTf_port_declaration = 959,
  slTf_port_direction = 960,
  slTf_port_item = 961,
  slTf_port_list = 962,
  slTfall_path_delay_expression = 963,
  slThis = 964,
  slThis_dot_super = 965,
  slThis_keyword = 966,
  slThreshold = 967,
  slThroughout = 968,
  slTimeUnitsDecl_TimePrecision = 969,
  slTimeUnitsDecl_TimePrecisionTimeUnit = 970,
  slTimeUnitsDecl_TimeUnit = 971,
  slTimeUnitsDecl_TimeUnitDiv = 972,
  slTimeUnitsDecl_TimeUnitTimePrecision = 973,
  slTime_literal = 974,
  slTime_unit = 975,
  slTimescale_directive = 976,
  slTimingCheckEventControl_Edge = 977,
  slTimingCheckEventControl_Negedge = 978,
  slTimingCheckEventControl_Posedge = 979,
  slTiming_check_condition = 980,
  slTiming_check_event = 981,
  slTiming_check_limit = 982,
  slTop_directives = 983,
  slTop_level_library_rule = 984,
  slTop_level_rule = 985,
  slTrans_list = 986,
  slTrans_range_list = 987,
  slTrans_set = 988,
  slTrise_path_delay_expression = 989,
  slTx0_path_delay_expression = 990,
  slTx1_path_delay_expression = 991,
  slTxz_path_delay_expression = 992,
  slType = 993,
  slType_declaration = 994,
  slType_reference = 995,
  slTz0_path_delay_expression = 996,
  slTz1_path_delay_expression = 997,
  slTz_path_delay_expression = 998,
  slTzx_path_delay_expression = 999,
  slUNTIL = 1000,
  slUNTIL_WITH = 1001,
  slUdp_ansi_declaration = 1002,
  slUdp_body = 1003,
  slUdp_declaration = 1004,
  slUdp_declaration_port_list = 1005,
  slUdp_initial_statement = 1006,
  slUdp_input_declaration = 1007,
  slUdp_instance = 1008,
  slUdp_instantiation = 1009,
  slUdp_nonansi_declaration = 1010,
  slUdp_output_declaration = 1011,
  slUdp_port_declaration = 1012,
  slUdp_port_list = 1013,
  slUdp_reg_declaration = 1014,
  slUnaryModOp_BitwAnd = 1015,
  slUnaryModOp_BitwOr = 1016,
  slUnaryModOp_BitwXor = 1017,
  slUnaryModOp_Not = 1018,
  slUnaryModOp_ReductNand = 1019,
  slUnaryModOp_ReductNor = 1020,
  slUnaryModOp_ReductXNor1 = 1021,
  slUnaryModOp_ReductXnor2 = 1022,
  slUnaryModOp_Tilda = 1023,
  slUnary_BitwAnd = 1024,
  slUnary_BitwOr = 1025,
  slUnary_BitwXor = 1026,
  slUnary_Minus = 1027,
  slUnary_Not = 1028,
  slUnary_Plus = 1029,
  slUnary_ReductNand = 1030,
  slUnary_ReductNor = 1031,
  slUnary_ReductXnor1 = 1032,
  slUnary_ReductXnor2 = 1033,
  slUnary_Tilda = 1034,
  slUnbased_unsized_literal = 1035,
  slUnconnected_drive_directive = 1036,
  slUndef_directive = 1037,
  slUndefineall_directive = 1038,
  slUnion_keyword = 1039,
  slUnique = 1040,
  slUnique0 = 1041,
  slUnique_call = 1042,
  slUnique_priority = 1043,
  slUniqueness_constraint = 1044,
  slUnpacked_dimension = 1045,
  slUnsigned_directive = 1046,
  slUnsized_dimension = 1047,
  slUnterminated_string = 1048,
  slUse_clause = 1049,
  slUse_clause_config = 1050,
  slUselib_directive = 1051,
  slValue_range = 1052,
  slVar_data_type = 1053,
  slVar_type = 1054,
  slVariable_assignment = 1055,
  slVariable_decl_assignment = 1056,
  slVariable_declaration = 1057,
  slVariable_dimension = 1058,
  slVariable_impl_declaration = 1059,
  slVariable_lvalue = 1060,
  slVariable_port_header = 1061,
  slVariable_port_type = 1062,
  slVirtual = 1063,
  slVirtual_interface_declaration = 1064,
  slWEAK = 1065,
  slWait_statement = 1066,
  slWeak0 = 1067,
  slWeak1 = 1068,
  slWhile = 1069,
  slWith = 1070,
  slWithin = 1071,
  slX = 1072,
  slXor_call = 1073,
  slZ = 1074,
  sl_INVALID_ = 1075,
};

typedef std::set<VObjectType> VObjectTypeSet;
typedef std::unordered_set<VObjectType> VObjectTypeUnorderedSet;

#endif // SURELOG_VOBJECTTYPES_H
