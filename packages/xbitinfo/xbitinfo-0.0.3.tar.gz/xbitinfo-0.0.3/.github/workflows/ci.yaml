name: CI  # based on https://github.com/pydata/xarray/blob/master/.github/workflows/ci.yaml

on:
  pull_request:
  workflow_dispatch: # allows you to trigger manually

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  detect-ci-trigger:
    name: detect ci trigger
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    outputs:
      triggered: ${{ steps.detect-trigger.outputs.trigger-found }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 2
      - uses: xarray-contrib/ci-trigger@v1.1
        id: detect-trigger
        with:
          keyword: "[skip-ci]"

  test:  # Runs testing suite with minimal dependencies
    name: pytest
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
        run:
          shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
        with:
            fetch-depth: 0 # Fetch all history for all branches and tags.
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge
          mamba-version: '*'
          activate-environment: bitinfo
          python-version: 3.8
      - name: Set up conda environment
        run: |
          mamba env update -f environment.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: install xbitinfo
        run: |
          pip install .
      - name: Run tests
        run: pytest

  doctest:  # tests all docstrings
    name: doctests
    runs-on: "ubuntu-latest"
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v3
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channels: conda-forge
          mamba-version: "*"
          activate-environment: bitinfo
          auto-update-conda: false
          python-version: 3.8
      - name: Install conda dependencies
        run: |
          mamba env update -f environment.yml
      - name: Install xbitinfo
        run: |
          python -m pip install -e .
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: Run doctests
        run: |
          python -m pytest --doctest-modules xbitinfo --ignore xbitinfo/tests

  test_notebooks:  # Checks that notebooks complete without failure
    name: "notebooks"
    runs-on: ubuntu-latest
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v2
      - name: Set up conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: false
          channels: conda-forge
          mamba-version: '*'
          activate-environment: bitinfo
          python-version: 3.8
      - name: Set up conda environment
        run: |
          mamba env update -f environment.yml
      - name: Conda info
        run: conda info
      - name: Conda list
        run: conda list
      - name: install xbitinfo
        run: |
          pip install .
      - name: Test notebooks
        run: |
          python -m ipykernel install --user --name bitinfo
          jupyter nbconvert --to html --execute docs/*.ipynb --ExecutePreprocessor.kernel_name=bitinfo

  install:  # Installs xbitinfo on various OS without conda
    name: install xbitinfo, ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    needs: detect-ci-trigger
    if: needs.detect-ci-trigger.outputs.triggered == 'false'
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest", "macos-latest", "windows-latest"]
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0 # Fetch all history for all branches and tags.
    - name: Setup python
      uses: actions/setup-python@v3
      with:
        python-version: 3.8
    - name: "Set up Julia"
      uses: julia-actions/setup-julia@v1.6.0
      with:
        version: "1.7.1"
    - name: Install dependencies
      run: |
        pip install .
        python -c "import xbitinfo"
