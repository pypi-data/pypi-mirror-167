import{d as B,u as D,ak as w,M as d,r as C,f as a,o as x,e as I,w as c,j as s,aI as g,aJ as $,aD as A,aE as E,aB as N,g as P,au as k,a0 as p,s as R}from"./index.ac74b82c.js";import{u as S}from"./useRouteParam.fc30bbeb.js";const F=B({__name:"BlockEdit",async setup(T){let o,n;const u=D(),l=S("blockDocumentId"),e=([o,n]=w(()=>k.getBlockDocument(l.value)),o=await o,n(),o),{blockType:_,blockSchema:f}=e,t=d(e.data),i=d(e.name);function b(){k.updateBlockDocument(e.id,{data:t.value}).then(()=>{p("Block updated successfully","success"),u.push(R.block(l.value))}).catch(r=>{p("Failed to update block","error"),console.error(r)})}function y(){u.back()}return(r,m)=>{const h=C("p-layout-default");return a(e)?(x(),I(h,{key:0,class:"block-edit"},{header:c(()=>[s(a(g),{"block-document":a(e)},null,8,["block-document"])]),default:c(()=>[s(a(N),{"block-type":a(_)},{default:c(()=>[s(a($),A({data:t.value,"onUpdate:data":m[0]||(m[0]=v=>t.value=v)},{name:i.value,blockSchema:a(f)},E({submit:b,cancel:y})),null,16,["data"])]),_:1},8,["block-type"])]),_:1})):P("",!0)}}});export{F as default};
