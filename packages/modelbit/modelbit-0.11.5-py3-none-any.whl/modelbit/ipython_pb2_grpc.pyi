"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import abc
import grpc
import ipython_pb2
import typing

class KernelWrapperStub:
    def __init__(self, channel: grpc.Channel) -> None: ...
    ExecuteCode: grpc.UnaryStreamMultiCallable[
        ipython_pb2.CodeRequest,
        ipython_pb2.JupyterMessage]

    CompleteCode: grpc.UnaryStreamMultiCallable[
        ipython_pb2.CodeRequest,
        ipython_pb2.JupyterMessage]

    InspectCode: grpc.UnaryStreamMultiCallable[
        ipython_pb2.CodeRequest,
        ipython_pb2.JupyterMessage]

    ShutdownKernel: grpc.UnaryUnaryMultiCallable[
        ipython_pb2.ShutdownRequest,
        ipython_pb2.EmptyMessage]

    InterruptKernel: grpc.UnaryUnaryMultiCallable[
        ipython_pb2.EmptyMessage,
        ipython_pb2.EmptyMessage]

    NotebookStream: grpc.StreamStreamMultiCallable[
        ipython_pb2.NotebookRequest,
        ipython_pb2.JupyterMessage]


class KernelWrapperServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def ExecuteCode(self,
        request: ipython_pb2.CodeRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ipython_pb2.JupyterMessage]: ...

    @abc.abstractmethod
    def CompleteCode(self,
        request: ipython_pb2.CodeRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ipython_pb2.JupyterMessage]: ...

    @abc.abstractmethod
    def InspectCode(self,
        request: ipython_pb2.CodeRequest,
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ipython_pb2.JupyterMessage]: ...

    @abc.abstractmethod
    def ShutdownKernel(self,
        request: ipython_pb2.ShutdownRequest,
        context: grpc.ServicerContext,
    ) -> ipython_pb2.EmptyMessage: ...

    @abc.abstractmethod
    def InterruptKernel(self,
        request: ipython_pb2.EmptyMessage,
        context: grpc.ServicerContext,
    ) -> ipython_pb2.EmptyMessage: ...

    @abc.abstractmethod
    def NotebookStream(self,
        request_iterator: typing.Iterator[ipython_pb2.NotebookRequest],
        context: grpc.ServicerContext,
    ) -> typing.Iterator[ipython_pb2.JupyterMessage]: ...


def add_KernelWrapperServicer_to_server(servicer: KernelWrapperServicer, server: grpc.Server) -> None: ...
