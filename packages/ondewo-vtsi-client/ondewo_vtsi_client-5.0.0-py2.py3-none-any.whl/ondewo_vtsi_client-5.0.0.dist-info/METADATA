Metadata-Version: 2.1
Name: ondewo-vtsi-client
Version: 5.0.0
Summary: exposes the ondewo-vtsi endpoints in a user-friendly way
Home-page: https://github.com/ondewo/ondewo-vtsi-client-python
Author: ONDEWO GbmH
Author-email: info@ondewo.com
License: UNKNOWN
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: Operating System :: OS Independent
Classifier: Development Status :: 3 - Alpha
Classifier: Topic :: Software Development :: Libraries
Requires-Python: >=2.7, !=3.0.1
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: dataclasses-json (==0.5.4)
Requires-Dist: polling (==0.3.2)
Requires-Dist: pytest (==7.1.2)
Requires-Dist: regex
Requires-Dist: grpcio (>=1.46.3)
Requires-Dist: grpcio-reflection (>=1.46.3)
Requires-Dist: grpcio-tools (>=1.46.3)
Requires-Dist: mypy-protobuf (==3.2.0)
Requires-Dist: google-api-core (>=2.8.1)
Requires-Dist: googleapis-common-protos (>=1.56.2)

<p align="center">
    <a href="https://www.ondewo.com">
      <img alt="ONDEWO Logo" src="https://raw.githubusercontent.com/ondewo/ondewo-logos/master/github/ondewo_logo_github_2.png"/>
    </a>
  <h1 align="center">
    ONDEWO Voice Client
  </h1>
</p>

# Ondewo VTSI Client Python

The vtsi client allows for easy control of the ONDEWO VTSI server. With it, you can configure the connection to text-to-speech, speech-to-text, conversational-ai etc. It allows for making large numbers of voip-calls in parallel, and returns detailed logs regarding the status of the calls.

## Quickstart

1) install all the dependencies (`make install`)
2) set up ssh tunnel to the voip-server machine (`ssh -fNL 40045:localhost:40045 <machine ip>`)

## Ipython example
```
from ondewo.vtsi.voip_server_client import VtsiServerClient

voip_host = 'localhost'
voip_port = '40045'
client = VtsiServerClient.get_minimal_client(voip_host=voip_host, voip_port=voip_port)

ids = client.get_call_ids()
for id in ids:
    status = client.get_instance_status(id)
    try:
        health = status.helth
    except:
        health = None
    try:
        log = status.last_log
    except:
        log = None
    print(f"call: {id}, health: {health}, last_log: {log}")
```

## Script example
```
python script.py
```


